{"version":3,"sources":["../../src/layout.js","../../../../src/accounts/vesting.ts","../../../../src/accounts/safe.ts","../../../../src/accounts/registrar.ts","../../../../src/accounts/reward-event-q.ts","../../../../src/meta-entity/instruction.ts","../../../src/transaction-instruction.ts","../../../../../src/meta-entity/accounts/mqueue.ts","../../src/tokens_and_markets.ts","../../../src/index.ts","../../src/index.js","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../../src/simulate-transaction.ts","../../../src/client.ts","../../../../src/accounts/entity.ts","../../../../src/accounts/member.ts","../../../../src/accounts/pending-withdrawal.ts","../../../../src/accounts/locked-vendor.ts","../../../../src/accounts/unlocked-vendor.ts","../../../../../src/meta-entity/accounts/metadata.ts","../../../../src/client/accounts.ts","../../src/market.ts","../../src/slab.ts","../../../src/provider.ts","../../../src/token.ts","../../../src/networks.ts","../../../src/connection.ts","store/actions.ts","store/reducer.ts","store/index.ts","../../../../src/client/index.ts","components/common/WalletProvider.tsx","components/common/BootstrapProvider.tsx","components/common/Header.tsx","skin/index.ts","components/common/Scroll.tsx","components/common/Messaging.tsx","components/common/Footer.tsx","components/common/Layout.tsx","components/common/OwnedTokenAccountsSelect.tsx","components/common/Notification.tsx","components/nodes/Entity.tsx","components/nodes/EntityGallery.tsx","components/Me.tsx","components/Stake.tsx","components/rewards/RewardsList.tsx","components/rewards/DropRewardButton.tsx","components/rewards/ClaimRewardButton.tsx","components/rewards/Rewards.tsx","components/lockups/NewVesting.tsx","components/common/MyNode.tsx","components/lockups/VestingAccountCard.tsx","components/lockups/Vestings.tsx","components/common/VestingAccountsSelect.tsx","pages/MyNode.tsx","App.tsx","reportWebVitals.ts","index.tsx","../../src/token-instructions.js","../../../src/instruction.ts","../../../../src/meta-entity/transaction.ts","../../../../src/accounts/whitelist.ts","../../../../src/accounts/ring.ts"],"names":["BNLayout","buffer_layout_1","Blob","b","layout_1","exports","feeTier","account","transaction","this","u32","zeros","ActionType","BootstrapState","initialState","common","bootstrapTrigger","shutdownTrigger","isWalletConnected","walletProvider","bootstrapState","NeedsBootstrap","network","networks","devnet","ownedTokenAccounts","lockup","vestings","registry","member","isReady","entities","entityMetadata","Map","pendingWithdrawals","vendors","store","createStore","state","action","newState","type","CommonAppWillBootstrap","IsBootstrapping","CommonAppDidBootstrap","Bootstrapped","CommonWalletSetProvider","item","CommonWalletDidConnect","CommonWalletDidDisconnect","CommonSetNetwork","label","CommonTriggerBootstrap","CommonTriggerShutdown","CommonDidShutdown","s","CommonOwnedTokenAccountsSet","LockupSetVestings","vestingAccounts","LockupUpdateVesting","map","v","publicKey","equals","vesting","LockupCreateVesting","unshift","LockupSetSafe","safe","RegistryCreateEntity","entity","RegistrySetEntities","RegistryUpdateEntity","e","toString","RegistrySetMember","data","RegistrySetPoolMint","poolTokenMint","poolMint","RegistrySetPoolMintMega","megaPoolTokenMint","poolMintMega","RegistrySetRegistrar","registrar","RegistrySetPendingWithdrawals","set","memberPublicKey","RegistryCreatePendingWithdrawal","oldPw","memberWithdrawals","has","get","pendingWithdrawal","RegistryUpdatePendingWithdrawal","allPendingWithdrawals","memberPendingWithdrawals","pw","RegistrySetMetadata","forEach","emd","RegistryCreateMetadata","entityPublicKey","metadata","RegistrySetRewardEventQueue","rewardEventQueue","RegistryCreateRewardVendor","vendor","useWallet","w","useContext","WalletContext","Error","React","createContext","WalletProvider","props","useSelector","useMemo","opts","preflightCommitment","commitment","connection","Connection","url","wallet","Wallet","provider","Provider","lockupClient","LockupClient","programId","lockupProgramId","registryClient","RegistryClient","registryProgramId","metaEntityProgramId","value","children","BootstrapProvider","dispatch","useDispatch","enqueueSnackbar","useSnackbar","bootstrap","useCallback","a","startSubscriptions","rewardQueueSubscribe","conn","accounts","rewardEventQueueConnect","on","memberSubscribe","membersWithBeneficiary","members","length","undefined","subscribeMember","poolTokenSubscribe","accountConnect","parseMintAccount","fetchRegistrar","fetchSafe","fetchEntityAccounts","allEntities","entityAccounts","allMetadata","defaultEntity","filter","pop","defaultMetadata","push","fetchOwnedTokenAccounts","token","getOwnedTokenAccounts","fetchVestingAccounts","allVestings","variant","autoHideDuration","shutdown","disconnect","rewardEventQueueDisconnect","err","console","error","useEffect","catch","m","memberConnect","pendingWithdrawalsForMember","Header","isAppReady","AppBar","position","style","background","color","Toolbar","display","justifyContent","width","SerumLogoButton","BarButton","hrefClient","href","srmFaucet","NetworkSelector","WalletConnectButton","UserSelector","history","useHistory","onClick","Button","flexDirection","height","alt","src","Link","textDecoration","target","Typography","fontSize","useState","anchorEl","setAnchorEl","handleClose","marginRight","currentTarget","marginLeft","Menu","open","Boolean","onClose","Object","keys","n","MenuItem","closeSnackbar","createStakeAccount","vaultAuthority","delegate","createMember","Select","displayEmpty","renderValue","overflow","onChange","IconButton","showDisconnect","connect","_skin","active","ready","notReady","inactive","deactivating","instance","Scroll","overflowY","flex","top","left","right","maxHeight","minHeight","Messages","messages","setMessages","message","setMessage","divRef","useRef","mqueue","mqueueConnect","chat","current","scrollIntoView","behavior","fetchMessages","sendMessage","from","ts","BN","Date","now","content","handleKeyPress","key","CircularProgress","textAlign","borderBottom","padding","fontWeight","name","paddingLeft","ref","marginTop","TextField","onKeyPress","size","marginBottom","Footer","chatDisplay","setChatDisplay","envDisplay","setEnvDisplay","isDisconnected","hasMember","zIndex","bottom","backgroundColor","borderTop","paddingRight","skin","borderTopLeftRadius","boxShadow","NetworkEnvironment","msrmFaucet","srm","msrm","authority","maxStakePerEntity","withdrawalTimelock","deactivationTimelock","whitelist","Layout","RiskBar","DisconnectedSplash","useStyles","makeStyles","theme","root","spacing","classes","className","LinearProgress","OwnedTokenAccountsSelect","p","mint","ota","fromAccount","setFromAccount","fullWidth","pk","pubkey","PublicKey","amount","ownedTokenAccount","float","withTx","snack","beforeLabel","afterLabel","execTx","tx","ViewTransactionOnExplorerButton","signature","explorerClusterSuffix","urlSuffix","component","rel","Entity","paddingTop","paddingBottom","leader","EntityActivityLabel","JoinButton","disableElevation","disableFocusRipple","disableRipple","StakeContent","Grid","container","BalanceGridItem","balances","sptAmount","sptMegaAmount","xs","Card","joinEntity","oldEntity","newEntity","switchEntity","updatedOldEntity","updatedNewEntity","EntityGallery","entityAddress","setEntityAddress","concat","pendingDeactivation","EntityDialog","NewButton","flexWrap","EntityCard","imageUrl","borderRadius","unloader","about","noBubble","textStyle","ActivityLabel","text","tStyle","assign","showDialog","setShowDialog","CreateEntityDialog","Dialog","maxWidth","DialogContent","setName","setAbout","setImageUrl","isCreateEnabled","createEntity","entityAccount","newMetadata","DialogTitle","margin","DialogActions","then","disabled","Me","MemberBalancesCard","tables","title","description","rows","balance","vault","stake","vaultStake","spt","pending","vaultPendingWithdrawal","vaultMega","vaultStakeMega","sptMega","vaultPendingWithdrawalMega","CardHeader","subheader","CardContent","t","BalanceTable","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","Stake","createPoolTokens","isMega","isLocked","balanceId","owner","u64","updatedEntity","redeemPoolTokens","startStakeWithdrawal","pwAccount","createSrmPool","shares","redeemSrmPool","createMsrmPool","redeemMsrmPool","PoolCard","create","redeem","RedemptionList","srmPoolAmount","setSrmPoolAmount","setIsLocked","pricePerShare","stakeRateMega","stakeRate","supply","FormControl","parseInt","FormControlLabel","control","Switch","checked","labelPlacement","idx","RedemptionListItem","isLast","l","beneficiary","sptLabel","pool","PendingWithdrawalButton","startTs","toNumber","toLocaleString","endTs","endPendingWithdrawal","endStakeWithdrawal","updatedPendingWithdrawal","burned","RewardsList","rewards","List","r","RewardListItem","rli","ListItem","ListItemText","primary","rewardEvent","reward","lockedAlloc","unlockedAlloc","setOpen","amountLabel","total","fromLabel","cursor","button","visibility","needsClaim","secondary","Collapse","in","timeout","unmountOnExit","RewardListItemDetails","poolTokenSupply","expiryTs","toLocaleDateString","expiryReceiver","PoolTabViewModel","RewardTypeViewModel","RewardListItemViewModel","ctx","event","tailCursor","eventInner","ownsPool","cmp","ownsPoolMega","ownsPoolShares","notYetClaimed","rewardsCursor","isEligible","lastStakeTs","DropRewardButton","DropRewardDialog","Srm","poolTab","setPoolTab","Unlocked","rewardTypeTab","setRewardTypeTab","Tabs","_e","Tab","Locked","Msrm","DropUnlockedForm","DropLockedForm","megaPoolMint","lockedRewardAmount","setLockedRewardAmount","setExpiryTs","depositor","setDepositor","mintLabel","setMintLabel","setMint","isSendEnabled","sendUnlockedReward","notification","dropUnlockedReward","depositorMint","DropVendorForm","onCancel","setEndTs","periodCount","setPeriodCount","sendLockedRewards","dropLockedReward","f","FormHelperText","InputLabel","id","InputLabelProps","shrink","InputProps","inputProps","min","d","getTime","placeholder","ClaimRewardButton","setToken","clickHandler","lockedRewardVendor","rewardVendorAuthority","nonce","vendorSigner","claimLockedReward","unlockedRewardVendor","claimUnlockedReward","Rewards","loadVendorIfNeeded","fromMessage","reverse","nextReward","sort","shift","Paper","NewVestingButton","NewVestingDialog","defaultEndDate","defaultEndTs","setBeneficiary","isValidBeneficiary","_","displayBeneficiaryError","timestamp","setTimestamp","amountStr","setAmountStr","isValidAmountStr","isNaN","displayAmountError","submitBtnEnabled","isLoading","setIsLoading","createVestingClickHandler","createVesting","depositAmount","vestingAccount","helperText","defaultValue","TabModel","VestingAccountCard","currencyLabel","tsOverflow","sub","mod","shiftedStartTs","period","div","vestingDates","Array","formatDate","rewardOverflow","startBalance","rewardPerPeriod","cumulativeVesting","k","startLabel","endLabel","availableForWithdrawal","setAvailableForWithdrawal","withdrawalAccount","setWithdrawalAccount","withdrawEnabled","gtn","withdraw","tokenAccount","newVesting","toBase58","outstanding","labels","series","options","axisY","FixedScaleAxis","low","high","ticks","axisX","lineSmooth","Interpolation","step","whitelistOwned","grantor","getMonth","getDate","getFullYear","Vestings","Container","fixed","disablePadding","VestingAccountsSelect","deposit","availableAmount","MyNode","tab","setTab","MyNodeBanner","Lockup","showDepositDialog","setShowDepositDialog","showWithdrawDialog","setShowWithdrawDialog","DepositDialog","WithdrawDialog","TransferDialog","contextText","onTransfer","coin","depositLocked","vaultOwner","withdrawLocked","srmMint","msrmMint","setAmount","setCoin","setFrom","setVesting","maxAmount","setMaxAmount","submitBtnDisabled","TransitionComponent","Transition","keepMounted","max","minWidth","forwardRef","Slide","direction","MyNodePage","App","createMuiTheme","palette","default","typography","fontFamily","join","overrides","CssBaseline","maxSnack","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","BufferLayout","u8","publicKeyLayout","LAYOUT","addVariant","struct"],"mappings":"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","file":"static/js/main.d318bfcc.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nexport const VESTING_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('safe'),\n    publicKey('beneficiary'),\n    publicKey('mint'),\n    publicKey('vault'),\n    publicKey('grantor'),\n    u64('outstanding'),\n    u64('startBalance'),\n    i64('startTs'),\n    i64('endTs'),\n    u64('periodCount'),\n    u64('whitelistOwned'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    return VESTING_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = VESTING_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultVesting() {\n    return {\n        initialized: false,\n        safe: new PublicKey(Buffer.alloc(32)),\n        beneficiary: new PublicKey(Buffer.alloc(32)),\n        mint: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        grantor: new PublicKey(Buffer.alloc(32)),\n        outstanding: new BN(0),\n        startBalance: new BN(0),\n        startTs: new BN(0),\n        endTs: new BN(0),\n        periodCount: new BN(0),\n        whitelistOwned: new BN(0),\n        nonce: 0,\n    };\n}\nexport const SIZE = encode(defaultVesting()).length;\n//# sourceMappingURL=vesting.js.map","import { struct } from 'buffer-layout';\nimport { bool, publicKey } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport const SAFE_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('authority'),\n    publicKey('whitelist'),\n]);\nexport function decode(data) {\n    return SAFE_LAYOUT.decode(data);\n}\nexport function encode(s) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = SAFE_LAYOUT.encode(s, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    authority: new PublicKey(Buffer.alloc(32)),\n    whitelist: new PublicKey(Buffer.alloc(32)),\n}).length;\n//# sourceMappingURL=safe.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 as borshU64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst REGISTRAR_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('authority'),\n    u8('nonce'),\n    borshU64('maxStakePerEntity'),\n    i64('withdrawalTimelock'),\n    i64('deactivationTimelock'),\n    publicKey('rewardEventQueue'),\n    publicKey('mint'),\n    publicKey('megaMint'),\n    publicKey('poolMint'),\n    publicKey('poolMintMega'),\n    borshU64('stakeRate'),\n    borshU64('stakeRateMega'),\n]);\nexport function decode(data) {\n    return REGISTRAR_LAYOUT.decode(data);\n}\nexport function encode(r) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = REGISTRAR_LAYOUT.encode(r, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    authority: new PublicKey(Buffer.alloc(32)),\n    nonce: 0,\n    maxStakePerEntity: new u64(0),\n    withdrawalTimelock: new u64(0),\n    deactivationTimelock: new u64(0),\n    rewardEventQueue: new PublicKey(Buffer.alloc(32)),\n    mint: new PublicKey(Buffer.alloc(32)),\n    megaMint: new PublicKey(Buffer.alloc(32)),\n    poolMint: new PublicKey(Buffer.alloc(32)),\n    poolMintMega: new PublicKey(Buffer.alloc(32)),\n    stakeRate: new u64(0),\n    stakeRateMega: new u64(0),\n}).length;\n//# sourceMappingURL=registrar.js.map","import { struct } from 'buffer-layout';\nimport { publicKey, u64, rustEnum } from '@project-serum/borsh';\nimport { Ring } from './ring';\nconst CAPACITY = 14598;\nconst MESSAGE_SIZE = 137;\nexport class RewardEventQueue extends Ring {\n    constructor(data) {\n        super(data, new RewardEventDecoder(), CAPACITY, MESSAGE_SIZE);\n        if (data.length != this.bufferSize()) {\n            throw new Error(`expected data length ${this.bufferSize()} got ${data.length}`);\n        }\n    }\n    static accountSize() {\n        return CAPACITY * MESSAGE_SIZE + Ring.MESSAGE_START;\n    }\n}\nclass RewardEventDecoder {\n    decode(data) {\n        return REWARD_EVENT_LAYOUT.decode(data);\n    }\n}\nconst REWARD_EVENT_LAYOUT = rustEnum([\n    struct([\n        publicKey('from'),\n        u64('total'),\n        publicKey('pool'),\n        publicKey('vendor'),\n        publicKey('mint'),\n    ], 'lockedAlloc'),\n    struct([\n        publicKey('from'),\n        u64('total'),\n        publicKey('pool'),\n        publicKey('vendor'),\n        publicKey('mint'),\n    ], 'unlockedAlloc'),\n]);\n//# sourceMappingURL=reward-event-q.js.map","import { struct } from 'buffer-layout';\nimport { option, publicKey, str, rustEnum, } from '@project-serum/borsh';\nimport { MESSAGE_LAYOUT } from './accounts/mqueue';\nconst META_ENTITY_INSTRUCTION_LAYOUT = rustEnum([\n    struct([\n        publicKey('entity'),\n        publicKey('authority'),\n        str('name'),\n        str('about'),\n        str('imageUrl'),\n        publicKey('chat'),\n    ], 'initialize'),\n    struct([\n        option(str(), 'name'),\n        option(str(), 'about'),\n        option(publicKey(), 'chat'),\n    ], 'updateMetaEntity'),\n    struct([MESSAGE_LAYOUT.replicate('msg')], 'sendMessage'),\n]);\nexport function decode(data) {\n    return META_ENTITY_INSTRUCTION_LAYOUT.decode(data);\n}\nexport function encode(i) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = META_ENTITY_INSTRUCTION_LAYOUT.encode(i, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=instruction.js.map","import { PublicKey, SystemProgram, TransactionInstruction, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { SIZE as VESTING_SIZE } from './accounts/vesting';\nimport * as instruction from './instruction';\nexport async function createVesting(provider, programId, safe, vesting, vault, mint, depositor, depositorAuthorityPubkey, beneficiary, endTs, periodCount, depositAmount) {\n    let { nonce, ixs } = await allocVestingIxs(provider, programId, safe, vesting, vault, mint, beneficiary);\n    return [\n        ...ixs,\n        // Create Vesting.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: safe, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId,\n            data: instruction.encode({\n                createVesting: {\n                    beneficiary,\n                    endTs,\n                    periodCount,\n                    depositAmount,\n                    nonce,\n                },\n            }),\n        }),\n    ];\n}\nexport async function allocVestingIxs(provider, programId, safe, vesting, vault, mint, beneficiary) {\n    const [vaultAuthority, nonce] = await PublicKey.findProgramAddress([safe.toBuffer(), beneficiary.toBuffer()], programId);\n    const createVaultInstructions = await createTokenAccountInstrs(provider, vault, mint, vaultAuthority);\n    return {\n        nonce,\n        ixs: [\n            ...createVaultInstructions,\n            // Allocate account.\n            SystemProgram.createAccount({\n                fromPubkey: provider.wallet.publicKey,\n                newAccountPubkey: vesting,\n                space: VESTING_SIZE,\n                lamports: await provider.connection.getMinimumBalanceForRentExemption(VESTING_SIZE),\n                programId,\n            }),\n        ],\n    };\n}\n//# sourceMappingURL=transaction-instruction.js.map","import { struct } from 'buffer-layout';\nimport { publicKey, u64, str } from '@project-serum/borsh';\nimport { Ring } from '../../accounts/ring';\nconst CAPACITY = 500;\nconst MESSAGE_SIZE = 320;\nexport class MQueue extends Ring {\n    constructor(data) {\n        super(data, new MessageDecoder(), CAPACITY, MESSAGE_SIZE);\n        if (data.length != this.bufferSize()) {\n            throw new Error(`expected data length ${this.bufferSize()} got ${data.length}`);\n        }\n    }\n    static accountSize() {\n        return CAPACITY * MESSAGE_SIZE + Ring.MESSAGE_START;\n    }\n}\nclass MessageDecoder {\n    decode(data) {\n        return decode(data);\n    }\n}\nexport const MESSAGE_LAYOUT = struct([\n    publicKey('from'),\n    u64('ts'),\n    str('content'),\n]);\nexport function decode(data) {\n    return MESSAGE_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = MESSAGE_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=mqueue.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    return 2;\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i64 = exports.u64 = exports.struct = exports.u32 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = buffer_layout_1.blob(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, 'le');\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout_1.blob(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout_1.u8();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout(buffer_layout_1.u8(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error('Invalid bool: ' + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(elementLayout, buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = buffer_layout_1.struct([\n        u64('tag'),\n        layout.replicate('data'),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error('Invalid tag, expected: ' +\n                tag.toString('hex') +\n                ', got: ' +\n                receivedTag.toString('hex'));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, data => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.blob(buffer_layout_1.offset(length, -length.span), 'data'),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, data => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), data => data.toString('utf-8'), s => Buffer.from(s, 'utf-8'), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property) {\n    const unionLayout = buffer_layout_1.union(buffer_layout_1.u8(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","import BN from 'bn.js';\nimport * as bs58 from 'bs58';\nimport { Account, SystemProgram, PublicKey, Transaction, TransactionInstruction, Connection, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { Provider, NodeWallet, networks, getTokenAccount, simulateTransaction, } from '@project-serum/common';\nimport * as instruction from './instruction';\nimport * as accounts from './accounts';\nimport { SIZE as SAFE_SIZE } from './accounts/safe';\nimport { SIZE as WHITELIST_SIZE, } from './accounts/whitelist';\nimport * as transactionIx from './transaction-instruction';\n// For all requests requiring an optional `Account` object, if none is provided,\n// the Client's provider Account will be used.\n//\n// For example,, when creating a vesting account, the beneficiary will default\n// to the provider.\nexport default class Client {\n    constructor(cfg) {\n        this.provider = cfg.provider;\n        this.programId = cfg.programId;\n        this.safe = cfg.safe;\n        this.accounts = new Accounts(cfg.provider, cfg.safe, cfg.programId);\n    }\n    // Connects to the devnet deployment of the lockup program.\n    static devnet(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('https://devnet.solana.com', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.devnet.lockupProgramId,\n            safe: networks.devnet.safe,\n        });\n    }\n    static localhost(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('http://localhost:8899', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.localhost.lockupProgramId,\n            safe: networks.localhost.safe,\n        });\n    }\n    static async initialize(provider, req) {\n        let { programId, authority } = req;\n        if (authority === undefined) {\n            authority = provider.wallet.publicKey;\n        }\n        const safe = new Account();\n        const whitelist = new Account();\n        let tx = new Transaction();\n        tx.add(\n        // Create Safe.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: safe.publicKey,\n            space: SAFE_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(SAFE_SIZE),\n            programId: programId,\n        }), \n        // Create Whitelist.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: whitelist.publicKey,\n            space: WHITELIST_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(WHITELIST_SIZE),\n            programId: programId,\n        }), \n        // Initialize Safe.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: safe.publicKey, isWritable: true, isSigner: false },\n                { pubkey: whitelist.publicKey, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                },\n            }),\n        }));\n        const signers = [safe, whitelist];\n        const txSig = await provider.send(tx, signers);\n        const client = new Client({\n            safe: safe.publicKey,\n            provider,\n            programId,\n        });\n        return [\n            client,\n            {\n                tx: txSig,\n                safe: safe.publicKey,\n                whitelist: whitelist.publicKey,\n            },\n        ];\n    }\n    async createVesting(req) {\n        let { beneficiary, endTs, periodCount, depositAmount, depositor, depositorAuthority, mint, } = req;\n        if (beneficiary === undefined) {\n            beneficiary = new PublicKey(Buffer.alloc(32));\n        }\n        if (mint === undefined) {\n            const dTokenAccount = await getTokenAccount(this.provider, depositor);\n            mint = dTokenAccount.mint;\n        }\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        const vesting = new Account();\n        const vault = new Account();\n        let createVestingIxs = await transactionIx.createVesting(this.provider, this.programId, this.safe, vesting.publicKey, vault.publicKey, mint, depositor, depositorAuthorityPubkey, beneficiary, endTs, periodCount, depositAmount);\n        const tx = new Transaction();\n        tx.add(...createVestingIxs);\n        let signers = [vesting, vault, depositorAuthority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            vesting: vesting.publicKey,\n        };\n    }\n    async claim(req) {\n        let { beneficiary, vesting } = req;\n        const beneficiaryAddress = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.safe, beneficiaryAddress);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryAddress, isWritable: false, isSigner: true },\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                claim: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async withdraw(req) {\n        let { amount, beneficiary, vesting, tokenAccount } = req;\n        const beneficiaryAddress = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const vestingAcc = await this.accounts.vesting(vesting);\n        const vault = vestingAcc.vault;\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.safe, beneficiaryAddress);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryAddress, isWritable: false, isSigner: true },\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: tokenAccount, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                withdraw: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async whitelistWithdraw(req) {\n        let { amount, instructionData, beneficiary, vesting, whitelistProgram, whitelistProgramVault, whitelistProgramVaultAuthority, relayAccounts, relaySigners, safe, } = req;\n        const beneficiaryAddress = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (safe === undefined) {\n            safe = await this.accounts.safe();\n        }\n        const vestingAcc = await this.accounts.vesting(vesting);\n        const vault = vestingAcc.vault;\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.safe, beneficiaryAddress);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryAddress, isWritable: false, isSigner: true },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: safe.whitelist, isWritable: false, isSigner: false },\n                { pubkey: whitelistProgram, isWritable: false, isSigner: false },\n                // Relay accounts.\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: whitelistProgramVault, isWritable: true, isSigner: false },\n                {\n                    pubkey: whitelistProgramVaultAuthority,\n                    isWritable: false,\n                    isSigner: false,\n                },\n            ].concat(relayAccounts),\n            programId: this.programId,\n            data: instruction.encode({\n                whitelistWithdraw: {\n                    amount,\n                    instructionData,\n                },\n            }),\n        }));\n        let signers = [beneficiary].concat(relaySigners);\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async whitelistDeposit(req) {\n        let { instructionData, beneficiary, vesting, whitelistProgram, whitelistProgramVault, whitelistProgramVaultAuthority, relayAccounts, relaySigners, safe, } = req;\n        const beneficiaryAddress = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (safe === undefined) {\n            safe = await this.accounts.safe();\n        }\n        const vestingAcc = await this.accounts.vesting(vesting);\n        const vault = vestingAcc.vault;\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.safe, beneficiaryAddress);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryAddress, isWritable: false, isSigner: true },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: safe.whitelist, isWritable: false, isSigner: false },\n                { pubkey: whitelistProgram, isWritable: false, isSigner: false },\n                // Relay accounts.\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: whitelistProgramVault, isWritable: true, isSigner: false },\n                {\n                    pubkey: whitelistProgramVaultAuthority,\n                    isWritable: false,\n                    isSigner: false,\n                },\n            ].concat(relayAccounts),\n            programId: this.programId,\n            data: instruction.encode({\n                whitelistDeposit: {\n                    instructionData,\n                },\n            }),\n        }));\n        let signers = [beneficiary].concat(relaySigners);\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async whitelistAdd(req) {\n        let { entry, authority } = req;\n        const authorityAddress = authority === undefined\n            ? this.provider.wallet.publicKey\n            : authority.publicKey;\n        const safe = await this.accounts.safe(this.safe);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: authorityAddress, isWritable: false, isSigner: true },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: safe.whitelist, isWritable: true, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                whitelistAdd: {\n                    entry,\n                },\n            }),\n        }));\n        let signers = [authority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async whitelistDelete(req) {\n        let { entry, authority } = req;\n        const authorityAddress = authority === undefined\n            ? this.provider.wallet.publicKey\n            : authority.publicKey;\n        const safe = await this.accounts.safe(this.safe);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: authorityAddress, isWritable: false, isSigner: true },\n                { pubkey: this.safe, isWritable: false, isSigner: false },\n                { pubkey: safe.whitelist, isWritable: true, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                whitelistDelete: {\n                    entry,\n                },\n            }),\n        }));\n        let signers = [authority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async setAuthority(req) {\n        throw new Error('not implemented');\n    }\n}\nclass Accounts {\n    constructor(provider, safeAddress, programId) {\n        this.provider = provider;\n        this.safeAddress = safeAddress;\n        this.programId = programId;\n    }\n    async safe(safeAddress) {\n        if (safeAddress === undefined) {\n            safeAddress = this.safeAddress;\n        }\n        const accountInfo = await this.provider.connection.getAccountInfo(safeAddress);\n        if (accountInfo === null) {\n            throw new Error(`Safe does not exist ${safeAddress}`);\n        }\n        return accounts.safe.decode(accountInfo.data);\n    }\n    async vesting(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Safe does not exist ${address}`);\n        }\n        return accounts.vesting.decode(accountInfo.data);\n    }\n    async whitelist(address) {\n        if (address === undefined) {\n            address = (await this.safe(this.safeAddress)).whitelist;\n        }\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Safe does not exist ${address}`);\n        }\n        return accounts.whitelist.decode(accountInfo.data);\n    }\n    async vaultAuthority(programId, safeAddress, beneficiary) {\n        const [pubkey, _nonce] = await PublicKey.findProgramAddress([safeAddress.toBuffer(), beneficiary.toBuffer()], programId);\n        return pubkey;\n    }\n    async availableForWithdrawal(vesting) {\n        let tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: vesting, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                availableForWithdrawal: {},\n            }),\n        }));\n        tx.setSigners(...[this.provider.wallet.publicKey]);\n        let resp = await simulateTransaction(this.provider.connection, tx, 'recent');\n        let log = resp.value.logs[1].slice('Program log: '.length);\n        return new BN(JSON.parse(log).result);\n    }\n    // Fetch all vesting accounts with the given beneficiary.\n    async allVestings(beneficiary) {\n        const vestingBytes = accounts.vesting\n            .encode({\n            ...accounts.vesting.defaultVesting(),\n            initialized: true,\n            safe: this.safeAddress,\n            beneficiary,\n        })\n            .slice(0, 65);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(vestingBytes),\n                },\n            },\n            {\n                dataSize: accounts.vesting.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get vesting accounts for ' +\n                beneficiary.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.vesting.decode(data),\n            };\n        }));\n    }\n}\n//# sourceMappingURL=client.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, rustEnum, u64 as borshU64, } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst BALANCES_LAYOUT = struct([\n    borshU64('sptAmount'),\n    borshU64('sptMegaAmount'),\n]);\nconst ENTITY_STATE_LAYOUT = rustEnum([\n    struct([], 'inactive'),\n    struct([i64('deactivationStartTs'), i64('timelock')], 'pendingDeactivation'),\n    struct([], 'active'),\n]);\nconst ENTITY_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('leader'),\n    BALANCES_LAYOUT.replicate('balances'),\n    ENTITY_STATE_LAYOUT.replicate('state'),\n    publicKey('metadata'),\n]);\nexport function decode(data) {\n    return ENTITY_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = ENTITY_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultEntity() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        leader: new PublicKey(Buffer.alloc(32)),\n        balances: {\n            sptAmount: new u64(0),\n            sptMegaAmount: new u64(0),\n        },\n        state: {\n            pendingDeactivation: {\n                deactivationStartTs: new u64(0),\n                timelock: new u64(0),\n            },\n        },\n        metadata: new PublicKey(Buffer.alloc(32)),\n    };\n}\nexport const SIZE = encode(defaultEntity()).length;\n//# sourceMappingURL=entity.js.map","import { struct, u32 } from 'buffer-layout';\nimport { vec, bool, publicKey, i64 as borshI64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst BALANCE_SANDBOX_LAYOUT = struct([\n    publicKey('owner'),\n    publicKey('spt'),\n    publicKey('sptMega'),\n    publicKey('vault'),\n    publicKey('vaultMega'),\n    publicKey('vaultStake'),\n    publicKey('vaultStakeMega'),\n    publicKey('vaultPendingWithdrawal'),\n    publicKey('vaultPendingWithdrawalMega'),\n]);\nexport const MEMBER_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('beneficiary'),\n    publicKey('entity'),\n    publicKey('metadata'),\n    vec(BALANCE_SANDBOX_LAYOUT.replicate('balancesInner'), 'balances'),\n    u32('rewardsCursor'),\n    borshI64('lastStakeTs'),\n]);\nexport function decode(data) {\n    return MEMBER_LAYOUT.decode(data);\n}\nexport function encode(m) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = MEMBER_LAYOUT.encode(m, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultMember() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        beneficiary: new PublicKey(Buffer.alloc(32)),\n        entity: new PublicKey(Buffer.alloc(32)),\n        metadata: new PublicKey(Buffer.alloc(32)),\n        balances: [defaultBalanceSandbox(), defaultBalanceSandbox()],\n        rewardsCursor: 0,\n        lastStakeTs: new BN(0),\n    };\n}\nfunction defaultBalanceSandbox() {\n    return {\n        owner: new PublicKey(Buffer.alloc(32)),\n        spt: new PublicKey(Buffer.alloc(32)),\n        sptMega: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        vaultMega: new PublicKey(Buffer.alloc(32)),\n        vaultStake: new PublicKey(Buffer.alloc(32)),\n        vaultStakeMega: new PublicKey(Buffer.alloc(32)),\n        vaultPendingWithdrawal: new PublicKey(Buffer.alloc(32)),\n        vaultPendingWithdrawalMega: new PublicKey(Buffer.alloc(32)),\n    };\n}\nexport const SIZE = encode(defaultMember()).length;\n//# sourceMappingURL=member.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 as borshU64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst PENDING_WITHDRAWAL_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('member'),\n    bool('burned'),\n    publicKey('pool'),\n    i64('startTs'),\n    i64('endTs'),\n    borshU64('amount'),\n    publicKey('balanceId'),\n]);\nexport function decode(data) {\n    return PENDING_WITHDRAWAL_LAYOUT.decode(data);\n}\nexport function encode(pw) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = PENDING_WITHDRAWAL_LAYOUT.encode(pw, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultPendingWithdrawal() {\n    return {\n        initialized: false,\n        member: new PublicKey(Buffer.alloc(32)),\n        burned: false,\n        pool: new PublicKey(Buffer.alloc(32)),\n        startTs: new u64(0),\n        endTs: new u64(0),\n        amount: new u64(0),\n        balanceId: new PublicKey(Buffer.alloc(32)),\n    };\n}\nexport const SIZE = encode(defaultPendingWithdrawal()).length;\n//# sourceMappingURL=pending-withdrawal.js.map","import * as borsh from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst LOCKED_REWARD_VENDOR_LAYOUT = borsh.struct([\n    borsh.bool('initialized'),\n    borsh.publicKey('registrar'),\n    borsh.publicKey('vault'),\n    borsh.u8('nonce'),\n    borsh.publicKey('pool'),\n    borsh.u64('poolTokenSupply'),\n    borsh.u32('rewardEventQueueCursor'),\n    borsh.i64('startTs'),\n    borsh.i64('endTs'),\n    borsh.i64('expiryTs'),\n    borsh.publicKey('expiryReceiver'),\n    borsh.u64('total'),\n    borsh.u64('periodCount'),\n    borsh.bool('expired'),\n]);\nexport function decode(data) {\n    return LOCKED_REWARD_VENDOR_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKED_REWARD_VENDOR_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultLockedRewardVendor() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        nonce: 0,\n        pool: new PublicKey(Buffer.alloc(32)),\n        poolTokenSupply: new BN(0),\n        rewardEventQueueCursor: 0,\n        startTs: new BN(0),\n        endTs: new BN(0),\n        expiryTs: new BN(0),\n        expiryReceiver: new PublicKey(Buffer.alloc(32)),\n        total: new BN(0),\n        periodCount: new BN(0),\n        expired: false,\n    };\n}\nexport const SIZE = encode(defaultLockedRewardVendor()).length;\n//# sourceMappingURL=locked-vendor.js.map","import * as borsh from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst LOCKED_REWARD_VENDOR_LAYOUT = borsh.struct([\n    borsh.bool('initialized'),\n    borsh.publicKey('registrar'),\n    borsh.publicKey('vault'),\n    borsh.u8('nonce'),\n    borsh.publicKey('pool'),\n    borsh.u64('poolTokenSupply'),\n    borsh.u32('rewardEventQueueCursor'),\n    borsh.i64('startTs'),\n    borsh.i64('expiryTs'),\n    borsh.publicKey('expiryReceiver'),\n    borsh.u64('total'),\n    borsh.bool('expired'),\n]);\nexport function decode(data) {\n    return LOCKED_REWARD_VENDOR_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKED_REWARD_VENDOR_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultUnlockedRewardVendor() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        nonce: 0,\n        pool: new PublicKey(Buffer.alloc(32)),\n        poolTokenSupply: new BN(0),\n        rewardEventQueueCursor: 0,\n        startTs: new BN(0),\n        expiryTs: new BN(0),\n        expiryReceiver: new PublicKey(Buffer.alloc(32)),\n        total: new BN(0),\n        expired: false,\n    };\n}\nexport const SIZE = encode(defaultUnlockedRewardVendor()).length;\n//# sourceMappingURL=unlocked-vendor.js.map","import { struct } from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { bool, publicKey, str } from '@project-serum/borsh';\nconst METADATA_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('entity'),\n    publicKey('authority'),\n    str('name'),\n    str('about'),\n    str('imageUrl'),\n    publicKey('chat'),\n]);\nexport function decode(data) {\n    return METADATA_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = METADATA_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\nconst maxName = 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nexport function defaultMetadata() {\n    return {\n        initialized: true,\n        entity: new PublicKey(Buffer.alloc(32)),\n        authority: new PublicKey(Buffer.alloc(32)),\n        name: maxName,\n        about: maxName,\n        imageUrl: maxName,\n        chat: new PublicKey(Buffer.alloc(32)),\n    };\n}\nexport const SIZE = encode(defaultMetadata()).length;\n//# sourceMappingURL=metadata.js.map","import * as bs58 from 'bs58';\nimport { PublicKey } from '@solana/web3.js';\nimport { getTokenAccount, parseTokenAccount, getMintInfo, connection as cmnConnection, } from '@project-serum/common';\nimport * as accounts from '../accounts';\nimport { RewardEventQueue } from '../accounts/reward-event-q';\nimport * as metaEntity from '../meta-entity';\nimport EventEmitter from 'eventemitter3';\n// TODO: handle susbcription state within client object.\nlet REWARD_Q_LISTENER = -1;\nexport default class Accounts {\n    constructor(provider, registrarAddress, programId, metaEntityProgramId) {\n        this.provider = provider;\n        this.registrarAddress = registrarAddress;\n        this.programId = programId;\n        this.metaEntityProgramId = metaEntityProgramId;\n    }\n    async registrar(address) {\n        if (address === undefined) {\n            address = this.registrarAddress;\n        }\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Registrar does not exist ${address}`);\n        }\n        return accounts.registrar.decode(accountInfo.data);\n    }\n    async entity(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Entity does not exist ${address}`);\n        }\n        return accounts.entity.decode(accountInfo.data);\n    }\n    async vaultAuthority(programId, registrarAddr, registrar) {\n        if (registrar === undefined) {\n            registrar = await this.registrar(registrarAddr);\n        }\n        return PublicKey.createProgramAddress([registrarAddr.toBuffer(), Buffer.from([registrar.nonce])], programId);\n    }\n    async member(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Member does not exist ${address}`);\n        }\n        return accounts.member.decode(accountInfo.data);\n    }\n    async balancesFor(member, balanceId) {\n        let m = await this.member(member);\n        let b = m.balances.filter(b => b.owner.equals(balanceId)).pop();\n        if (b === undefined) {\n            throw new Error(`Invalid balance id: ${balanceId.toString()}`);\n        }\n        return b;\n    }\n    async depositVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vault);\n    }\n    async depositMegaVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vaultMega);\n    }\n    async pendingWithdrawalVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vaultPendingWithdrawal);\n    }\n    async pendingWithdrawalMegaVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vaultPendingWithdrawalMega);\n    }\n    async metadata(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Entity does not exist ${address}`);\n        }\n        return metaEntity.accounts.metadata.decode(accountInfo.data);\n    }\n    async pendingWithdrawal(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`PendingWithdrawal does not exist ${address}`);\n        }\n        return accounts.pendingWithdrawal.decode(accountInfo.data);\n    }\n    async poolTokenMint(registrar) {\n        if (registrar === undefined) {\n            registrar = await this.registrar();\n        }\n        return await getMintInfo(this.provider, registrar.poolMint);\n    }\n    async megaPoolTokenMint(registrar) {\n        if (registrar === undefined) {\n            registrar = await this.registrar();\n        }\n        return await getMintInfo(this.provider, registrar.poolMintMega);\n    }\n    async poolVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vaultStake);\n    }\n    async megaPoolVault(member, balanceId) {\n        const b = await this.balancesFor(member, balanceId);\n        return getTokenAccount(this.provider, b.vaultStakeMega);\n    }\n    async allEntities() {\n        const entityBytes = accounts.entity\n            .encode({\n            ...accounts.entity.defaultEntity(),\n            initialized: true,\n            registrar: this.registrarAddress,\n        })\n            .slice(0, 33);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(entityBytes),\n                },\n            },\n            {\n                dataSize: accounts.entity.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get entity accounts');\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.entity.decode(data),\n            };\n        }));\n    }\n    async membersWithBeneficiary(publicKey) {\n        const memberBytes = accounts.member\n            .encode({\n            ...accounts.member.defaultMember(),\n            initialized: true,\n            registrar: this.registrarAddress,\n            beneficiary: publicKey,\n        })\n            .slice(0, 65);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(memberBytes),\n                },\n            },\n            {\n                dataSize: accounts.member.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get member accounts owned by ' +\n                publicKey.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.member.decode(data),\n            };\n        }));\n    }\n    async pendingWithdrawalsForMember(member) {\n        const pendingWithdrawalBytes = accounts.pendingWithdrawal\n            .encode({\n            ...accounts.pendingWithdrawal.defaultPendingWithdrawal(),\n            initialized: true,\n            member,\n        })\n            .slice(0, 33);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(pendingWithdrawalBytes),\n                },\n            },\n            {\n                dataSize: accounts.pendingWithdrawal.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get pending withdrawals for ' +\n                member.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.pendingWithdrawal.decode(data),\n            };\n        }));\n    }\n    async allMetadata() {\n        const metadataBytes = metaEntity.accounts.metadata\n            .encode({\n            ...metaEntity.accounts.metadata.defaultMetadata(),\n            initialized: true,\n        })\n            .slice(0, 1);\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.metaEntityProgramId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58.encode(metadataBytes),\n                        },\n                    },\n                    {\n                        dataSize: metaEntity.accounts.metadata.SIZE,\n                    },\n                ],\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get metadata accounts');\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: metaEntity.accounts.metadata.decode(data),\n            };\n        }));\n    }\n    async memberDeref(address) {\n        const memberAccount = await this.member(address);\n        // Main.\n        const mainB = memberAccount.balances[0];\n        const lockedB = memberAccount.balances[1];\n        const [spt, sptMega, vault, vaultMega, vaultStake, vaultStakeMega, vaultPendingWithdrawal, vaultPendingWithdrawalMega, lockedSpt, lockedSptMega, lockedVault, lockedVaultMega, lockedVaultStake, lockedVaultStakeMega, lockedVaultPendingWithdrawal, lockedVaultPendingWithdrawalMega,] = (await cmnConnection.getMultipleSolanaAccounts(this.provider.connection, [\n            mainB.spt,\n            mainB.sptMega,\n            mainB.vault,\n            mainB.vaultMega,\n            mainB.vaultStake,\n            mainB.vaultStakeMega,\n            mainB.vaultPendingWithdrawal,\n            mainB.vaultPendingWithdrawalMega,\n            lockedB.spt,\n            lockedB.sptMega,\n            lockedB.vault,\n            lockedB.vaultMega,\n            lockedB.vaultStake,\n            lockedB.vaultStakeMega,\n            lockedB.vaultPendingWithdrawal,\n            lockedB.vaultPendingWithdrawalMega,\n        ]))\n            // @ts-ignore\n            .map(acc => parseTokenAccount(acc.account.data));\n        const main = {\n            owner: mainB.owner,\n            spt,\n            sptMega,\n            vault,\n            vaultMega,\n            vaultStake,\n            vaultStakeMega,\n            vaultPendingWithdrawal,\n            vaultPendingWithdrawalMega,\n        };\n        const locked = {\n            owner: lockedB.owner,\n            spt: lockedSpt,\n            sptMega: lockedSptMega,\n            vault: lockedVault,\n            vaultMega: lockedVaultMega,\n            vaultStake: lockedVaultStake,\n            vaultStakeMega: lockedVaultStakeMega,\n            vaultPendingWithdrawal: lockedVaultPendingWithdrawal,\n            vaultPendingWithdrawalMega: lockedVaultPendingWithdrawalMega,\n        };\n        return {\n            publicKey: address,\n            account: {\n                member: memberAccount,\n                balances: [main, locked],\n            },\n        };\n    }\n    async memberConnect(address) {\n        const memberDeref = await this.memberDeref(address);\n        // Single event emitter to mux all the websocket connections.\n        //\n        // TODO: these connections are wasteful. Ideally we would have a single\n        //       subscriptions with the account subscriptions multiplexed.\n        //       Solana doesn't support this, however.\n        const eeMux = new EventEmitter();\n        const mMain = memberDeref.account.member.balances[0];\n        const memberEE = this.accountConnect(address, accounts.member.decode);\n        const spt = this.accountConnect(mMain.spt, parseTokenAccount);\n        const sptMega = this.accountConnect(mMain.sptMega, parseTokenAccount);\n        const vault = this.accountConnect(mMain.vault, parseTokenAccount);\n        const vaultMega = this.accountConnect(mMain.vaultMega, parseTokenAccount);\n        const vaultStake = this.accountConnect(mMain.vaultStake, parseTokenAccount);\n        const vaultStakeMega = this.accountConnect(mMain.vaultStakeMega, parseTokenAccount);\n        const vaultPw = this.accountConnect(mMain.vaultPendingWithdrawal, parseTokenAccount);\n        const vaultPwMega = this.accountConnect(mMain.vaultPendingWithdrawalMega, parseTokenAccount);\n        const mLocked = memberDeref.account.member.balances[1];\n        const lockedMember = this.accountConnect(address, accounts.member.decode);\n        const lockedSpt = this.accountConnect(mLocked.spt, parseTokenAccount);\n        const lockedSptMega = this.accountConnect(mLocked.sptMega, parseTokenAccount);\n        const lockedVault = this.accountConnect(mLocked.vault, parseTokenAccount);\n        const lockedVaultMega = this.accountConnect(mLocked.vaultMega, parseTokenAccount);\n        const lockedVaultStake = this.accountConnect(mLocked.vaultStake, parseTokenAccount);\n        const lockedVaultStakeMega = this.accountConnect(mLocked.vaultStakeMega, parseTokenAccount);\n        const lockedVaultPw = this.accountConnect(mLocked.vaultPendingWithdrawal, parseTokenAccount);\n        const lockedVaultPwMega = this.accountConnect(mLocked.vaultPendingWithdrawalMega, parseTokenAccount);\n        // Main.\n        memberEE.on('change', newMemberAccount => {\n            memberDeref.account.member = newMemberAccount;\n            eeMux.emit('change', memberDeref);\n        });\n        spt.on('change', t => {\n            memberDeref.account.balances[0].spt = t;\n            eeMux.emit('change', memberDeref);\n        });\n        sptMega.on('change', t => {\n            memberDeref.account.balances[0].sptMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vault.on('change', t => {\n            memberDeref.account.balances[0].vault = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vaultMega.on('change', t => {\n            memberDeref.account.balances[0].vaultMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vaultStake.on('change', t => {\n            memberDeref.account.balances[0].vaultStake = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vaultStakeMega.on('change', t => {\n            memberDeref.account.balances[0].vaultStakeMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vaultPw.on('change', t => {\n            memberDeref.account.balances[0].vaultPendingWithdrawal = t;\n            eeMux.emit('change', memberDeref);\n        });\n        vaultPwMega.on('change', t => {\n            memberDeref.account.balances[0].vaultPendingWithdrawalMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        // Locked.\n        lockedMember.on('change', newMemberAccount => {\n            memberDeref.account.member = newMemberAccount;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedSpt.on('change', t => {\n            memberDeref.account.balances[1].spt = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedSptMega.on('change', t => {\n            memberDeref.account.balances[1].sptMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVault.on('change', t => {\n            memberDeref.account.balances[1].vault = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVaultMega.on('change', t => {\n            memberDeref.account.balances[1].vaultMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVaultStake.on('change', t => {\n            memberDeref.account.balances[1].vaultStake = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVaultStakeMega.on('change', t => {\n            memberDeref.account.balances[1].vaultStakeMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVaultPw.on('change', t => {\n            memberDeref.account.balances[1].vaultPendingWithdrawal = t;\n            eeMux.emit('change', memberDeref);\n        });\n        lockedVaultPwMega.on('change', t => {\n            memberDeref.account.balances[1].vaultPendingWithdrawalMega = t;\n            eeMux.emit('change', memberDeref);\n        });\n        return [memberDeref, eeMux];\n    }\n    accountConnect(address, decoder) {\n        const ee = new EventEmitter();\n        const sub = this.provider.connection.onAccountChange(address, acc => ee.emit('change', decoder(acc.data)), 'recent');\n        return ee;\n    }\n    rewardEventQueueConnect(address) {\n        const ee = new EventEmitter();\n        let rewardEventQueue = null;\n        REWARD_Q_LISTENER = this.provider.connection.onAccountChange(address, acc => {\n            rewardEventQueue = new RewardEventQueue(acc.data);\n            ee.emit('change', {\n                publicKey: this.rewardEventQueue,\n                account: rewardEventQueue,\n            });\n        }, 'recent');\n        this.rewardEventQueue(address).then(rewardEventQueue => {\n            ee.emit('connected', rewardEventQueue);\n        });\n        return ee;\n    }\n    rewardEventQueueDisconnect() {\n        if (REWARD_Q_LISTENER !== -1) {\n            this.provider.connection\n                .removeAccountChangeListener(REWARD_Q_LISTENER)\n                .catch(console.error);\n        }\n    }\n    async rewardEventQueue(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Reward event queue dopes not exit ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: new RewardEventQueue(accountInfo.data),\n        };\n    }\n    mqueueConnect(address) {\n        const ee = new EventEmitter();\n        let mqueue = null;\n        this.provider.connection.onAccountChange(address, acc => {\n            // todo: emit message by message instead of the entire queue.\n            mqueue = new metaEntity.accounts.mqueue.MQueue(acc.data);\n            ee.emit('mqueue', mqueue);\n        }, 'recent');\n        this.mqueue(address).then(mq => {\n            ee.emit('connected', mq.account.messages());\n        });\n        return ee;\n    }\n    async mqueue(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`MQueue does not exist ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: new metaEntity.accounts.mqueue.MQueue(accountInfo.data),\n        };\n    }\n    async lockedRewardVendor(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Vendor does not exist ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: accounts.lockedRewardVendor.decode(accountInfo.data),\n        };\n    }\n    async rewardVendorAuthority(vendor, nonce) {\n        return PublicKey.createProgramAddress([\n            this.registrarAddress.toBuffer(),\n            vendor.toBuffer(),\n            Buffer.from([nonce]),\n        ], this.programId);\n    }\n    async unlockedRewardVendor(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Vendor does not exist ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: accounts.unlockedRewardVendor.decode(accountInfo.data),\n        };\n    }\n}\n//# sourceMappingURL=accounts.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey, }) {\n        const { transaction, signers } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 30000) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        feeDiscountPubkey =\n            feeDiscountPubkey ||\n                (this.supportsSrmFeeDiscounts\n                    ? (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey\n                    : null);\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            const newOpenOrdersAccount = new web3_js_1.Account();\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, newOpenOrdersAccount.publicKey, this._programId));\n            openOrdersAddress = newOpenOrdersAccount.publicKey;\n            signers.push(newOpenOrdersAccount);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        return instructions_1.DexInstructions.newOrder({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            openOrders: openOrdersAddressKey,\n            owner: ownerAddress,\n            payer,\n            side,\n            limitPrice: this.priceNumberToLots(price),\n            maxQuantity: this.baseSizeNumberToLots(size),\n            orderType,\n            clientId,\n            programId: this._programId,\n            feeDiscountPubkey,\n        });\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n            market: this.address,\n            owner,\n            openOrders,\n            requestQueue: this._decoded.requestQueue,\n            clientId,\n            programId: this._programId,\n        }));\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        return instructions_1.DexInstructions.cancelOrder({\n            market: this.address,\n            owner,\n            openOrders: order.openOrdersAddress,\n            requestQueue: this._decoded.requestQueue,\n            side: order.side,\n            orderId: order.orderId,\n            openOrdersSlot: order.openOrdersSlot,\n            programId: this._programId,\n        });\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    *[Symbol.iterator]() {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWallet = exports.Provider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst simulate_transaction_1 = require(\"./simulate-transaction\");\nclass Provider {\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: 'recent',\n            commitment: 'recent',\n        };\n    }\n    static local(url, opts) {\n        opts = opts || Provider.defaultOptions();\n        const connection = new web3_js_1.Connection(url || 'http://localhost:8899', opts.preflightCommitment);\n        const wallet = NodeWallet.local();\n        return new Provider(connection, wallet, opts);\n    }\n    async send(tx, signers, opts) {\n        var _a;\n        if (signers === undefined) {\n            signers = [];\n        }\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const signerKps = signers.filter(s => s !== undefined);\n        const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n        tx.setSigners(...signerPubkeys);\n        tx.recentBlockhash = (await this.connection.getRecentBlockhash(opts.preflightCommitment)).blockhash;\n        await this.wallet.signTransaction(tx);\n        signerKps.forEach(kp => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        try {\n            const txId = await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n            return txId;\n        }\n        catch (err) {\n            console.error('Transaction failed. Simulating for logs...');\n            const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n            console.error(r);\n            throw err;\n        }\n    }\n    async sendAll(reqs, opts) {\n        var _a;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const blockhash = await this.connection.getRecentBlockhash(opts.preflightCommitment);\n        let txs = reqs.map(r => {\n            let tx = r.tx;\n            let signers = r.signers;\n            if (signers === undefined) {\n                signers = [];\n            }\n            const signerKps = signers.filter(s => s !== undefined);\n            const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n            tx.setSigners(...signerPubkeys);\n            tx.recentBlockhash = blockhash.blockhash;\n            signerKps.forEach(kp => {\n                tx.partialSign(kp);\n            });\n            return tx;\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await web3_js_1.sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                console.error('Transaction failed. Simulating for logs...');\n                const r = await simulate_transaction_1.simulateTransaction(this.connection, tx, (_a = opts.commitment) !== null && _a !== void 0 ? _a : 'recent');\n                console.error(r);\n                throw err;\n            }\n        }\n        return sigs;\n    }\n}\nexports.Provider = Provider;\nclass NodeWallet {\n    constructor(payer) {\n        this.payer = payer;\n    }\n    static local() {\n        const payer = new web3_js_1.Account(Buffer.from(JSON.parse(require('fs').readFileSync(require('os').homedir() + '/.config/solana/id.json', {\n            encoding: 'utf-8',\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    async signAllTransactions(txs) {\n        return txs.map(t => {\n            t.partialSign(this.payer);\n            return t;\n        });\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n}\nexports.NodeWallet = NodeWallet;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOwnedAccountsFilters = exports.parseMintData = exports.parseTokenAccountData = exports.MINT_LAYOUT = exports.ACCOUNT_LAYOUT = exports.getOwnedTokenAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bs58 = __importStar(require(\"bs58\"));\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nasync function getOwnedTokenAccounts(connection, publicKey) {\n    let filters = getOwnedAccountsFilters(publicKey);\n    // @ts-ignore\n    let resp = await connection._rpcRequest('getProgramAccounts', [\n        serum_1.TokenInstructions.TOKEN_PROGRAM_ID.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n        },\n    ]);\n    if (resp.error) {\n        throw new Error('failed to get token accounts owned by ' +\n            publicKey.toBase58() +\n            ': ' +\n            resp.error.message);\n    }\n    return (resp.result\n        // @ts-ignore\n        .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n            publicKey: new web3_js_1.PublicKey(pubkey),\n            account: parseTokenAccountData(data),\n        };\n    }));\n}\nexports.getOwnedTokenAccounts = getOwnedTokenAccounts;\n// todo: remove\nexports.ACCOUNT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(32, 'mint'),\n    BufferLayout.blob(32, 'owner'),\n    BufferLayout.nu64('amount'),\n    BufferLayout.blob(93),\n]);\nexports.MINT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(44),\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(37),\n]);\nfunction parseTokenAccountData(data) {\n    // @ts-ignore\n    let { mint, owner, amount } = exports.ACCOUNT_LAYOUT.decode(data);\n    return {\n        mint: new web3_js_1.PublicKey(mint),\n        owner: new web3_js_1.PublicKey(owner),\n        amount,\n    };\n}\nexports.parseTokenAccountData = parseTokenAccountData;\n// @ts-ignore\nfunction parseMintData(data) {\n    // @ts-ignore\n    let { decimals } = exports.MINT_LAYOUT.decode(data);\n    return { decimals };\n}\nexports.parseMintData = parseMintData;\n// @ts-ignore\nfunction getOwnedAccountsFilters(publicKey) {\n    return [\n        {\n            memcmp: {\n                // @ts-ignore\n                offset: exports.ACCOUNT_LAYOUT.offsetOf('owner'),\n                bytes: publicKey.toBase58(),\n            },\n        },\n        {\n            dataSize: exports.ACCOUNT_LAYOUT.span,\n        },\n    ];\n}\nexports.getOwnedAccountsFilters = getOwnedAccountsFilters;\n//# sourceMappingURL=token.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.networks = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nexports.networks = {\n    devnet: {\n        // Cluster.\n        label: 'Devnet',\n        url: 'https://devnet.solana.com',\n        explorerClusterSuffix: 'devnet',\n        srmFaucet: new web3_js_1.PublicKey('9q8NhG9U95S1M3NZGunKnXRpZ81LW65tAzzHgyknNj2r'),\n        msrmFaucet: new web3_js_1.PublicKey('6oAY2zRqF6dfGNCQSVGF6PB2dFgrtsajQCssvFCpC3Cm'),\n        srm: new web3_js_1.PublicKey('4Ghge2MMPmWXeD2FR541akGhjjgUi7RUtk7DBP5bTwGB'),\n        msrm: new web3_js_1.PublicKey('5PsAVQLCrgtKqZpLdg7HsTXHMcvVCQ1c4bFHHej8Axxn'),\n        god: new web3_js_1.PublicKey('7YbS8znK1eY3p6z1Xo6eCyx7XFyZPBs1mTdVCLsFGCqc'),\n        megaGod: new web3_js_1.PublicKey('GDhZrqcjUMJokqm6cjhyMXheBxxvUkfq3Q8YUtZ6BdCm'),\n        registryProgramId: new web3_js_1.PublicKey('FigXetJcXogqm94qfmyKWy6U5KJAwtxSgJMjUHercVQp'),\n        lockupProgramId: new web3_js_1.PublicKey('CiNaYvdnQ42BNdbKvvAapHxiP18pvc3Vk5WuZ59ia64x'),\n        metaEntityProgramId: new web3_js_1.PublicKey('8wfM5sd5Yivn4WWkcSp4pNua7ytDvjeyLVLaU3QWiLAT'),\n        registrar: new web3_js_1.PublicKey('BB8JRs7FUTawxV6QELRGoNus2TNaMg1egG9rKosxCiAW'),\n        rewardEventQueue: new web3_js_1.PublicKey('5Ch6eHTC9rXHk5pLe9EfdYxWYUdtBpN9FY5xuH8BLawg'),\n        safe: new web3_js_1.PublicKey('3CuTNekgrJykh6ukB8Ty7Y6V5gTX4DD3p38HLYAtqV6c'),\n        defaultEntity: new web3_js_1.PublicKey('BUvnMzShmicx2uiw2sJSRSHp19DLSfDijnYbwezAncwG'),\n    },\n    // Fill in with your local cluster addresses.\n    localhost: {\n        // Cluster.\n        label: 'Localhost',\n        url: 'http://localhost:8899',\n        explorerClusterSuffix: 'localhost',\n        srmFaucet: null,\n        msrmFaucet: null,\n        srm: new web3_js_1.PublicKey('2kU9eab4BbXZx4k7FhJdwe4gzc1bSEqASiohzq3BKsaY'),\n        msrm: new web3_js_1.PublicKey('8e4kjAnCZkMUx2XVdRSZg8JQ2nXXfy8GWQWCXrNKrQad'),\n        god: new web3_js_1.PublicKey('DNcaasMboG4AdfW2T81A6YiB6vo26zU38aXmaddgL1c'),\n        megaGod: new web3_js_1.PublicKey('Gj6XnPBYEvKQWtejiVqBnbUfaLXZ5WuozU39nnMhMyMN'),\n        registryProgramId: new web3_js_1.PublicKey('DUuGKXGUeQhN9bsDJ3bhN8XQPaNiivNnqYRyREP6mL79'),\n        lockupProgramId: new web3_js_1.PublicKey('2dHazPdUjqRBnF7qh2NeCgKCW5B5fYgYtXRtxkpvjUbf'),\n        metaEntityProgramId: new web3_js_1.PublicKey('CbBi6FvvuNwkwjzULY2giDrcMrE8RCYh1LXpvsYiDMsJ'),\n        registrar: new web3_js_1.PublicKey('HCCd9pShhv158orEyA2BGRsvEQ8zEg2aqHHACNCwn3MR'),\n        rewardEventQueue: new web3_js_1.PublicKey('GzYK3YuHgGRoZ57ByKQUbTBbXkXaMAEo7KXNgFe6bxoN'),\n        safe: new web3_js_1.PublicKey('3PA8hDnUjyooFnc2f6WUDwnNBrVNN1CmCC5GC6fM6HY2'),\n        defaultEntity: new web3_js_1.PublicKey('791GDmb4RMZk7PJfczahw5fTubbSxgonWjtmsWmmUoAn'),\n    },\n};\n//# sourceMappingURL=networks.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMultipleAccountsAndContextRpcResult = exports.getMultipleSolanaAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst superstruct_1 = require(\"superstruct\");\nconst assert_1 = __importDefault(require(\"assert\"));\nasync function getMultipleSolanaAccounts(connection, publicKeys) {\n    const args = [publicKeys.map(k => k.toBase58()), { commitment: 'recent' }];\n    // @ts-ignore\n    const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n    const res = exports.GetMultipleAccountsAndContextRpcResult(unsafeRes);\n    if (res.error) {\n        throw new Error('failed to get info about accounts ' +\n            publicKeys.map(k => k.toBase58()).join(', ') +\n            ': ' +\n            res.error.message);\n    }\n    assert_1.default(typeof res.result !== 'undefined');\n    const accounts = [];\n    for (const account of res.result.value) {\n        let value = null;\n        if (res.result.value) {\n            const { executable, owner, lamports, data } = account;\n            assert_1.default(data[1] === 'base64');\n            value = {\n                executable,\n                owner: new web3_js_1.PublicKey(owner),\n                lamports,\n                data: Buffer.from(data[0], 'base64'),\n            };\n        }\n        if (value === null) {\n            throw new Error('Invalid response');\n        }\n        accounts.push(value);\n    }\n    return accounts.map((account, idx) => {\n        return {\n            publicKey: publicKeys[idx],\n            account,\n        };\n    });\n}\nexports.getMultipleSolanaAccounts = getMultipleSolanaAccounts;\nfunction jsonRpcResult(resultDescription) {\n    const jsonRpcVersion = superstruct_1.struct.literal('2.0');\n    return superstruct_1.struct.union([\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'any',\n        }),\n        superstruct_1.struct({\n            jsonrpc: jsonRpcVersion,\n            id: 'string',\n            error: 'null?',\n            result: resultDescription,\n        }),\n    ]);\n}\nfunction jsonRpcResultAndContext(resultDescription) {\n    return jsonRpcResult({\n        context: superstruct_1.struct({\n            slot: 'number',\n        }),\n        value: resultDescription,\n    });\n}\nconst AccountInfoResult = superstruct_1.struct({\n    executable: 'boolean',\n    owner: 'string',\n    lamports: 'number',\n    data: 'any',\n    rentEpoch: 'number?',\n});\nexports.GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(superstruct_1.struct.array([superstruct_1.struct.union(['null', AccountInfoResult])]));\n//# sourceMappingURL=connection.js.map","export type Action = {\n  type: ActionType;\n  item: any;\n};\n\nexport enum ActionType {\n  // Common.\n  CommonTriggerBootstrap,\n  CommonAppWillBootstrap,\n  CommonAppDidBootstrap,\n  CommonTriggerShutdown,\n  CommonDidShutdown,\n  CommonWalletDidConnect,\n  CommonWalletDidDisconnect,\n  CommonWalletSetProvider,\n  CommonSetNetwork,\n  CommonOwnedTokenAccountsSet,\n  CommonWalletReset,\n\n  // Lockup.\n  LockupSetSafe,\n  LockupSetVestings,\n  LockupUpdateVesting,\n  LockupCreateVesting,\n\n  // Registry.\n  RegistryCreateEntity,\n  RegistrySetEntities,\n  RegistryUpdateEntity,\n  RegistrySetMember,\n  RegistrySetMetadata,\n  RegistrySetRewardEventQueue,\n  RegistryCreateMetadata,\n  RegistrySetPoolMint,\n  RegistrySetPoolMintMega,\n  RegistrySetRegistrar,\n  RegistrySetPendingWithdrawals,\n  RegistryCreatePendingWithdrawal,\n  RegistryUpdatePendingWithdrawal,\n  RegistryCreateRewardVendor,\n}\n","import { AccountInfo as TokenAccount, MintInfo } from '@solana/spl-token';\nimport * as lockup from '@project-serum/lockup';\nimport * as registry from '@project-serum/registry';\nimport {\n  ProgramAccount as CommonProgramAccount,\n  networks,\n  Network,\n} from '@project-serum/common';\nimport { Action, ActionType } from './actions';\n\nexport enum BootstrapState {\n  NeedsBootstrap,\n  IsBootstrapping,\n  Bootstrapped,\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  let newState = {\n    common: { ...state.common },\n    lockup: { ...state.lockup },\n    registry: { ...state.registry },\n  };\n  switch (action.type) {\n    // Common.\n    case ActionType.CommonAppWillBootstrap:\n      newState.common.bootstrapState = BootstrapState.IsBootstrapping;\n      newState.common.bootstrapTrigger = false;\n      return newState;\n    case ActionType.CommonAppDidBootstrap:\n      newState.common.bootstrapState = BootstrapState.Bootstrapped;\n      return newState;\n    case ActionType.CommonWalletSetProvider:\n      newState.common.walletProvider = action.item.walletProvider;\n      return newState;\n    case ActionType.CommonWalletDidConnect:\n      newState.common.isWalletConnected = true;\n      return newState;\n    case ActionType.CommonWalletDidDisconnect:\n      newState.common.isWalletConnected = false;\n      return newState;\n    case ActionType.CommonSetNetwork:\n      if (newState.common.network.label !== action.item.network.label) {\n        newState.common.network = action.item.network;\n        newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n        newState.common.shutdownTrigger = true;\n      }\n      return newState;\n    case ActionType.CommonTriggerBootstrap:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.bootstrapTrigger = true;\n      return newState;\n    case ActionType.CommonTriggerShutdown:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.shutdownTrigger = true;\n      return newState;\n    case ActionType.CommonDidShutdown:\n      // Reset everything except network.\n      let s = {\n        ...initialState,\n      };\n      s.common.network = newState.common.network;\n      return s;\n    case ActionType.CommonOwnedTokenAccountsSet:\n      newState.common.ownedTokenAccounts = action.item.ownedTokenAccounts;\n      return newState;\n\n    // Lockup.\n    case ActionType.LockupSetVestings:\n      newState.lockup.vestings = action.item.vestingAccounts;\n      return newState;\n    case ActionType.LockupUpdateVesting:\n      newState.lockup.vestings = newState.lockup.vestings.map(v => {\n        if (v.publicKey.equals(action.item.vesting.publicKey)) {\n          return action.item.vesting;\n        }\n        return v;\n      });\n      return newState;\n    case ActionType.LockupCreateVesting:\n      newState.lockup.vestings.unshift(action.item.vesting);\n      return newState;\n    case ActionType.LockupSetSafe:\n      newState.lockup.safe = action.item.safe;\n      return newState;\n\n    // Registry.\n    case ActionType.RegistryCreateEntity:\n      newState.registry.entities.unshift(action.item.entity);\n      return newState;\n    case ActionType.RegistrySetEntities:\n      newState.registry.entities = action.item.entities;\n      return newState;\n    case ActionType.RegistryUpdateEntity:\n      newState.registry.entities = newState.registry.entities.map(e => {\n        if (\n          e.publicKey.toString() === action.item.entity.publicKey.toString()\n        ) {\n          e = action.item.entity;\n        }\n        return { ...e };\n      });\n      return newState;\n    case ActionType.RegistrySetMember:\n      newState.registry.member = {\n        isReady: true,\n        data: action.item.member,\n      };\n      return newState;\n    case ActionType.RegistrySetPoolMint:\n      newState.registry.poolTokenMint = action.item.poolMint;\n      return newState;\n    case ActionType.RegistrySetPoolMintMega:\n      newState.registry.megaPoolTokenMint = action.item.poolMintMega;\n      return newState;\n    case ActionType.RegistrySetRegistrar:\n      newState.registry.registrar = action.item.registrar;\n      return newState;\n    case ActionType.RegistrySetPendingWithdrawals:\n      newState.registry.pendingWithdrawals = new Map(\n        newState.registry.pendingWithdrawals,\n      ).set(\n        action.item.memberPublicKey.toString(),\n        action.item.pendingWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistryCreatePendingWithdrawal:\n      const oldPw = newState.registry.pendingWithdrawals;\n      const memberWithdrawals = oldPw.has(\n        action.item.memberPublicKey.toString(),\n      )\n        ? [\n            ...(oldPw.get(\n              action.item.memberPublicKey.toString(),\n            ) as ProgramAccount<registry.accounts.PendingWithdrawal>[]),\n          ]\n        : [];\n      memberWithdrawals.unshift(action.item.pendingWithdrawal);\n      newState.registry.pendingWithdrawals = new Map(oldPw).set(\n        action.item.memberPublicKey.toString(),\n        memberWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistryUpdatePendingWithdrawal:\n      const allPendingWithdrawals = new Map(\n        newState.registry.pendingWithdrawals,\n      );\n      const memberPendingWithdrawals = allPendingWithdrawals\n        .get(action.item.memberPublicKey.toString())!\n        .map(pw => {\n          if (\n            pw.publicKey.toString() ===\n            action.item.pendingWithdrawal.publicKey.toString()\n          ) {\n            return action.item.pendingWithdrawal;\n          }\n          return pw;\n        });\n\n      newState.registry.pendingWithdrawals.set(\n        action.item.memberPublicKey.toString(),\n        memberPendingWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistrySetMetadata:\n      const entityMetadata = new Map();\n      action.item.entityMetadata.forEach(\n        (\n          emd: ProgramAccount<registry.metaEntity.accounts.metadata.Metadata>,\n        ) => {\n          entityMetadata.set(emd.account.entity.toString(), emd);\n        },\n      );\n      newState.registry.entityMetadata = entityMetadata;\n      return newState;\n    case ActionType.RegistryCreateMetadata:\n      const emd = new Map(newState.registry.entityMetadata);\n      emd.set(action.item.entityPublicKey.toString(), action.item.metadata);\n      newState.registry.entityMetadata = emd;\n      return newState;\n    case ActionType.RegistrySetRewardEventQueue:\n      newState.registry.rewardEventQueue = action.item.rewardEventQueue;\n      return newState;\n    case ActionType.RegistryCreateRewardVendor:\n      const vendors = new Map(newState.registry.vendors);\n      vendors.set(action.item.vendor.publicKey.toString(), action.item.vendor);\n      newState.registry.vendors = vendors;\n      return newState;\n    // Misc.\n    default:\n      return newState;\n  }\n}\n\nexport type State = {\n  common: CommonState;\n  lockup: LockupState;\n  registry: RegistryState;\n};\n\nexport type CommonState = {\n  walletProvider?: string;\n  isWalletConnected: boolean;\n  bootstrapTrigger: boolean;\n  bootstrapState: BootstrapState;\n  shutdownTrigger: boolean;\n  network: Network;\n  ownedTokenAccounts: ProgramAccount<TokenAccount>[];\n};\n\nexport type LockupState = {\n  safe?: ProgramAccount<lockup.accounts.Safe>;\n  vestings: ProgramAccount<lockup.accounts.Vesting>[];\n};\n\nexport type RegistryState = {\n  entities: ProgramAccount<registry.accounts.Entity>[];\n  entityMetadata: Map<\n    string,\n    ProgramAccount<registry.metaEntity.accounts.metadata.Metadata>\n  >;\n  member: AsyncData<ProgramAccount<registry.accounts.MemberDeref>>;\n  poolTokenMint?: ProgramAccount<MintInfo>;\n  megaPoolTokenMint?: ProgramAccount<MintInfo>;\n  registrar?: ProgramAccount<registry.accounts.Registrar>;\n  pendingWithdrawals: Map<\n    string,\n    Array<ProgramAccount<registry.accounts.PendingWithdrawal>>\n  >;\n  rewardEventQueue?: ProgramAccount<registry.accounts.RewardEventQueue>;\n  vendors: Map<\n    string,\n    ProgramAccount<\n      | registry.accounts.LockedRewardVendor\n      | registry.accounts.UnlockedRewardVendor\n    >\n  >;\n};\n\nexport type AsyncData<T> = {\n  isReady: boolean;\n  data?: T;\n};\n\nfunction defaultAsyncData<T>(): AsyncData<T> {\n  return { isReady: false };\n}\n\n// Re-export.\nexport type ProgramAccount<T> = CommonProgramAccount<T>;\n\nexport const initialState: State = {\n  common: {\n    bootstrapTrigger: false,\n    shutdownTrigger: false,\n    isWalletConnected: false,\n    walletProvider: 'https://www.sollet.io',\n    bootstrapState: BootstrapState.NeedsBootstrap,\n    network: networks.devnet,\n    ownedTokenAccounts: [],\n  },\n  lockup: {\n    vestings: [],\n  },\n  registry: {\n    member: defaultAsyncData(),\n    entities: [],\n    entityMetadata: new Map(),\n    pendingWithdrawals: new Map(),\n    vendors: new Map(),\n  },\n};\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import { Account, SystemProgram, Connection, PublicKey, Transaction, TransactionInstruction, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { createTokenAccountInstrs, createMint, getTokenAccount, Provider, NodeWallet, networks, } from '@project-serum/common';\nimport { txIx as lockupTxIx, } from '@project-serum/lockup';\nimport * as instruction from '../instruction';\nimport * as accounts from '../accounts';\nimport { SIZE as REGISTRAR_SIZE } from '../accounts/registrar';\nimport * as metaEntity from '../meta-entity';\nimport Accounts from './accounts';\nexport default class Client {\n    constructor(cfg) {\n        this.provider = cfg.provider;\n        this.programId = cfg.programId;\n        this.metaEntityProgramId = cfg.metaEntityProgramId;\n        this.accounts = new Accounts(cfg.provider, cfg.registrar, cfg.programId, cfg.metaEntityProgramId);\n        this.registrar = cfg.registrar;\n        this.rewardEventQueue = cfg.rewardEventQueue;\n    }\n    // Connects to the devnet deployment of the program.\n    static devnet(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('https://devnet.solana.com', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.devnet.registryProgramId,\n            registrar: networks.devnet.registrar,\n            metaEntityProgramId: networks.devnet.metaEntityProgramId,\n            rewardEventQueue: networks.devnet.rewardEventQueue,\n        });\n    }\n    static localhost(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('http://localhost:8899', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.localhost.registryProgramId,\n            registrar: networks.localhost.registrar,\n            metaEntityProgramId: networks.localhost.metaEntityProgramId,\n            rewardEventQueue: networks.localhost.rewardEventQueue,\n        });\n    }\n    // Initializes both the registry and its associated staking pool.\n    static async initialize(provider, req) {\n        let { programId, metaEntityProgramId, mint, megaMint, withdrawalTimelock, deactivationTimelock, maxStakePerEntity, authority, registrar, stakeRate, stakeRateMega, } = req;\n        if (authority === undefined) {\n            authority = provider.wallet.publicKey;\n        }\n        if (registrar === undefined) {\n            registrar = new Account();\n        }\n        const rewardEventQueue = new Account();\n        const pool = new Account();\n        const megaPool = new Account();\n        // Create program vault authorities.\n        const [vaultAuthority, vaultNonce] = await PublicKey.findProgramAddress([registrar.publicKey.toBuffer()], programId);\n        // Create pool tokens.\n        const poolMint = await createMint(provider, vaultAuthority);\n        const megaPoolMint = await createMint(provider, vaultAuthority);\n        const tx = new Transaction();\n        tx.add(\n        // Create reward event queue.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: rewardEventQueue.publicKey,\n            space: accounts.RewardEventQueue.accountSize(),\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.RewardEventQueue.accountSize()),\n            programId: programId,\n        }), \n        // Create registrar.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: registrar.publicKey,\n            space: REGISTRAR_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(REGISTRAR_SIZE),\n            programId: programId,\n        }), \n        // Iniitalize registrar.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: registrar.publicKey, isWritable: true, isSigner: false },\n                { pubkey: poolMint, isWritable: false, isSigner: false },\n                { pubkey: megaPoolMint, isWritable: false, isSigner: false },\n                {\n                    pubkey: rewardEventQueue.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                    mint,\n                    megaMint,\n                    nonce: vaultNonce,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    maxStakePerEntity,\n                    stakeRate,\n                    stakeRateMega,\n                },\n            }),\n        }));\n        const createSigners = [rewardEventQueue, registrar];\n        const sig = await provider.send(tx, createSigners);\n        const client = new Client({\n            registrar: registrar.publicKey,\n            provider,\n            programId,\n            metaEntityProgramId,\n            rewardEventQueue: rewardEventQueue.publicKey,\n        });\n        return [\n            client,\n            {\n                tx: sig,\n                registrar: registrar.publicKey,\n                pool: pool.publicKey,\n                megaPool: megaPool.publicKey,\n            },\n        ];\n    }\n    async updateRegistrar(req) {\n        let { authority, newAuthority, withdrawalTimelock, deactivationTimelock, maxStakePerEntity, } = req;\n        let authorityPubkey = authority === undefined\n            ? this.provider.wallet.publicKey\n            : authority.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: this.registrar, isWritable: true, isSigner: false },\n                { pubkey: authorityPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateRegistrar: {\n                    newAuthority,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    maxStakePerEntity,\n                },\n            }),\n        }));\n        let signers = [authority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createEntity(req) {\n        let { leader, name, about, imageUrl } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const metadataAccount = new Account();\n        const mqueue = new Account();\n        const entity = new Account();\n        const metadataInstrs = await metaEntity.transaction.initializeInstrs({\n            mqueue,\n            programId: this.metaEntityProgramId,\n            authority: leaderPubkey,\n            name,\n            about,\n            provider: this.provider,\n            metadataAccount,\n            imageUrl,\n            entity: entity.publicKey,\n        });\n        const tx = new Transaction();\n        tx.add(...metadataInstrs, SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: entity.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.entity.SIZE),\n            space: accounts.entity.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity.publicKey, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createEntity: {\n                    metadata: metadataAccount.publicKey,\n                },\n            }),\n        }));\n        let signers = [metadataAccount, mqueue, entity, leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            entity: entity.publicKey,\n            metadata: metadataAccount.publicKey,\n        };\n    }\n    async updateEntity(req) {\n        let { leader, newLeader, entity } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateEntity: {\n                    leader: newLeader,\n                },\n            }),\n        }));\n        let signers = [leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createMember(req) {\n        let { beneficiary, entity, delegate, registrar } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (registrar === undefined) {\n            registrar = await this.accounts.registrar();\n        }\n        const member = new Account();\n        const registrySigner = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const [mainTxs, main] = await this.createBalanceSandbox(registrar, registrySigner, beneficiaryPubkey);\n        const [lockedTxs, locked] = await this.createBalanceSandbox(registrar, registrySigner, delegate);\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: member.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.member.SIZE),\n            space: accounts.member.SIZE,\n            programId: this.programId,\n        }), new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: registrySigner, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n                // Main.\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: false },\n                { pubkey: main.spt, isWritable: true, isSigner: false },\n                { pubkey: main.sptMega, isWritable: true, isSigner: false },\n                { pubkey: main.vault, isWritable: false, isSigner: false },\n                { pubkey: main.vaultMega, isWritable: false, isSigner: false },\n                { pubkey: main.vaultStake, isWritable: false, isSigner: false },\n                { pubkey: main.vaultStakeMega, isWritable: false, isSigner: false },\n                {\n                    pubkey: main.vaultPendingWithdrawal,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                {\n                    pubkey: main.vaultPendingWithdrawalMega,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                // Locked.\n                { pubkey: delegate, isWritable: false, isSigner: false },\n                { pubkey: locked.spt, isWritable: true, isSigner: false },\n                { pubkey: locked.sptMega, isWritable: true, isSigner: false },\n                { pubkey: locked.vault, isWritable: false, isSigner: false },\n                { pubkey: locked.vaultMega, isWritable: false, isSigner: false },\n                { pubkey: locked.vaultStake, isWritable: false, isSigner: false },\n                { pubkey: locked.vaultStakeMega, isWritable: false, isSigner: false },\n                {\n                    pubkey: locked.vaultPendingWithdrawal,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                {\n                    pubkey: locked.vaultPendingWithdrawalMega,\n                    isWritable: false,\n                    isSigner: false,\n                },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createMember: {},\n            }),\n        }));\n        let signers = [member, beneficiary];\n        const allTxs = [...mainTxs, ...lockedTxs, { tx, signers }];\n        let txSigs = await this.provider.sendAll(allTxs);\n        return {\n            txs: txSigs,\n            member: member.publicKey,\n            balances: [main, locked],\n        };\n    }\n    async createBalanceSandbox(r, registrySigner, owner) {\n        const spt = new Account();\n        const sptMega = new Account();\n        const vault = new Account();\n        const vaultMega = new Account();\n        const vaultStake = new Account();\n        const vaultStakeMega = new Account();\n        const vaultPw = new Account();\n        const vaultPwMega = new Account();\n        const lamports = await this.provider.connection.getMinimumBalanceForRentExemption(165);\n        const createSptIx = await createTokenAccountInstrs(this.provider, spt.publicKey, r.poolMint, registrySigner, lamports);\n        const createMsptIx = await createTokenAccountInstrs(this.provider, sptMega.publicKey, r.poolMintMega, registrySigner, lamports);\n        const createVaultIx = await createTokenAccountInstrs(this.provider, vault.publicKey, r.mint, registrySigner, lamports);\n        const createVaultMegaIx = await createTokenAccountInstrs(this.provider, vaultMega.publicKey, r.megaMint, registrySigner, lamports);\n        const createVaultStakeIx = await createTokenAccountInstrs(this.provider, vaultStake.publicKey, r.mint, registrySigner, lamports);\n        const createVaultStakeMegaIx = await createTokenAccountInstrs(this.provider, vaultStakeMega.publicKey, r.megaMint, registrySigner, lamports);\n        const createVaultPwIx = await createTokenAccountInstrs(this.provider, vaultPw.publicKey, r.mint, registrySigner, lamports);\n        const createVaultPwMegaIx = await createTokenAccountInstrs(this.provider, vaultPwMega.publicKey, r.megaMint, registrySigner, lamports);\n        let tx0 = new Transaction();\n        tx0.add(...createSptIx, ...createMsptIx, ...createVaultIx, ...createVaultMegaIx);\n        let signers0 = [spt, sptMega, vault, vaultMega];\n        const tx1 = new Transaction();\n        tx1.add(...createVaultStakeIx, ...createVaultStakeMegaIx, ...createVaultPwIx, ...createVaultPwMegaIx);\n        let signers1 = [vaultStake, vaultStakeMega, vaultPw, vaultPwMega];\n        const txs = [\n            { tx: tx0, signers: signers0 },\n            { tx: tx1, signers: signers1 },\n        ];\n        return [\n            txs,\n            {\n                owner,\n                spt: spt.publicKey,\n                sptMega: sptMega.publicKey,\n                vault: vault.publicKey,\n                vaultMega: vaultMega.publicKey,\n                vaultStake: vaultStake.publicKey,\n                vaultStakeMega: vaultStakeMega.publicKey,\n                vaultPendingWithdrawal: vaultPw.publicKey,\n                vaultPendingWithdrawalMega: vaultPwMega.publicKey,\n            },\n        ];\n    }\n    async updateMember(req) {\n        let { member, beneficiary, delegate } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateMember: {\n                    delegate,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async deposit(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, vaultOwner, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        if (vault === undefined || vaultOwner == undefined) {\n            const v = await this.vaultFor(depositor, member, beneficiaryPubkey);\n            vault = v.vaultAddress;\n            vaultOwner = v.vault.owner;\n        }\n        // Dummy account to pass into the instruction, since it conforms to the\n        // lockup program's whitelist withdraw/deposit interface.\n        const dummyAccountMeta = {\n            pubkey: SYSVAR_CLOCK_PUBKEY,\n            isWritable: false,\n            isSigner: false,\n        };\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                dummyAccountMeta,\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: true,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultOwner, isWritable: false, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                deposit: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async withdraw(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, vaultOwner, } = req;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        if (vault === undefined || vaultOwner === undefined) {\n            let v = await this.vaultFor(depositor, member, beneficiaryPubkey);\n            vault = v.vaultAddress;\n            vaultOwner = v.vault.owner;\n        }\n        // Dummy account to pass into the instruction, since it conforms to the\n        // lockup program's whitelist withdraw/deposit interface.\n        const dummyAccountMeta = {\n            pubkey: SYSVAR_CLOCK_PUBKEY,\n            isWritable: false,\n            isSigner: false,\n        };\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                dummyAccountMeta,\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultOwner, isWritable: false, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                withdraw: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async vaultFor(depositor, member, balanceId) {\n        let vaultAddress = undefined;\n        let vault = undefined;\n        let depositorAcc = await getTokenAccount(this.provider, depositor);\n        let balances = (await this.accounts.member(member)).balances\n            .filter(b => b.owner.equals(balanceId))\n            .pop();\n        if (balances === undefined) {\n            throw new Error(`Invalid balance ID: ${balanceId}`);\n        }\n        let vaultAcc = await this.accounts.depositVault(member, balanceId);\n        if (vaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = balances.vault;\n            vault = vaultAcc;\n        }\n        let megaVaultAcc = await this.accounts.depositMegaVault(member, balanceId);\n        if (megaVaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = balances.vaultMega;\n            vault = megaVaultAcc;\n        }\n        if (vaultAddress === undefined) {\n            throw new Error(`Invalid depositor account: ${depositor}`);\n        }\n        if (vault === undefined) {\n            throw new Error(`Invalid mint for depositor account: ${depositor}`);\n        }\n        return {\n            vaultAddress,\n            vault,\n        };\n    }\n    async stake(req) {\n        let { member, beneficiary, amount, spt, registrar, isMega, balanceId, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        if (registrar === undefined) {\n            registrar = await this.accounts.registrar();\n        }\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const balances = member.account.balances\n            .filter(b => b.owner.equals(balanceId))\n            .pop();\n        if (balances === undefined)\n            throw new Error('balance not found');\n        const [vault, vaultStake, poolMint] = (() => {\n            if (isMega) {\n                return [\n                    balances.vaultMega,\n                    balances.vaultStakeMega,\n                    registrar.poolMintMega,\n                ];\n            }\n            else {\n                return [balances.vault, balances.vaultStake, registrar.poolMint];\n            }\n        })();\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: member.account.entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: vaultStake, isWritable: true, isSigner: false },\n                { pubkey: poolMint, isWritable: true, isSigner: false },\n                { pubkey: spt, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                stake: {\n                    amount,\n                    balanceId,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async startStakeWithdrawal(req) {\n        let { pendingWithdrawal, member, beneficiary, amount, spt, registrar, isMega, balanceId, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        if (pendingWithdrawal === undefined) {\n            pendingWithdrawal = new Account();\n        }\n        if (registrar === undefined) {\n            registrar = await this.accounts.registrar();\n        }\n        const entity = member.account.entity;\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const bId = balanceId.equals(this.provider.wallet.publicKey) ? 0 : 1;\n        const [vaultPw, poolVault, poolMint] = (() => {\n            if (isMega) {\n                return [\n                    member.account.balances[bId].vaultPendingWithdrawalMega,\n                    member.account.balances[bId].vaultStakeMega,\n                    registrar.poolMintMega,\n                ];\n            }\n            else {\n                return [\n                    member.account.balances[bId].vaultPendingWithdrawal,\n                    member.account.balances[bId].vaultStake,\n                    registrar.poolMint,\n                ];\n            }\n        })();\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: pendingWithdrawal.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.pendingWithdrawal.SIZE),\n            space: accounts.pendingWithdrawal.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: pendingWithdrawal.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vaultPw, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: poolVault, isWritable: true, isSigner: false },\n                { pubkey: poolMint, isWritable: true, isSigner: false },\n                { pubkey: spt, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                startStakeWithdrawal: {\n                    amount,\n                    balanceId,\n                },\n            }),\n        }));\n        let signers = [beneficiary, pendingWithdrawal];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            pendingWithdrawal: pendingWithdrawal.publicKey,\n        };\n    }\n    async endStakeWithdrawal(req) {\n        let { member, beneficiary, pendingWithdrawal, registrar } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        if (pendingWithdrawal instanceof PublicKey) {\n            const account = await this.accounts.pendingWithdrawal(pendingWithdrawal);\n            pendingWithdrawal = {\n                publicKey: pendingWithdrawal,\n                account,\n            };\n        }\n        if (registrar === undefined) {\n            registrar = await this.accounts.registrar();\n        }\n        let bId = pendingWithdrawal.account.balanceId.equals(this.provider.wallet.publicKey)\n            ? 0\n            : 1;\n        const [vault, vaultPw] = (() => {\n            const isMega = pendingWithdrawal.account.pool.equals(registrar.poolMintMega);\n            if (isMega) {\n                return [\n                    member.account.balances[bId].vaultMega,\n                    member.account.balances[bId].vaultPendingWithdrawalMega,\n                ];\n            }\n            else {\n                return [\n                    member.account.balances[bId].vault,\n                    member.account.balances[bId].vaultPendingWithdrawal,\n                ];\n            }\n        })();\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: pendingWithdrawal.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultPw, isWritable: true, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: member.account.entity, isWritable: true, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                endStakeWithdrawal: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async switchEntity(req) {\n        let { member, newEntity, beneficiary, registrar } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        const vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: member.account.entity, isWritable: true, isSigner: false },\n                { pubkey: newEntity, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n            ].concat(member.account.balances\n                .map(b => {\n                return [\n                    { pubkey: b.owner, isWritable: false, isSigner: false },\n                    { pubkey: b.spt, isWritable: false, isSigner: false },\n                    {\n                        pubkey: b.sptMega,\n                        isWritable: false,\n                        isSigner: false,\n                    },\n                ];\n            })\n                // @ts-ignore\n                .flat()),\n            programId: this.programId,\n            data: instruction.encode({\n                switchEntity: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async dropLockedReward(req) {\n        let { total, endTs, expiryTs, depositor, depositorMint, poolTokenMint, periodCount, } = req;\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorVaultAuthority, nonce] = await PublicKey.findProgramAddress([this.registrar.toBuffer(), vendor.publicKey.toBuffer()], this.programId);\n        const createLockedVendorVaultInstrs = await createTokenAccountInstrs(this.provider, vendorVault.publicKey, depositorMint, vendorVaultAuthority);\n        const tx = new Transaction();\n        tx.add(\n        // Create LockedRewardVendor token vault.\n        ...createLockedVendorVaultInstrs, \n        // Create LockedRewardVendor account.\n        SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: vendor.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.lockedRewardVendor.SIZE),\n            space: accounts.lockedRewardVendor.SIZE,\n            programId: this.programId,\n        }), new TransactionInstruction({\n            keys: [\n                { pubkey: this.rewardEventQueue, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                { pubkey: poolTokenMint, isWritable: false, isSigner: false },\n                { pubkey: vendor.publicKey, isWritable: true, isSigner: false },\n                {\n                    pubkey: vendorVault.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                dropLockedReward: {\n                    total,\n                    endTs,\n                    expiryTs,\n                    expiryReceiver: this.provider.wallet.publicKey,\n                    periodCount,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [vendor, vendorVault];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async dropUnlockedReward(req) {\n        let { total, expiryTs, depositor, depositorMint, poolTokenMint } = req;\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorVaultAuthority, nonce] = await PublicKey.findProgramAddress([this.registrar.toBuffer(), vendor.publicKey.toBuffer()], this.programId);\n        const createUnlockedVendorVaultInstrs = await createTokenAccountInstrs(this.provider, vendorVault.publicKey, depositorMint, vendorVaultAuthority);\n        const tx = new Transaction();\n        tx.add(\n        // Create UnlockedRewardVendor token vault.\n        ...createUnlockedVendorVaultInstrs, \n        // Create UnlockedRewardVendor account.\n        SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: vendor.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.unlockedRewardVendor.SIZE),\n            space: accounts.unlockedRewardVendor.SIZE,\n            programId: this.programId,\n        }), new TransactionInstruction({\n            keys: [\n                { pubkey: this.rewardEventQueue, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                { pubkey: poolTokenMint, isWritable: false, isSigner: false },\n                { pubkey: vendor.publicKey, isWritable: true, isSigner: false },\n                {\n                    pubkey: vendorVault.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                dropUnlockedReward: {\n                    total,\n                    expiryTs,\n                    expiryReceiver: this.provider.wallet.publicKey,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [vendor, vendorVault];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async claimLockedReward(req) {\n        let { cursor, member, vendor, vendorSigner, safe, lockupProgramId, mint, poolMint, } = req;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        if (vendor instanceof PublicKey) {\n            vendor = await this.accounts.lockedRewardVendor(vendor);\n        }\n        if (!poolMint) {\n            const r = await this.accounts.registrar();\n            poolMint = r.poolMint;\n        }\n        const vesting = new Account();\n        const vestingVault = new Account();\n        const { nonce, ixs } = await lockupTxIx.allocVestingIxs(this.provider, lockupProgramId, safe, vesting.publicKey, vestingVault.publicKey, mint, this.provider.wallet.publicKey);\n        const tx = new Transaction();\n        tx.add(...ixs, new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: member.account.entity, isWritable: false, isSigner: false },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vendor.publicKey, isWritable: false, isSigner: false },\n                { pubkey: vendor.account.vault, isWritable: true, isSigner: false },\n                { pubkey: vendorSigner, isWritable: false, isSigner: false },\n                { pubkey: safe, isWritable: false, isSigner: false },\n                { pubkey: lockupProgramId, isWritable: false, isSigner: false },\n                { pubkey: vesting.publicKey, isWritable: true, isSigner: false },\n                { pubkey: vestingVault.publicKey, isWritable: true, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ].concat(member.account.balances.map(b => {\n                return vendor.account.pool.equals(poolMint)\n                    ? {\n                        pubkey: b.spt,\n                        isWritable: false,\n                        isSigner: false,\n                    }\n                    : {\n                        pubkey: b.sptMega,\n                        isWritable: false,\n                        isSigner: false,\n                    };\n            })),\n            programId: this.programId,\n            data: instruction.encode({\n                claimLockedReward: {\n                    cursor,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [vesting, vestingVault];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async claimUnlockedReward(req) {\n        let { cursor, member, vendor, vendorSigner, token, poolMint } = req;\n        if (member instanceof PublicKey) {\n            const account = await this.accounts.member(member);\n            member = {\n                publicKey: member,\n                account,\n            };\n        }\n        if (vendor instanceof PublicKey) {\n            vendor = await this.accounts.lockedRewardVendor(vendor);\n        }\n        if (!poolMint) {\n            const r = await this.accounts.registrar();\n            poolMint = r.poolMint;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: member.account.entity, isWritable: false, isSigner: false },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vendor.publicKey, isWritable: false, isSigner: false },\n                { pubkey: vendor.account.vault, isWritable: true, isSigner: false },\n                { pubkey: vendorSigner, isWritable: false, isSigner: false },\n                { pubkey: token, isWritable: true, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ].concat(member.account.balances.map(b => {\n                return vendor.account.pool.equals(poolMint)\n                    ? {\n                        pubkey: b.spt,\n                        isWritable: false,\n                        isSigner: false,\n                    }\n                    : {\n                        pubkey: b.sptMega,\n                        isWritable: false,\n                        isSigner: false,\n                    };\n            })),\n            programId: this.programId,\n            data: instruction.encode({\n                claimUnlockedReward: {\n                    cursor,\n                },\n            }),\n        }));\n        let signers = [];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async depositLocked(req) {\n        const { amount, vesting, safe, lockupClient, registrar, entity, member, vault, } = req;\n        const registryVaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const instructionData = instruction.encode({\n            deposit: {\n                amount,\n            },\n        });\n        const relayAccounts = [\n            { pubkey: member, isWritable: true, isSigner: false },\n            {\n                pubkey: this.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            { pubkey: entity, isWritable: true, isSigner: false },\n            { pubkey: this.registrar, isWritable: false, isSigner: false },\n        ];\n        const relaySigners = [];\n        const { tx } = await lockupClient.whitelistWithdraw({\n            amount,\n            instructionData,\n            vesting,\n            whitelistProgram: this.programId,\n            whitelistProgramVault: vault,\n            whitelistProgramVaultAuthority: registryVaultAuthority,\n            relayAccounts,\n            relaySigners,\n            safe,\n        });\n        return { tx };\n    }\n    async withdrawLocked(req) {\n        const { amount, vesting, safe, lockupClient, registrar, member, entity, vault, } = req;\n        const registryVaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const instructionData = instruction.encode({\n            withdraw: {\n                amount,\n            },\n        });\n        const relayAccounts = [\n            { pubkey: member, isWritable: true, isSigner: false },\n            {\n                pubkey: this.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            { pubkey: entity, isWritable: true, isSigner: false },\n            { pubkey: this.registrar, isWritable: false, isSigner: false },\n        ];\n        const relaySigners = [];\n        const { tx } = await lockupClient.whitelistDeposit({\n            instructionData,\n            vesting,\n            whitelistProgram: this.programId,\n            whitelistProgramVault: vault,\n            whitelistProgramVaultAuthority: registryVaultAuthority,\n            relayAccounts,\n            relaySigners,\n            safe,\n        });\n        return { tx };\n    }\n    async sendMessage(req) {\n        const { from, ts, content, mqueue } = req;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [{ pubkey: mqueue, isWritable: true, isSigner: false }],\n            programId: this.metaEntityProgramId,\n            data: metaEntity.instruction.encode({\n                sendMessage: {\n                    msg: {\n                        from,\n                        ts,\n                        content,\n                    },\n                },\n            }),\n        }));\n        let signers = [];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n}\n//# sourceMappingURL=index.js.map","import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { Connection, ConfirmOptions } from '@solana/web3.js';\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Provider } from '@project-serum/common';\nimport { Client as LockupClient } from '@project-serum/lockup';\nimport { Client as RegistryClient } from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error('Missing wallet context');\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  lockupClient: LockupClient;\n  registryClient: RegistryClient;\n};\n\nexport default function WalletProvider(\n  props: PropsWithChildren<ReactNode>,\n): ReactElement {\n  const { walletProvider, network } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      network: state.common.network,\n    };\n  });\n\n  const { wallet, lockupClient, registryClient } = useMemo(() => {\n    const opts: ConfirmOptions = {\n      preflightCommitment: 'recent',\n      commitment: 'recent',\n    };\n    const connection = new Connection(network.url, opts.preflightCommitment);\n    const wallet = new Wallet(walletProvider, network.url);\n    const provider = new Provider(connection, wallet, opts);\n\n    return {\n      wallet,\n      lockupClient: new LockupClient({\n        provider,\n        programId: network.lockupProgramId,\n        safe: network.safe,\n      }),\n      registryClient: new RegistryClient({\n        provider,\n        programId: network.registryProgramId,\n        metaEntityProgramId: network.metaEntityProgramId,\n        registrar: network.registrar,\n        rewardEventQueue: network.rewardEventQueue,\n      }),\n    };\n  }, [walletProvider, network]);\n\n  return (\n    <WalletContext.Provider value={{ wallet, lockupClient, registryClient }}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n","import React, {\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { MintInfo } from '@solana/spl-token';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { PublicKey } from '@solana/web3.js';\nimport { token, ProgramAccount, parseMintAccount } from '@project-serum/common';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\n\n// BootstrapProvider performs data fetching on application startup.\nexport default function BootstrapProvider(props: PropsWithChildren<ReactNode>) {\n  const { bootstrapTrigger, shutdownTrigger, network } = useSelector(\n    (state: StoreState) => {\n      return {\n        bootstrapTrigger: state.common.bootstrapTrigger,\n        shutdownTrigger: state.common.shutdownTrigger,\n        network: state.common.network,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  const { wallet, lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Entry point for bootstrapping all the data for the app.\n  const bootstrap = useCallback(async () => {\n    // Websocket subscriptions.\n    const startSubscriptions = async (\n      registrar: registry.accounts.Registrar,\n    ) => {\n      // Reward event queue sub.\n      const rewardQueueSubscribe = async () => {\n        const conn = registryClient.accounts.rewardEventQueueConnect(\n          registryClient.rewardEventQueue,\n        );\n        conn.on(\n          'connected',\n          (\n            rewardEventQueue: ProgramAccount<\n              registry.accounts.RewardEventQueue\n            >,\n          ) => {\n            dispatch({\n              type: ActionType.RegistrySetRewardEventQueue,\n              item: {\n                rewardEventQueue,\n              },\n            });\n          },\n        );\n        conn.on(\n          'change',\n          (\n            rewardEventQueue: ProgramAccount<\n              registry.accounts.RewardEventQueue\n            >,\n          ) => {\n            dispatch({\n              type: ActionType.RegistrySetRewardEventQueue,\n              item: {\n                rewardEventQueue,\n              },\n            });\n          },\n        );\n      };\n      // Member sub.\n      const memberSubscribe = async () => {\n        const members = await registryClient.accounts.membersWithBeneficiary(\n          wallet.publicKey,\n        );\n        // TODO: Probably want a UI to handle multiple member accounts and\n        //       choosing between them.\n        //\n        //      Alternatively, use a deterministic address.\n        if (members.length === 0) {\n          dispatch({\n            type: ActionType.RegistrySetMember,\n            item: {\n              member: undefined,\n            },\n          });\n          return;\n        }\n\n        await subscribeMember(members[0].publicKey, registryClient, dispatch);\n      };\n\n      // Staking pool token sub.\n      const poolTokenSubscribe = async () => {\n        const poolMint = await registryClient.accounts.poolTokenMint(registrar);\n        const poolMintMega = await registryClient.accounts.megaPoolTokenMint(\n          registrar,\n        );\n        dispatch({\n          type: ActionType.RegistrySetPoolMint,\n          item: {\n            poolMint: {\n              publicKey: registrar.poolMint,\n              account: poolMint,\n            },\n          },\n        });\n        dispatch({\n          type: ActionType.RegistrySetPoolMintMega,\n          item: {\n            poolMintMega: {\n              publicKey: registrar.poolMintMega,\n              account: poolMintMega,\n            },\n          },\n        });\n\n        registryClient.accounts\n          .accountConnect(registrar.poolMint, parseMintAccount)\n          .on('change', (poolMint: MintInfo) => {\n            dispatch({\n              type: ActionType.RegistrySetPoolMint,\n              item: {\n                poolMint: {\n                  publicKey: registrar.poolMint,\n                  account: poolMint,\n                },\n              },\n            });\n          });\n        registryClient.accounts\n          .accountConnect(registrar.poolMintMega, parseMintAccount)\n          .on('change', (poolMintMega: MintInfo) => {\n            dispatch({\n              type: ActionType.RegistrySetPoolMintMega,\n              item: {\n                poolMintMega: {\n                  publicKey: registrar.poolMintMega,\n                  account: poolMintMega,\n                },\n              },\n            });\n          });\n      };\n\n      await rewardQueueSubscribe();\n      await memberSubscribe();\n      await poolTokenSubscribe();\n    }; // End websocket subscriptions.\n\n    const fetchRegistrar = async () => {\n      const registrar = await registryClient.accounts.registrar();\n      dispatch({\n        type: ActionType.RegistrySetRegistrar,\n        item: {\n          registrar: {\n            publicKey: registryClient.registrar,\n            account: registrar,\n          },\n        },\n      });\n      return registrar;\n    };\n\n    const fetchSafe = async () => {\n      const lockup = await lockupClient.accounts.safe();\n      dispatch({\n        type: ActionType.LockupSetSafe,\n        item: {\n          safe: {\n            publicKey: lockupClient.safe,\n            account: lockup,\n          },\n        },\n      });\n    };\n\n    const fetchEntityAccounts = async () => {\n      const entityAccounts = await registryClient.accounts.allEntities();\n      dispatch({\n        type: ActionType.RegistrySetEntities,\n        item: {\n          entities: entityAccounts,\n        },\n      });\n      // TODO: fetching all the metadata like this is dumb as shit. Need to either\n      //       create an offchain index for the join, lazily fetch it on\n      //       demand, or denormalize and throw all the metadata into the Entity\n      //       struct.\n      const entityMetadata = await registryClient.accounts.allMetadata();\n      const defaultEntity = entityAccounts\n        .filter(e => e.publicKey.equals(network.defaultEntity))\n        .pop();\n      const defaultMetadata = {\n        publicKey: defaultEntity!.account.metadata,\n        account: await registryClient.accounts.metadata(\n          defaultEntity!.account.metadata,\n        ),\n      };\n      entityMetadata.push(defaultMetadata);\n      dispatch({\n        type: ActionType.RegistrySetMetadata,\n        item: {\n          entityMetadata,\n        },\n      });\n    };\n\n    const fetchOwnedTokenAccounts = async () => {\n      const ownedTokenAccounts = await token.getOwnedTokenAccounts(\n        lockupClient.provider.connection,\n        wallet.publicKey,\n      );\n      dispatch({\n        type: ActionType.CommonOwnedTokenAccountsSet,\n        item: {\n          ownedTokenAccounts,\n        },\n      });\n    };\n\n    const fetchVestingAccounts = async () => {\n      const vestingAccounts = await lockupClient.accounts.allVestings(\n        wallet.publicKey,\n      );\n      dispatch({\n        type: ActionType.LockupSetVestings,\n        item: {\n          vestingAccounts,\n        },\n      });\n    };\n\n    enqueueSnackbar(`Connecting to ${network.label}`, {\n      variant: 'info',\n      autoHideDuration: 2500,\n    });\n\n    dispatch({\n      type: ActionType.CommonAppWillBootstrap,\n      item: {},\n    });\n\n    const registrar = await fetchRegistrar();\n    await startSubscriptions(registrar);\n    await fetchSafe();\n    await fetchEntityAccounts();\n    await fetchOwnedTokenAccounts();\n    await fetchVestingAccounts();\n\n    dispatch({\n      type: ActionType.CommonAppDidBootstrap,\n      item: {},\n    });\n\n    enqueueSnackbar(`Connection established`, {\n      variant: 'success',\n      autoHideDuration: 2500,\n    });\n  }, [\n    lockupClient.safe,\n    lockupClient.accounts,\n    dispatch,\n    enqueueSnackbar,\n    network.label,\n    registryClient,\n    wallet.publicKey,\n    network.defaultEntity,\n    lockupClient.provider.connection,\n  ]);\n\n  const shutdown = useCallback(async () => {\n    wallet.disconnect();\n    try {\n      registryClient.accounts.rewardEventQueueDisconnect();\n    } catch (err) {\n      console.error('Error disconnecting listeners', err);\n    }\n    dispatch({\n      type: ActionType.CommonDidShutdown,\n      item: {},\n    });\n  }, [registryClient.accounts, dispatch, wallet]);\n\n  useEffect(() => {\n    if (bootstrapTrigger) {\n      bootstrap().catch(err => {\n        enqueueSnackbar(`Error bootstrapping application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n    if (shutdownTrigger) {\n      shutdown().catch(err => {\n        enqueueSnackbar(`Error shutting down application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  }, [bootstrapTrigger, bootstrap, shutdownTrigger, shutdown, enqueueSnackbar]);\n\n  return <>{props.children}</>;\n}\n\nexport async function subscribeMember(\n  m: PublicKey,\n  registryClient: registry.Client,\n  dispatch: any,\n) {\n  const [member, conn] = await registryClient.accounts.memberConnect(m);\n  conn.on('change', (member: ProgramAccount<registry.accounts.MemberDeref>) => {\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member,\n      },\n    });\n  });\n  dispatch({\n    type: ActionType.RegistrySetMember,\n    item: {\n      member,\n    },\n  });\n  const pendingWithdrawals = await registryClient.accounts.pendingWithdrawalsForMember(\n    m,\n  );\n  dispatch({\n    type: ActionType.RegistrySetPendingWithdrawals,\n    item: {\n      memberPublicKey: member.publicKey,\n      pendingWithdrawals,\n    },\n  });\n}\n","import React, { useState, useEffect, ReactElement } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Select from '@material-ui/core/Select';\nimport Menu from '@material-ui/core/Menu';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport * as registry from '@project-serum/registry';\nimport { networks } from '@project-serum/common';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\nimport * as bootstrap from './BootstrapProvider';\n\ntype HeaderProps = {\n  isAppReady: boolean;\n  member?: ProgramAccount<registry.accounts.Member>;\n};\n\nexport default function Header(props: HeaderProps) {\n  const { isAppReady } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n    };\n  });\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        background: '#172026',\n        color: 'white',\n      }}\n    >\n      <Toolbar>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <SerumLogoButton />\n            <BarButton label=\"Stake\" hrefClient=\"/\" />\n            <BarButton label=\"Trade\" href=\"https://dex.projectserum.com\" />\n            <BarButton label=\"Swap\" href=\"https://swap.projectserum.com\" />\n            <BarButton\n              label=\"Learn\"\n              href=\"https://serum-academy.com/en/serum-dex/\"\n            />\n            {network.srmFaucet && (\n              <BarButton\n                label=\"Faucet\"\n                href=\"https://www.spl-token-ui.com/#/token-faucets\"\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <NetworkSelector />\n            <WalletConnectButton\n              style={{\n                display: isAppReady ? 'none' : '',\n              }}\n            />\n            {isAppReady && <UserSelector />}\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction SerumLogoButton() {\n  const history = useHistory();\n  return (\n    <div style={{ display: 'flex' }} onClick={() => history.push('/')}>\n      <Button color=\"inherit\">\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <img\n            style={{\n              display: 'block',\n              height: '35px',\n            }}\n            alt=\"Logo\"\n            src=\"http://dex.projectserum.com/static/media/logo.49174c73.svg\"\n          />\n        </div>\n      </Button>\n    </div>\n  );\n}\n\ntype BarButtonProps = {\n  label: string;\n  hrefClient?: string;\n  href?: string;\n};\n\nfunction BarButton(props: BarButtonProps) {\n  const history = useHistory();\n  const { label, href, hrefClient } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n      }}\n      onClick={() => hrefClient && history.push(hrefClient)}\n    >\n      <Link\n        style={{ color: 'inherit', textDecoration: 'none' }}\n        href={href}\n        target=\"_blank\"\n      >\n        <Button color=\"inherit\">\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            <Typography style={{ fontSize: '15px' }}>{label}</Typography>\n          </div>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nfunction NetworkSelector() {\n  const network = useSelector((state: StoreState) => {\n    return state.common.network;\n  });\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: '10px',\n        fontSize: '15px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        onClick={e =>\n          setAnchorEl(\n            // @ts-ignore\n            e.currentTarget,\n          )\n        }\n      >\n        <BubbleChartIcon />\n        <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n          {network.label}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        style={{\n          marginLeft: '12px',\n          color: 'white',\n        }}\n      >\n        {Object.keys(networks).map((n: string) => (\n          <MenuItem\n            key={n}\n            onClick={() => {\n              handleClose();\n              dispatch({\n                type: ActionType.CommonSetNetwork,\n                item: {\n                  network: networks[n],\n                },\n              });\n            }}\n          >\n            <Typography>{networks[n].label}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nfunction UserSelector() {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, lockupClient, registryClient } = useWallet();\n  const { network, member } = useSelector((state: StoreState) => {\n    return {\n      member: state.registry.member,\n      network: state.common.network,\n    };\n  });\n\n  const createStakeAccount = async () => {\n    enqueueSnackbar('Creating stake account', {\n      variant: 'info',\n    });\n\n    // TODO: separate member creation from entity joining (i.e., make it so that\n    //       entity doesn't need to be specified here).\n    const entity = network.defaultEntity;\n    const { member } = await registryClient.createMember({\n      entity,\n      delegate: await lockupClient.accounts.vaultAuthority(\n        lockupClient.programId,\n        lockupClient.safe,\n        wallet.publicKey,\n      ),\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Stake account created ${member.toString()}`, {\n      variant: 'success',\n    });\n    bootstrap.subscribeMember(member, registryClient, dispatch);\n  };\n  return (\n    <Select\n      displayEmpty\n      renderValue={() => {\n        return (\n          <Typography style={{ overflow: 'hidden' }}>\n            {wallet.publicKey.toString()}\n          </Typography>\n        );\n      }}\n      style={{\n        marginLeft: '12px',\n        width: '150px',\n        color: 'white',\n      }}\n      onChange={e => {\n        if (e.target.value === 'disconnect') {\n          wallet.disconnect();\n        }\n      }}\n    >\n      {member.isReady && member.data === undefined && (\n        <MenuItem value=\"create-member\">\n          <div\n            onClick={() =>\n              createStakeAccount().catch(err => {\n                enqueueSnackbar(\n                  `Error creating stake account: ${err.toString()}`,\n                  {\n                    variant: 'error',\n                  },\n                );\n              })\n            }\n          >\n            <IconButton color=\"inherit\">\n              <PersonAddIcon />\n              <Typography style={{ marginLeft: '15px' }}>\n                Create stake account\n              </Typography>\n            </IconButton>\n          </div>\n        </MenuItem>\n      )}\n      <MenuItem value=\"disconnect\">\n        <IconButton color=\"inherit\">\n          <ExitToAppIcon />\n          <Typography style={{ marginLeft: '15px' }}>Disconnect</Typography>\n        </IconButton>\n      </MenuItem>\n    </Select>\n  );\n}\n\ntype WalletConnectButtonProps = {\n  style?: any;\n};\n\nexport function WalletConnectButton(\n  props: WalletConnectButtonProps,\n): ReactElement {\n  const { showDisconnect } = useSelector((state: StoreState) => {\n    return {\n      showDisconnect: state.common.isWalletConnected,\n    };\n  });\n  const dispatch = useDispatch();\n  const { wallet, lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on('disconnect', () => {\n      enqueueSnackbar('Disconnected from wallet', {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n      dispatch({\n        type: ActionType.CommonWalletDidDisconnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerShutdown,\n        item: {},\n      });\n    });\n    wallet.on('connect', async () => {\n      dispatch({\n        type: ActionType.CommonWalletDidConnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerBootstrap,\n        item: {},\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, lockupClient.provider.connection]);\n\n  return showDisconnect ? (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.disconnect()}\n    >\n      <ExitToAppIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Disconnect\n      </Typography>\n    </Button>\n  ) : (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.connect()}\n    >\n      <PersonIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Connect wallet\n      </Typography>\n    </Button>\n  );\n}\n","type Skin = {\n  active: string;\n  ready: string;\n  inactive: string;\n  notReady: string;\n  deactivating: string;\n};\n\nconst _skin: Skin = {\n  active: '#43a047',\n  ready: '#3f51b5',\n  notReady: '#ccc',\n  inactive: 'red',\n  deactivating: 'rgb(255, 121, 42)',\n};\n\nexport function instance(): Skin {\n  return _skin;\n}\n","import React from 'react';\n\nexport default function Scroll(props: any) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        overflowY: 'scroll',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          right: '0',\n          maxHeight: '100%',\n          minHeight: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport BN from 'bn.js';\nimport { useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\nimport { useWallet } from './WalletProvider';\nimport Scroll from './Scroll';\n\nexport default function Messages() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient } = useWallet();\n  const [messages, setMessages] = useState<null | Array<\n    registry.metaEntity.accounts.mqueue.Message\n  >>(null);\n  const [message, setMessage] = useState('');\n  let { metadata, member } = useSelector((state: StoreState) => {\n    const member = state.registry.member!;\n    const entity = state.registry.entities.filter(\n      e =>\n        e.publicKey.toString() ===\n        member.data!.account.member.entity.toString(),\n    )[0];\n    return {\n      metadata: state.registry.entityMetadata.get(entity.publicKey.toString()),\n      member,\n    };\n  });\n  const divRef = useRef(null);\n  useEffect(() => {\n    async function fetchMessages() {\n      if (metadata) {\n        const mqueue = registryClient.accounts.mqueueConnect(\n          metadata!.account.chat,\n        );\n        mqueue.on('connected', messages => {\n          setMessages(messages);\n        });\n        mqueue.on('message', message => {\n          // todo\n        });\n        mqueue.on('mqueue', mqueue => {\n          setMessages(mqueue.messages());\n          if (divRef) {\n            // @ts-ignore\n            divRef.current.scrollIntoView({ behavior: 'smooth' });\n          }\n        });\n      }\n    }\n    fetchMessages();\n  }, [registryClient.accounts, metadata]);\n\n  const sendMessage = async () => {\n    enqueueSnackbar('Sending message...', {\n      variant: 'info',\n    });\n    await registryClient.sendMessage({\n      from: member.data!.publicKey,\n      ts: new BN(Date.now()),\n      content: message,\n      mqueue: metadata!.account.chat,\n    });\n    closeSnackbar();\n  };\n  const handleKeyPress = async (e: any) => {\n    if (e.key === 'Enter') {\n      try {\n        await sendMessage();\n        setMessage('');\n      } catch (err) {\n        enqueueSnackbar(`Error sending message: ${err.toString()}`, {\n          variant: 'error',\n        });\n      }\n    }\n  };\n  return (\n    <div style={{ background: 'white', height: '100%' }}>\n      {messages == null ? (\n        <CircularProgress />\n      ) : (\n        <div\n          style={{ display: 'flex', flexDirection: 'column', height: '100%' }}\n        >\n          <div\n            style={{\n              textAlign: 'left',\n              borderBottom: 'solid 1pt #ccc',\n              padding: '10px',\n            }}\n          >\n            <Typography style={{ fontWeight: 'bold', fontSize: '14px' }}>\n              {metadata!.account.name} Chat\n            </Typography>\n          </div>\n          <Scroll>\n            <div style={{ flex: 1 }}>\n              <ul style={{ paddingLeft: '10px' }}>\n                {messages.map(m => {\n                  return (\n                    <li\n                      style={{\n                        display: 'flex',\n                      }}\n                    >\n                      <Typography\n                        style={{\n                          fontSize: '14px',\n                          width: '75px',\n                          overflow: 'hidden',\n                        }}\n                        color=\"textSecondary\"\n                      >\n                        {m.from.toString()}\n                      </Typography>\n                      <Typography\n                        style={{\n                          textAlign: 'left',\n                          marginLeft: '10px',\n                          fontSize: '14px',\n                        }}\n                      >\n                        {m.content}\n                      </Typography>\n                    </li>\n                  );\n                })}\n                <div ref={divRef} />\n              </ul>\n            </div>\n          </Scroll>\n          <div style={{ marginTop: '10px', display: 'flex' }}>\n            <TextField\n              onKeyPress={handleKeyPress}\n              size=\"small\"\n              variant=\"outlined\"\n              value={message}\n              onChange={e => setMessage(e.target.value as string)}\n              style={{\n                width: '100%',\n                marginBottom: '10px',\n                marginLeft: '10px',\n                marginRight: '10px',\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport * as skin from '../../skin';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Messaging from './Messaging';\n\nexport default function Footer() {\n  const [chatDisplay, setChatDisplay] = useState(false);\n  const [envDisplay, setEnvDisplay] = useState(false);\n  const { isAppReady, isDisconnected, network, hasMember } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        isAppReady:\n          state.common.isWalletConnected &&\n          state.common.bootstrapState === BootstrapState.Bootstrapped,\n        isDisconnected: !state.common.isWalletConnected,\n        hasMember: state.registry.member,\n      };\n    },\n  );\n  return (\n    <div\n      style={{\n        zIndex: 99,\n        position: 'fixed',\n        width: '100%',\n        bottom: 0,\n        textAlign: 'center',\n        height: '30px',\n        backgroundColor: '#fbfbfb',\n        borderTop: 'solid 1pt #ccc',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            marginRight: '10px',\n          }}\n        >\n          <Brightness1Icon\n            style={{\n              color: isAppReady\n                ? skin.instance().active\n                : isDisconnected\n                ? '#ccc'\n                : skin.instance().ready,\n              fontSize: '12px',\n            }}\n          />\n        </div>\n        <IconButton\n          style={{\n            color: 'inherit',\n            padding: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n          onClick={() => {\n            setEnvDisplay(!envDisplay);\n          }}\n        >\n          <Typography style={{ fontSize: '14px', fontWeight: 'bold' }}>\n            {network.label}\n          </Typography>\n        </IconButton>\n      </div>\n      <div style={{ display: 'flex' }}>\n        {hasMember && isAppReady && (\n          <div\n            style={{ display: 'none' /*'flex'*/ }}\n            onClick={() => {\n              setChatDisplay(!chatDisplay);\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <Button style={{ padding: 0 }}>\n                <Typography style={{ fontSize: '14px', fontWeight: 'bold' }}>\n                  Chat\n                </Typography>\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n      {envDisplay && (\n        <div\n          style={{\n            overflowY: 'scroll',\n            position: 'fixed',\n            bottom: '30px',\n            left: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <NetworkEnvironment />\n        </div>\n      )}\n      {hasMember && chatDisplay && (\n        <div\n          style={{\n            position: 'fixed',\n            bottom: '30px',\n            right: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <Messaging />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction NetworkEnvironment() {\n  let { network, registrar, safe } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: state.registry.registrar,\n      safe: state.lockup.safe,\n    };\n  });\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Programs and Global Accounts\n      </Typography>\n      <ul>\n        <li>\n          SRM Faucet:{' '}\n          {network.srmFaucet ? network.srmFaucet.toString() : 'None'}\n        </li>\n        <li>\n          MSRM Faucet:{' '}\n          {network.msrmFaucet ? network.msrmFaucet.toString() : 'None'}\n        </li>\n        <li>SRM Mint: {network.srm.toString()}</li>\n        <li>MSRM Mint: {network.msrm.toString()}</li>\n        <li>Registry Program: {network.registryProgramId.toString()}</li>\n        <li>Lockup Program: {network.lockupProgramId.toString()}</li>\n        <li>Meta Entity Program: {network.lockupProgramId.toString()}</li>\n        <li>Registrar Account: {network.registrar.toString()}</li>\n        <li>Safe Account: {network.safe.toString()}</li>\n      </ul>\n      {registrar && safe && (\n        <>\n          <Typography\n            style={{\n              paddingLeft: '10px',\n              fontSize: '14px',\n              fontWeight: 'bold',\n            }}\n          >\n            Registrar\n          </Typography>\n          <ul>\n            <li>Authority: {registrar.account.authority.toString()}</li>\n            <li>\n              Max stake per entity:{' '}\n              {registrar.account.maxStakePerEntity.toString()}\n            </li>\n            <li>\n              Withdrawal timelocK:{' '}\n              {registrar.account.withdrawalTimelock.toString()}\n            </li>\n            <li>\n              Deactivation timelock:{' '}\n              {registrar.account.deactivationTimelock.toString()}\n            </li>\n            <li>Pool token: {registrar.account.poolMint.toString()}</li>\n            <li>\n              Mega pool token: {registrar.account.poolMintMega.toString()}\n            </li>\n          </ul>\n          <Typography\n            style={{\n              paddingLeft: '10px',\n              fontSize: '14px',\n              fontWeight: 'bold',\n            }}\n          >\n            Safe\n          </Typography>\n          <ul>\n            <li>Authority: {safe.account.authority.toString()}</li>\n            <li>Whitelist: {safe.account.whitelist.toString()}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Header from './Header';\nimport Footer from './Footer';\n\ntype Props = {};\n\nexport default function Layout(props: PropsWithChildren<Props>) {\n  const { isAppReady } = useSelector((state: StoreState) => {\n    return {\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        backgroundColor: 'rgb(251, 251, 251)',\n      }}\n    >\n      <RiskBar />\n      <Header isAppReady={isAppReady} />\n      <div\n        style={{\n          flex: 1,\n          display: 'flex',\n          marginBottom: '30px', // Compensates for the fixed position footer.\n        }}\n      >\n        {!isAppReady ? (\n          <DisconnectedSplash />\n        ) : (\n          <div style={{ width: '100%' }}>{props.children}</div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction RiskBar() {\n  return (\n    <div\n      style={{\n        color: '#fff',\n        backgroundColor: '#f50057',\n        height: '30px',\n        textAlign: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <Typography style={{ fontSize: '14px' }}>\n          This is unaudited software. Use at your own risk.\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction DisconnectedSplash() {\n  const classes = useStyles();\n  const { network, isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        flex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <div style={{ width: '100%', display: 'flex' }}>\n        {isDisconnected ? (\n          <div\n            style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <Typography\n              style={{ marginLeft: '24px' }}\n              color=\"textSecondary\"\n              variant=\"h4\"\n            >\n              Disconnected\n            </Typography>\n          </div>\n        ) : (\n          <div style={{ width: '100%' }}>\n            <div style={{ width: '100%' }} className={classes.root}>\n              <div>\n                <Typography variant=\"h5\">\n                  {`Connecting to ${network.label}...`}\n                </Typography>\n              </div>\n              <div\n                style={{\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  width: '300px',\n                }}\n              >\n                <LinearProgress style={{ width: '100%' }} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n};\n\nexport default function OwnedTokenAccountsSelect(p: Props) {\n  const { mint, variant, onChange, style } = p;\n  const ownedTokenAccounts = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.common.ownedTokenAccounts.filter(\n      ota => ota.account.mint.toString() === mint.toString(),\n    );\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const token = ownedTokenAccounts\n          .filter(ota => ota.publicKey.equals(pubkey))\n          .pop();\n        onChange(pubkey, new BN(token!.account.amount));\n      }}\n    >\n      {ownedTokenAccounts.length === 0 ? (\n        <MenuItem value={''}>No token accounts found</MenuItem>\n      ) : (\n        ownedTokenAccounts.map(ownedTokenAccount => {\n          return (\n            <MenuItem value={ownedTokenAccount.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  overflow: 'hidden',\n                }}\n              >\n                <div>{`${ownedTokenAccount.publicKey}`}</div>\n                <div\n                  style={{ float: 'right', color: '#ccc' }}\n                >{`${ownedTokenAccount.account.amount}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { TransactionSignature } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  signature: string;\n};\n\nexport async function withTx(\n  snack: any,\n  beforeLabel: string,\n  afterLabel: string,\n  execTx: () => Promise<TransactionSignature>,\n) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info',\n  });\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error',\n    });\n  }\n}\n\nexport function ViewTransactionOnExplorerButton(props: Props) {\n  const { signature } = props;\n  const { explorerClusterSuffix } = useSelector((state: StoreState) => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix,\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { EntityActivityLabel } from './EntityGallery';\n\ntype Props = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n};\n\nexport default function Entity(props: Props) {\n  const { entity } = props;\n  let { isWalletConnected, member, registrar } = useSelector(\n    (state: StoreState) => {\n      return {\n        isWalletConnected: state.common.isWalletConnected,\n        member: state.registry.member,\n        registrar: state.registry.registrar!,\n      };\n    },\n  );\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor: '#fbfbfb',\n        }}\n      >\n        <div\n          style={{\n            paddingTop: 50,\n            paddingRight: 50,\n            paddingLeft: 50,\n          }}\n        >\n          <div\n            style={{\n              paddingBottom: '10px',\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderBottom: 'solid #fbfbfb',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n              }}\n            >\n              <div>\n                <Typography\n                  variant=\"h1\"\n                  style={{\n                    fontSize: 25,\n                    fontWeight: 700,\n                    textAlign: 'center',\n                  }}\n                >\n                  {entity.publicKey.toString()}\n                </Typography>\n              </div>\n              <div>\n                <Typography\n                  color=\"textSecondary\"\n                  style={{\n                    paddingBottom: 10,\n                  }}\n                >\n                  Leader - {entity.account.leader.toString()}\n                </Typography>\n              </div>\n              <div>\n                <EntityActivityLabel entity={entity} />\n              </div>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <div style={{ flex: 1 }}></div>\n              {isWalletConnected && member.data !== undefined && (\n                <>\n                  {member.data!.account.member.entity.toString() !==\n                  entity.publicKey.toString() ? (\n                    <JoinButton\n                      registrar={registrar}\n                      entity={entity}\n                      member={member.data!}\n                    />\n                  ) : (\n                    <Button\n                      disableElevation\n                      disableFocusRipple\n                      disableRipple\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <Typography>My Node</Typography>\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            paddingTop: 50,\n            paddingBottom: 50,\n            paddingLeft: 50,\n            paddingRight: 50,\n          }}\n        >\n          <StakeContent entity={entity} />\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype StakeContentProps = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n};\n\nfunction StakeContent(props: StakeContentProps) {\n  const { entity } = props;\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <BalanceGridItem\n          label=\"Stake Pool Shares\"\n          amount={entity.account.balances.sptAmount.toString()}\n        />\n        <BalanceGridItem\n          label=\"Mega Stake Pool Shares\"\n          amount={entity.account.balances.sptMegaAmount.toString()}\n        />\n      </Grid>\n    </div>\n  );\n}\ntype BalanceGridItemProps = {\n  label: string;\n  amount: string;\n};\n\nfunction BalanceGridItem(props: BalanceGridItemProps) {\n  const { label, amount } = props;\n  return (\n    <Grid\n      item\n      xs={6}\n      style={{\n        height: '250px',\n      }}\n    >\n      <Card\n        style={{\n          boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n          width: '100%',\n          height: '100%',\n          paddingTop: '24px',\n          paddingBottom: '24px',\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textSecondary\"\n              style={{\n                fontSize: '20px',\n                textAlign: 'center',\n              }}\n            >\n              {label}\n            </Typography>\n          </div>\n          <div\n            style={{\n              height: '100%',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              display: 'flex',\n              textAlign: 'center',\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              style={{\n                fontSize: '40px',\n              }}\n            >\n              {amount}\n            </Typography>\n          </div>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n\ntype JoinButtonProps = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n  member: ProgramAccount<registry.accounts.MemberDeref>;\n  registrar: ProgramAccount<registry.accounts.Registrar>;\n};\n\nfunction JoinButton(props: JoinButtonProps) {\n  const { entity, member, registrar } = props;\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const joinEntity = async () => {\n    enqueueSnackbar(`Joining ${entity.publicKey}`, {\n      variant: 'info',\n    });\n\n    const oldEntity = member.account.member.entity;\n    const newEntity = entity.publicKey;\n\n    const { tx } = await registryClient.switchEntity({\n      member: member.publicKey,\n      newEntity,\n      registrar: registrar.account,\n    });\n\n    const updatedOldEntity = await registryClient.accounts.entity(oldEntity);\n    const updatedNewEntity = await registryClient.accounts.entity(newEntity);\n\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: oldEntity,\n          account: updatedOldEntity,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: newEntity,\n          account: updatedNewEntity,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Joined entity ${entity.publicKey}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() =>\n          joinEntity().catch(err => {\n            enqueueSnackbar(`Error joining entity: ${err.toString()}`, {\n              variant: 'error',\n            });\n          })\n        }\n      >\n        Join\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { Img } from 'react-image';\nimport { PublicKey } from '@solana/web3.js';\nimport { accounts, metaEntity } from '@project-serum/registry';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport Entity from './Entity';\nimport * as skin from '../../skin';\n\nexport default function EntityGallery() {\n  const [entityAddress, setEntityAddress] = useState<null | PublicKey>(null);\n  let { entities, metadata } = useSelector((state: StoreState) => {\n    return {\n      entities: state.registry.entities,\n      metadata: state.registry.entityMetadata,\n      member: state.registry.member,\n    };\n  });\n  // Sort entities by activation.\n  entities = entities\n    .filter(e => e.account.state.active !== undefined)\n    .concat(\n      entities.filter(e => e.account.state.pendingDeactivation !== undefined),\n    )\n    .concat(entities.filter(e => e.account.state.inactive !== undefined));\n\n  let entity =\n    entityAddress &&\n    entities\n      .filter(e => e.publicKey.toString() === entityAddress.toString())\n      .pop();\n  return (\n    <>\n      <EntityDialog\n        open={entity !== null}\n        onClose={() => setEntityAddress(null)}\n        entity={entity}\n      />\n      <div style={{ flex: 1 }}>\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '10px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography\n                  style={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Nodes\n                </Typography>\n              </div>\n              <NewButton\n                style={{\n                  // For development only. Otherwise, entity creation is done through CLI\n                  // by a node leader.\n                  display: 'none',\n                }}\n              />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n              }}\n            >\n              {entities.map(entity => (\n                <EntityCard\n                  metadata={metadata.get(entity.publicKey.toString())}\n                  entity={entity}\n                  onClick={() => setEntityAddress(entity.publicKey)}\n                />\n              ))}\n            </div>\n            <style>\n              {`\n.entity-card-container {\n  transition: box-shadow .2s ease-out,-webkit-box-shadow .2s ease-out,-moz-box-shadow .2s ease-out;\n}\n.entity-card-container:hover {\n  cursor: pointer;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -moz-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -webkit-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n}\n.entity-card-container-inner {\n  transition: transform .2s ease-out,-webkit-transform .2s ease-out;\n}\n.entity-card-container-inner:hover {\n  transform: scale(1.025);\n  -webkit-transform: scalee(1.025);\n}\n\t\t\t\t\t`}\n            </style>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype EntityCardProps = {\n  entity: ProgramAccount<accounts.Entity>;\n  metadata?: ProgramAccount<metaEntity.accounts.metadata.Metadata>;\n  onClick: () => void;\n};\n\nfunction EntityCard(props: EntityCardProps) {\n  const { entity, metadata, onClick } = props;\n  const imageUrl = metadata?.account.imageUrl;\n\n  return (\n    <>\n      <div\n        style={{\n          width: '304px',\n          padding: '5px',\n        }}\n      >\n        <div\n          className=\"entity-card-container\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <Card\n            onClick={onClick}\n            style={{\n              borderRadius: 10,\n              height: '361px',\n              boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              className=\"entity-card-container-inner\"\n              style={{\n                display: 'flex',\n                height: '100%',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n              }}\n            >\n              <div style={{ height: '144px', overflow: 'hidden' }}>\n                <Img\n                  style={{ width: '100%' }}\n                  src={[`${imageUrl}`]}\n                  unloader={\n                    <div\n                      style={{\n                        width: '100%',\n                        height: '100%',\n                        background: 'grey',\n                      }}\n                    ></div>\n                  }\n                />\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: '16px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>\n                  <Typography\n                    style={{\n                      fontWeight: 'bold',\n                      fontSize: '16px',\n                    }}\n                  >\n                    {metadata?.account.name}\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    style={{\n                      fontSize: '12px',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    {entity.publicKey.toString()}\n                  </Typography>\n                  <Typography\n                    style={{\n                      marginTop: '10px',\n                      fontSize: '14px',\n                    }}\n                  >\n                    {metadata?.account.about}\n                  </Typography>\n                </div>\n                <div\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                  <EntityActivityLabel entity={entity} />\n                  <Typography\n                    style={{ fontSize: '14px' }}\n                    color=\"textSecondary\"\n                  >\n                    {`${entity.account.balances.sptAmount.toString()} | ${entity.account.balances.sptMegaAmount.toString()}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype EntityActivityLabelProps = {\n  entity: ProgramAccount<accounts.Entity>;\n  noBubble?: boolean;\n  textStyle?: any;\n};\n\nexport function EntityActivityLabel(props: EntityActivityLabelProps) {\n  const { entity, noBubble, textStyle } = props;\n  return (\n    <>\n      {entity.account.state.active !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().active}\n          text=\"Active\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n      {entity.account.state.pendingDeactivation !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().deactivating}\n          text=\"Deactivating\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n      {entity.account.state.inactive !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().inactive}\n          text=\"Inactive\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n    </>\n  );\n}\n\ntype ActivityLabelProps = {\n  color: string;\n  text: string;\n  textStyle?: any;\n  noBubble?: boolean;\n};\n\nfunction ActivityLabel(props: ActivityLabelProps) {\n  const { color, text, noBubble, textStyle } = props;\n  const tStyle = Object.assign(textStyle || {}, noBubble ? { color } : {});\n  return (\n    <div style={{ display: 'flex' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          marginRight: '10px',\n        }}\n      >\n        <Brightness1Icon\n          style={{\n            display: noBubble ? 'none' : '',\n            color,\n            fontSize: '14px',\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          fontSize: '10px',\n        }}\n      >\n        <Typography color=\"textSecondary\" style={tStyle}>\n          {text}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\ntype NewButtonProps = {\n  style?: any;\n};\n\nfunction NewButton(props?: NewButtonProps) {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <CreateEntityDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n      <div style={props && props.style} onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n    </>\n  );\n}\n\ntype EntityDialogProps = {\n  entity?: ProgramAccount<accounts.Entity> | null;\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction EntityDialog(props: EntityDialogProps) {\n  const { entity, open, onClose } = props;\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"md\">\n      <DialogContent\n        style={{\n          backgroundColor: '#fbfbfb',\n          padding: 0,\n        }}\n      >\n        {entity && <Entity entity={entity} />}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction CreateEntityDialog(props: EntityDialogProps) {\n  const { open, onClose } = props;\n\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const isCreateEnabled = name.length > 0;\n\n  const createEntity = async () => {\n    enqueueSnackbar('Creating entity...', {\n      variant: 'info',\n    });\n    const { entity, metadata } = await registryClient.createEntity({\n      name,\n      about,\n      imageUrl,\n    });\n    const entityAccount = await registryClient.accounts.entity(entity);\n    dispatch({\n      type: ActionType.RegistryCreateEntity,\n      item: {\n        entity: {\n          publicKey: entity,\n          account: entityAccount,\n        },\n      },\n    });\n    const newMetadata = await registryClient.accounts.metadata(metadata);\n    dispatch({\n      type: ActionType.RegistryCreateMetadata,\n      item: {\n        entityPublicKey: entity,\n        metadata: {\n          publicKey: metadata,\n          account: newMetadata,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Entity created ${entity}`, {\n      variant: 'success',\n    });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"md\">\n      <DialogTitle>Create Entity</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <TextField\n          label=\"About\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={about}\n          onChange={e => setAbout(e.target.value)}\n        />\n        <TextField\n          label=\"Image URL\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={imageUrl}\n          onChange={e => setImageUrl(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          onClick={() =>\n            createEntity()\n              .then(() => onClose())\n              .catch(err => {\n                enqueueSnackbar(`Error creating entity: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              })\n          }\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isCreateEnabled}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { accounts } from '@project-serum/registry';\nimport { ProgramAccount } from '@project-serum/common';\nimport { State as StoreState, AsyncData } from '../store/reducer';\n\nexport default function Me() {\n  const { member } = useSelector((state: StoreState) => {\n    return {\n      member: state.registry.member,\n    };\n  });\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        {member.isReady && member.data !== undefined && (\n          <MemberBalancesCard member={member} />\n        )}\n      </div>\n    </div>\n  );\n}\n\ntype MemberBalancesCardProps = {\n  member: AsyncData<ProgramAccount<accounts.MemberDeref>>;\n};\n\nfunction MemberBalancesCard(props: MemberBalancesCardProps) {\n  const { member } = props;\n  const tables = [\n    {\n      title: 'Main Balances',\n      description: 'Balances transferred directly.',\n      rows:\n        !member.isReady || member.data === undefined\n          ? null\n          : [\n              {\n                token: 'SRM',\n                balance: member.data!.account.balances[0]!.vault.amount.toString(),\n                stake: member.data!.account.balances[0].vaultStake.amount.toString(),\n                spt: member.data!.account.balances[0].spt.amount.toString(),\n                pending: member.data!.account.balances[0].vaultPendingWithdrawal.amount.toString(),\n              },\n              {\n                token: 'MSRM',\n                balance: member.data!.account.balances[0].vaultMega.amount.toString(),\n                stake: member.data!.account.balances[0].vaultStakeMega.amount.toString(),\n                spt: member.data!.account.balances[0].sptMega.amount.toString(),\n                pending: member.data!.account.balances[0].vaultPendingWithdrawalMega.amount.toString(),\n              },\n            ],\n    },\n    {\n      title: 'Locked Balances',\n      description: 'Total balances transferred from the lockup program.',\n      rows:\n        !member.isReady || member.data === undefined\n          ? null\n          : [\n              {\n                token: 'SRM',\n                balance: member.data!.account.balances[1].vault.amount.toString(),\n                stake: member.data!.account.balances[1].vaultStake.amount.toString(),\n                spt: member.data!.account.balances[1].spt.amount.toString(),\n                pending: member.data!.account.balances[1].vaultPendingWithdrawal.amount.toString(),\n              },\n              {\n                token: 'MSRM',\n                balance: member.data!.account.balances[1].vaultMega.amount.toString(),\n                stake: member.data!.account.balances[1].vaultStakeMega.amount.toString(),\n                spt: member.data!.account.balances[1].sptMega.amount.toString(),\n                pending: member.data!.account.balances[1].vaultPendingWithdrawalMega.amount.toString(),\n              },\n            ],\n    },\n  ];\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <CardHeader\n        title={'My Membership'}\n        subheader={\n          !member.isReady ? (\n            <CircularProgress />\n          ) : (\n            member.data!.publicKey.toString()\n          )\n        }\n      />\n      <CardContent\n        style={{\n          position: 'relative',\n          paddingTop: 0,\n          paddingBottom: '16px',\n        }}\n      >\n        {tables.map(t => (\n          <BalanceTable\n            key={t.title}\n            title={t.title}\n            description={t.description}\n            rows={t.rows}\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\ntype BalanceTableProps = {\n  title: string;\n  description: string;\n  rows:\n    | null\n    | {\n        token: string;\n        balance: string;\n        stake: string;\n        pending: string;\n        spt: string;\n      }[];\n};\n\nfunction BalanceTable(props: BalanceTableProps) {\n  const { title, rows, description } = props;\n  return (\n    <div style={{ marginBottom: '16px' }}>\n      <Typography style={{ fontWeight: 'bold' }}>{title}</Typography>\n      <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n        {description}\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Token</TableCell>\n              <TableCell align=\"right\">Available</TableCell>\n              <TableCell align=\"right\">Pending</TableCell>\n              <TableCell align=\"right\">Staked</TableCell>\n              <TableCell align=\"right\">Shares</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows === null ? (\n              <CircularProgress />\n            ) : (\n              rows.map(row => (\n                <TableRow key={row.token}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.token}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.balance}</TableCell>\n                  <TableCell align=\"right\">{row.pending}</TableCell>\n                  <TableCell align=\"right\">{row.stake}</TableCell>\n                  <TableCell align=\"right\">{row.spt}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport { MintInfo, u64 } from '@solana/spl-token';\nimport { PublicKey } from '@solana/web3.js';\nimport { accounts } from '@project-serum/registry';\nimport { useWallet } from '../components/common/WalletProvider';\nimport { ViewTransactionOnExplorerButton } from '../components/common/Notification';\nimport { State as StoreState, ProgramAccount } from '../store/reducer';\nimport { ActionType } from '../store/actions';\nimport * as skin from '../skin';\n\nexport default function Stake() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { poolTokenMint, megaPoolTokenMint, member, registrar } = useSelector(\n    (state: StoreState) => {\n      return {\n        poolTokenMint: state.registry.poolTokenMint,\n        megaPoolTokenMint: state.registry.megaPoolTokenMint,\n        member: state.registry.member.data!,\n        registrar: state.registry.registrar,\n      };\n    },\n  );\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createPoolTokens = async (\n    amount: number,\n    label: string,\n    isMega?: boolean,\n    isLocked?: boolean,\n  ) => {\n    const balances = member.account.member.balances[isLocked ? 1 : 0];\n    const balanceId = balances.owner;\n    const spt = isMega ? balances.sptMega : balances.spt;\n\n    enqueueSnackbar(`Creating ${spt} ${label} Pool tokens`, {\n      variant: 'info',\n    });\n\n    const { tx } = await registryClient.stake({\n      member: {\n        publicKey: member.publicKey,\n        account: member.account.member,\n      },\n      amount: new u64(amount),\n      spt,\n      isMega,\n      balanceId,\n    });\n    const updatedEntity = await registryClient.accounts.entity(\n      member.account.member.entity,\n    );\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: member.account.member.entity,\n          account: updatedEntity,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Creation complete`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const redeemPoolTokens = async (\n    amount: number,\n    label: string,\n    isMega?: boolean,\n    isLocked?: boolean,\n  ) => {\n    enqueueSnackbar(\n      `Initiating redemption for ${amount} ${label} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n    const balances = member.account.member.balances[isLocked ? 1 : 0];\n    const balanceId = balances.owner;\n    const spt = isMega ? balances.sptMega : balances.spt;\n    const { tx, pendingWithdrawal } = await registryClient.startStakeWithdrawal(\n      {\n        member: {\n          publicKey: member.publicKey,\n          account: member.account.member,\n        },\n        amount: new u64(amount),\n        registrar: registrar!.account,\n        spt,\n        isMega,\n        balanceId,\n      },\n    );\n    const updatedEntity = await registryClient.accounts.entity(\n      member.account.member.entity,\n    );\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: member.account.member.entity,\n          account: updatedEntity,\n        },\n      },\n    });\n    const pwAccount = await registryClient.accounts.pendingWithdrawal(\n      pendingWithdrawal,\n    );\n    dispatch({\n      type: ActionType.RegistryCreatePendingWithdrawal,\n      item: {\n        memberPublicKey: member!.publicKey,\n        pendingWithdrawal: {\n          publicKey: pendingWithdrawal,\n          account: pwAccount,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Pending redemption ${pendingWithdrawal.toString()}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const createSrmPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      createPoolTokens(shares, 'SRM', false, isLocked).catch(err => {\n        enqueueSnackbar(`Error creating srm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemSrmPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, 'SRM', false, isLocked).catch(err => {\n        enqueueSnackbar(`Error redeeming srm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  const createMsrmPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      createPoolTokens(shares, 'MSRM', true, isLocked).catch(err => {\n        enqueueSnackbar(`Error creating msrm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemMsrmPool = async (shares: number, isLocked: boolean) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, 'MSRM', true, isLocked).catch(err => {\n        enqueueSnackbar(`Error redeeming msrm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        <PoolCard\n          title={'Stake Pool'}\n          poolTokenMint={poolTokenMint!}\n          disabled={member === undefined}\n          create={createSrmPool}\n          redeem={redeemSrmPool}\n          isMega={false}\n          registrar={registrar!}\n        />\n        <PoolCard\n          title={'Mega Stake Pool'}\n          poolTokenMint={megaPoolTokenMint!}\n          disabled={member === undefined}\n          create={createMsrmPool}\n          redeem={redeemMsrmPool}\n          isMega={true}\n          registrar={registrar!}\n        />\n      </div>\n      <RedemptionList\n        style={{\n          marginBottom: '24px',\n        }}\n      />\n    </div>\n  );\n}\n\ntype PoolCardProps = {\n  title: string;\n  poolTokenMint: ProgramAccount<MintInfo>;\n  registrar: ProgramAccount<accounts.Registrar>;\n  isMega: boolean;\n  disabled: boolean;\n  create: (shares: number, isLocked: boolean) => void;\n  redeem: (shares: number, isLocked: boolean) => void;\n};\n\nfunction PoolCard(props: PoolCardProps) {\n  const {\n    title,\n    create,\n    redeem,\n    poolTokenMint,\n    disabled,\n    registrar,\n    isMega,\n  } = props;\n  const [srmPoolAmount, setSrmPoolAmount] = useState<null | number>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const pricePerShare = isMega\n    ? registrar.account.stakeRateMega\n    : registrar.account.stakeRate;\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <CardHeader\n          title={title}\n          subheader={poolTokenMint.publicKey.toString()}\n        />\n        <div\n          style={{\n            paddingRight: '16px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography color=\"textSecondary\"></Typography>\n        </div>\n      </div>\n      <CardContent>\n        <div\n          style={{\n            marginBottom: '16px',\n          }}\n        >\n          <Typography style={{ fontWeight: 'bold' }}>Total shares</Typography>\n          <Typography>{poolTokenMint.account.supply.toString()}</Typography>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Price per share\n          </Typography>\n          <Typography>{pricePerShare.toString()}</Typography>\n        </div>\n        <div>\n          <div style={{ marginBottom: '10px' }}>\n            <FormControl>\n              <TextField\n                style={{ width: '100%' }}\n                label=\"Shares\"\n                type=\"number\"\n                variant=\"outlined\"\n                onChange={e => setSrmPoolAmount(parseInt(e.target.value))}\n              />\n            </FormControl>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Button\n                disabled={\n                  disabled || srmPoolAmount === null || srmPoolAmount < 1\n                }\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => create(srmPoolAmount as number, isLocked)}\n              >\n                Stake\n              </Button>\n              <Button\n                disabled={\n                  disabled || srmPoolAmount === null || srmPoolAmount < 1\n                }\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{ marginLeft: '10px' }}\n                onClick={() => redeem(srmPoolAmount as number, isLocked)}\n              >\n                Unstake\n              </Button>\n            </div>\n            <div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={isLocked}\n                    onChange={() => setIsLocked(!isLocked)}\n                  />\n                }\n                labelPlacement={'start'}\n                label=\"Locked balances\"\n              />\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype RedemptionListProps = {\n  style: any;\n};\n\nfunction RedemptionList(props: RedemptionListProps) {\n  const { pendingWithdrawals, member, registrar } = useSelector(\n    (state: StoreState) => {\n      const member = state.registry.member;\n      return {\n        member,\n        registrar: state.registry.registrar!,\n        pendingWithdrawals:\n          member.isReady && member.data\n            ? state.registry.pendingWithdrawals.get(\n                member.data!.publicKey.toString(),\n              )\n            : [],\n      };\n    },\n  );\n  return (\n    <div style={props.style}>\n      <Card\n        style={{\n          marginLeft: '20px',\n          marginTop: '24px',\n          width: '294px',\n        }}\n      >\n        <CardContent\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            paddingTop: 0,\n          }}\n        >\n          <div\n            style={{\n              marginLeft: '24px',\n              marginTop: '24px',\n              marginRight: '24px',\n              borderBottom: 'solid 1pt #ccc',\n              paddingBottom: '12px',\n            }}\n          >\n            <Typography style={{}}>Redemptions</Typography>\n          </div>\n          <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\n            {pendingWithdrawals && pendingWithdrawals.length > 0 ? (\n              pendingWithdrawals.map((pw, idx) => {\n                return (\n                  <RedemptionListItem\n                    key={pw.publicKey.toString()}\n                    isLast={idx === pendingWithdrawals.length - 1}\n                    registrar={registrar}\n                    pw={pw}\n                    member={member.data!}\n                  />\n                );\n              })\n            ) : (\n              <div\n                style={{\n                  paddingBottom: '24px',\n                  paddingTop: '12px',\n                }}\n              >\n                <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                  None found\n                </Typography>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\ntype RedemptionListItemProps = {\n  isLast?: boolean;\n  registrar: ProgramAccount<accounts.Registrar>;\n  pw: ProgramAccount<accounts.PendingWithdrawal>;\n  member: ProgramAccount<accounts.MemberDeref>;\n};\n\nfunction RedemptionListItem(props: RedemptionListItemProps) {\n  const { isLast, pw, member, registrar } = props;\n  const sptLabel = (poolMint: PublicKey): string => {\n    const isLocked = !pw.account.balanceId.equals(\n      member.account.member.beneficiary,\n    );\n    const l = isLocked ? '(locked)' : '';\n    if (poolMint.equals(registrar.account.poolMint)) {\n      return `SRM ${l}`;\n    } else {\n      return `MSRM ${l}`;\n    }\n  };\n  return (\n    <div\n      style={{\n        paddingBottom: !isLast ? '12px' : '24px',\n        paddingTop: '12px',\n        borderBottom: 'solid 1pt #ccc',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <div>\n          <Typography style={{ fontWeight: 'bold', fontSize: '14px' }}>\n            {`${pw.account.amount} ${sptLabel(pw.account.pool)}`}\n          </Typography>\n        </div>\n        <div>\n          <PendingWithdrawalButton\n            registrar={registrar}\n            member={member}\n            pendingWithdrawal={pw}\n          />\n        </div>\n      </div>\n      <Typography style={{ fontSize: '14px' }}>\n        {`Start: ${new Date(\n          pw.account.startTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography style={{ fontSize: '14px' }}>\n        {`End:   ${new Date(\n          pw.account.endTs.toNumber() * 1000,\n        ).toLocaleString()}`}\n      </Typography>\n      <Typography\n        color=\"textSecondary\"\n        style={{\n          fontSize: '14px',\n          overflow: 'hidden',\n        }}\n      >\n        {pw.account.pool.toString()}\n      </Typography>\n    </div>\n  );\n}\n\ntype PendingWithdrawalButtonProps = {\n  registrar: ProgramAccount<accounts.Registrar>;\n  pendingWithdrawal: ProgramAccount<accounts.PendingWithdrawal>;\n  member: ProgramAccount<accounts.MemberDeref>;\n};\n\nfunction PendingWithdrawalButton(props: PendingWithdrawalButtonProps) {\n  const { pendingWithdrawal, member, registrar } = props;\n  const { registryClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const endPendingWithdrawal = async () => {\n    enqueueSnackbar(`Completing redemption`, {\n      variant: 'info',\n    });\n    const { tx } = await registryClient.endStakeWithdrawal({\n      member: {\n        publicKey: member.publicKey,\n        account: member.account.member,\n      },\n      pendingWithdrawal,\n      registrar: registrar.account,\n    });\n\n    const updatedPendingWithdrawal = {\n      publicKey: pendingWithdrawal.publicKey,\n      account: {\n        ...pendingWithdrawal.account,\n        burned: true,\n      },\n    };\n    const updatedEntity = await registryClient.accounts.entity(\n      member.account.member.entity,\n    );\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: member.account.member.entity,\n          account: updatedEntity,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdatePendingWithdrawal,\n      item: {\n        memberPublicKey: member!.publicKey,\n        pendingWithdrawal: updatedPendingWithdrawal,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Redemption completed`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  let disabled = false;\n  let color = skin.instance().ready;\n  let onClick = async () =>\n    endPendingWithdrawal().catch(err => {\n      enqueueSnackbar(`Error ending pending redemption: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  if (pendingWithdrawal.account.burned) {\n    disabled = true;\n    color = skin.instance().active;\n    onClick = async () => {};\n  }\n\n  if (pendingWithdrawal.account.endTs.toNumber() > Date.now() / 1000) {\n    disabled = true;\n    color = skin.instance().notReady;\n    onClick = async () => {};\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <IconButton disabled={disabled} style={{ width: '25px', height: '25px' }}>\n        <CheckCircleIcon style={{ color, fontSize: '20px' }} />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport BN from 'bn.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LockIcon from '@material-ui/icons/Lock';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { PublicKey } from '@solana/web3.js';\nimport { Network, ProgramAccount } from '@project-serum/common';\nimport * as registry from '@project-serum/registry';\n\ntype RewardsListProps = {\n  rewards: RewardListItemViewModel[];\n  network: Network;\n};\n\nexport default function RewardsList(props: RewardsListProps) {\n  const { rewards, network } = props;\n  return (\n    <List>\n      {rewards.length > 0 ? (\n        rewards.map(r => <RewardListItem network={network} rli={r} />)\n      ) : (\n        <ListItem>\n          <ListItemText primary={'No rewards found'} />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n\ntype RewardListItemProps = {\n  rli: RewardListItemViewModel;\n  network: Network;\n};\n\nfunction RewardListItem(props: RewardListItemProps) {\n  const { rli, network } = props;\n\n  const rewardEvent = rli.reward.lockedAlloc ?? rli.reward.unlockedAlloc!;\n\n  const [open, setOpen] = useState(false);\n  let amountLabel = `${rewardEvent.total.toString()}`;\n  if (rewardEvent.mint.equals(network.srm)) {\n    amountLabel += ' SRM';\n  } else if (rewardEvent.mint.equals(network.msrm)) {\n    amountLabel += ' MSRM';\n  } else {\n    amountLabel += ` ${rewardEvent.mint}`;\n  }\n  let lockedLabel = 'vendored';\n  let fromLabel = `${rewardEvent.pool.toString()} | ${rewardEvent.from.toString()} | ${\n    rli.cursor\n  }`;\n\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        <LockIcon\n          style={{\n            visibility:\n              rli.reward.lockedAlloc === undefined ? 'hidden' : 'visible',\n            marginRight: '16px',\n          }}\n        />\n        <ListItemText\n          primary={\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                color: rli.needsClaim ? '#54a15e' : '',\n              }}\n            >\n              <div>{`${amountLabel} ${lockedLabel}`}</div>\n            </div>\n          }\n          secondary={fromLabel}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {rli.vendor === undefined ? (\n          <CircularProgress />\n        ) : (\n          <RewardListItemDetails vendor={rli.vendor} />\n        )}\n      </Collapse>\n    </>\n  );\n}\n\ntype RewardListItemDetailsProps = {\n  vendor: ProgramAccount<\n    | registry.accounts.LockedRewardVendor\n    | registry.accounts.UnlockedRewardVendor\n  >;\n};\n\nfunction RewardListItemDetails(props: RewardListItemDetailsProps) {\n  let { vendor } = props;\n\n  return (\n    <div\n      style={{\n        marginLeft: '56px',\n      }}\n    >\n      <Typography variant=\"h6\">Vendor</Typography>\n      <Typography>Address: {vendor.publicKey.toString()}</Typography>\n      <Typography>Vault: {vendor.account.vault.toString()}</Typography>\n      <Typography>\n        Pool token supply snapshot: {vendor.account.poolTokenSupply.toString()}\n      </Typography>\n      <Typography>\n        Expiry:{' '}\n        {new Date(\n          vendor.account.expiryTs.toNumber() * 1000,\n        ).toLocaleDateString()}\n      </Typography>\n      <Typography>\n        Expiry receiver: {vendor.account.expiryReceiver.toString()}\n      </Typography>\n    </div>\n  );\n}\n\nexport class RewardListItemViewModel {\n  constructor(\n    readonly reward: registry.accounts.RewardEvent,\n    readonly cursor: number,\n    readonly needsClaim: boolean,\n    readonly vendor?: ProgramAccount<\n      | registry.accounts.LockedRewardVendor\n      | registry.accounts.UnlockedRewardVendor\n    >,\n  ) {}\n\n  static fromMessage(\n    ctx: Context,\n    event: registry.accounts.RewardEvent,\n    idx: number,\n  ): RewardListItemViewModel {\n    let cursor = ctx.rewardEventQueue!.account.tailCursor() + idx;\n    let needsClaim = false;\n    let vendor = undefined;\n    if (event.lockedAlloc !== undefined || event.unlockedAlloc !== undefined) {\n      const eventInner = event.lockedAlloc\n        ? event.lockedAlloc\n        : event.unlockedAlloc!;\n      vendor = ctx.vendors.get(eventInner.vendor.toString());\n      if (vendor !== undefined && ctx.member !== undefined) {\n        const ownsPool =\n          ctx.member.account.balances.filter(\n            b => b.spt.amount.cmp(new BN(0)) === 1,\n          ).length > 0;\n        const ownsPoolMega =\n          ctx.member.account.balances.filter(\n            b => b.sptMega.amount.cmp(new BN(0)) === 1,\n          ).length > 0;\n        // The member must own shares of the reward's target pool.\n        const ownsPoolShares = eventInner.pool.equals(ctx.poolMint)\n          ? ownsPool\n          : ownsPoolMega;\n        const notYetClaimed = cursor >= ctx.member.account.member.rewardsCursor;\n        const isEligible =\n          ctx.member.account.member.lastStakeTs < vendor.account.startTs;\n\n        needsClaim = ownsPoolShares && notYetClaimed && isEligible;\n      }\n    }\n    return new RewardListItemViewModel(event, cursor, needsClaim, vendor);\n  }\n}\n\ntype Context = {\n  rewardEventQueue: ProgramAccount<registry.accounts.RewardEventQueue>;\n  member: ProgramAccount<registry.accounts.MemberDeref>;\n  network: Network;\n  vendors: Map<\n    string,\n    ProgramAccount<\n      | registry.accounts.LockedRewardVendor\n      | registry.accounts.UnlockedRewardVendor\n    >\n  >;\n  poolMint: PublicKey;\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { PublicKey } from '@solana/web3.js';\nimport { Network } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\n\nexport default function DropRewardButton() {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <div onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Drop Rewards\n        </Button>\n      </div>\n      <DropRewardDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n    </>\n  );\n}\n\nenum PoolTabViewModel {\n  Srm,\n  Msrm,\n}\n\nenum RewardTypeViewModel {\n  Unlocked,\n  Locked,\n}\n\ntype DropRewardsDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DropRewardDialog(props: DropRewardsDialogProps) {\n  const { open, onClose } = props;\n\n  const [poolTab, setPoolTab] = useState(PoolTabViewModel.Srm);\n  const [rewardTypeTab, setRewardTypeTab] = useState(\n    RewardTypeViewModel.Unlocked,\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h4\" component=\"h2\">\n            {'Drop Rewards'}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Tabs value={rewardTypeTab} onChange={(_e, t) => setRewardTypeTab(t)}>\n          <Tab value={RewardTypeViewModel.Unlocked} label=\"Unlocked\" />\n          <Tab value={RewardTypeViewModel.Locked} label=\"Locked\" />\n        </Tabs>\n        <Tabs\n          style={{ marginTop: '10px' }}\n          value={poolTab}\n          onChange={(_e, t) => setPoolTab(t)}\n        >\n          <Tab value={PoolTabViewModel.Srm} label=\"Pool\" />\n          <Tab value={PoolTabViewModel.Msrm} label=\"Mega Pool\" />\n        </Tabs>\n        {rewardTypeTab === RewardTypeViewModel.Unlocked && (\n          <DropUnlockedForm onClose={onClose} poolTab={poolTab} />\n        )}\n        {rewardTypeTab === RewardTypeViewModel.Locked && (\n          <DropLockedForm onClose={onClose} poolTab={poolTab} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ntype DropUnlockedFormProps = {\n  onClose: () => void;\n  poolTab: PoolTabViewModel;\n};\n\nfunction DropUnlockedForm(props: DropUnlockedFormProps) {\n  const { onClose, poolTab } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, poolMint, megaPoolMint } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        poolMint: state.registry.registrar!.account.poolMint,\n        megaPoolMint: state.registry.registrar!.account.poolMintMega,\n      };\n    },\n  );\n\n  const [lockedRewardAmount, setLockedRewardAmount] = useState<null | number>(\n    null,\n  );\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mintLabel, setMintLabel] = useState('srm');\n  const [mint, setMint] = useState<null | PublicKey>(network.srm);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    lockedRewardAmount !== null &&\n    expiryTs !== null;\n\n  const sendUnlockedReward = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping unllocked reward...',\n      'Unlocked reward dropped',\n      async () => {\n        let { tx } = await registryClient.dropUnlockedReward({\n          total: new BN(lockedRewardAmount as number),\n          expiryTs: new BN(expiryTs as number),\n          depositor: depositor as PublicKey,\n          depositorMint: mint as PublicKey,\n          poolTokenMint:\n            poolTab === PoolTabViewModel.Srm ? poolMint : megaPoolMint,\n        });\n        return tx;\n      },\n    );\n    onClose();\n  };\n  const onClick = () => {\n    sendUnlockedReward().catch(err => {\n      snack.enqueueSnackbar(\n        `Error dropping unlocked reward: ${err.toString()}`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  };\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      mintLabel={mintLabel}\n      setMintLabel={setMintLabel}\n      setDepositor={setDepositor}\n      setLockedRewardAmount={setLockedRewardAmount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropLockedFormProps = DropUnlockedFormProps;\n\nfunction DropLockedForm(props: DropLockedFormProps) {\n  const { onClose, poolTab } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, poolMint, megaPoolMint } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        poolMint: state.registry.registrar!.account.poolMint,\n        megaPoolMint: state.registry.registrar!.account.poolMintMega,\n      };\n    },\n  );\n\n  const [lockedRewardAmount, setLockedRewardAmount] = useState<null | number>(\n    null,\n  );\n  const [endTs, setEndTs] = useState<null | number>(null);\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mintLabel, setMintLabel] = useState('srm');\n  const [mint, setMint] = useState<null | PublicKey>(network.srm);\n  const [periodCount, setPeriodCount] = useState(7);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    lockedRewardAmount !== null &&\n    expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping locked reward...',\n      'Locked reward dropped',\n      async () => {\n        let { tx } = await registryClient.dropLockedReward({\n          total: new BN(lockedRewardAmount as number),\n          endTs: new BN(endTs as number),\n          expiryTs: new BN(expiryTs as number),\n          depositor: depositor as PublicKey,\n          depositorMint: mint as PublicKey,\n          poolTokenMint:\n            poolTab === PoolTabViewModel.Srm ? poolMint : megaPoolMint,\n          periodCount: new BN(periodCount),\n        });\n        return tx;\n      },\n    );\n    onClose();\n  };\n\n  const onClick = () => {\n    sendLockedRewards().catch(err => {\n      snack.enqueueSnackbar(`Error dropping locked reward: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  };\n\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      mintLabel={mintLabel}\n      setMintLabel={setMintLabel}\n      setDepositor={setDepositor}\n      setLockedRewardAmount={setLockedRewardAmount}\n      setEndTs={setEndTs}\n      periodCount={periodCount}\n      setPeriodCount={setPeriodCount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropVendorFormProps = {\n  network: Network;\n  mint: PublicKey | null;\n  mintLabel: string;\n  setMintLabel: (s: string) => void;\n  setMint: (m: PublicKey) => void;\n  setDepositor: (pk: PublicKey) => void;\n  setLockedRewardAmount: (n: number) => void;\n  setEndTs?: (n: number) => void;\n  periodCount?: number;\n  setPeriodCount?: (p: number) => void;\n  expiryTs: number | null;\n  setExpiryTs: (ts: number) => void;\n  onCancel: () => void;\n  onClick: () => void;\n  isSendEnabled: boolean;\n};\n\nfunction DropVendorForm(props: DropVendorFormProps) {\n  const {\n    network,\n    mint,\n    setDepositor,\n    mintLabel,\n    setMintLabel,\n    setMint,\n    setLockedRewardAmount,\n    setEndTs,\n    periodCount,\n    setPeriodCount,\n    expiryTs,\n    setExpiryTs,\n    onCancel,\n    onClick,\n    isSendEnabled,\n  } = props;\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginTop: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={mint}\n              onChange={(f: PublicKey) => setDepositor(f)}\n            />\n            <FormHelperText>Account to send from</FormHelperText>\n          </div>\n          <div>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '200px', marginLeft: '10px', marginTop: '10px' }}\n            >\n              <InputLabel>Mint</InputLabel>\n              <Select\n                value={mintLabel}\n                onChange={e => {\n                  const m = e.target.value;\n                  setMintLabel(m as string);\n                  if (m === 'srm') {\n                    setMint(network.srm);\n                  } else if (m === 'msrm') {\n                    setMint(network.msrm);\n                  }\n                }}\n                label=\"Mint\"\n              >\n                <MenuItem value=\"srm\">SRM</MenuItem>\n                <MenuItem value=\"msrm\">MSRM</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setLockedRewardAmount(parseInt(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        </div>\n        {setEndTs !== undefined && (\n          <div style={{ display: 'flex', marginTop: '37px' }}>\n            <div style={{ flex: 1 }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setEndTs(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>\n                Date the vesting account is fully vested\n              </FormHelperText>\n            </div>\n            <div>\n              <TextField\n                style={{ marginLeft: '10px', marginTop: '10px' }}\n                id=\"outlined-number\"\n                label=\"Period Count\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={periodCount}\n                onChange={e =>\n                  setPeriodCount!(parseInt(e.target.value) as number)\n                }\n                InputProps={{ inputProps: { min: 1 } }}\n              />\n            </div>\n          </div>\n        )}\n        <div style={{ marginTop: '37px', display: 'flex' }}>\n          <div\n            style={{\n              flex: 1,\n              height: '100%',\n              marginRight: '10px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"Expiry date\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setExpiryTs(d.getTime() / 1000);\n              }}\n            />\n          </div>\n          <div style={{ marginTop: '26px' }}>\n            <TextField\n              style={{ height: '100%' }}\n              disabled\n              placeholder=\"Expiry Unix timestamp\"\n              fullWidth\n              value={expiryTs}\n            />\n          </div>\n        </div>\n      </div>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button\n          onClick={onClick}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport { PublicKey } from '@solana/web3.js';\nimport * as registry from '@project-serum/registry';\nimport { Network, ProgramAccount } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport * as notification from '../common/Notification';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport { RewardListItemViewModel } from './RewardsList';\nimport { ActionType } from '../../store/actions';\n\ntype ClaimRewardButtonProps = {\n  rli: RewardListItemViewModel;\n  member: ProgramAccount<registry.accounts.MemberDeref>;\n  network: Network;\n};\n\nexport default function ClaimRewardButton(props: ClaimRewardButtonProps) {\n  const { registryClient, lockupClient, wallet } = useWallet();\n  const { rli, member, network } = props;\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const [token, setToken] = useState<null | PublicKey>(null);\n\n  // On click.\n  const clickHandler = async (): Promise<void> => {\n    notification.withTx(\n      snack,\n      `Claiming vendor reward ${rli!.vendor!.publicKey.toString()}`,\n      'Reward claimed',\n      async () => {\n        if (rli!.reward.lockedAlloc) {\n          let vendor = await registryClient.accounts.lockedRewardVendor(\n            rli!.reward.lockedAlloc.vendor,\n          );\n          let vendorSigner = await registryClient.accounts.rewardVendorAuthority(\n            vendor.publicKey,\n            vendor.account.nonce,\n          );\n          const { tx } = await registryClient.claimLockedReward({\n            cursor: rli!.cursor,\n            member: {\n              publicKey: member.publicKey,\n              account: member.account.member,\n            },\n            vendor,\n            vendorSigner,\n            safe: network.safe,\n            lockupProgramId: network.lockupProgramId,\n            mint: rli!.reward.lockedAlloc!.mint,\n          });\n          // Refetch the vesting accounts to update the UI with the new reward.\n          const vestingAccounts = await lockupClient.accounts.allVestings(\n            wallet.publicKey,\n          );\n          dispatch({\n            type: ActionType.LockupSetVestings,\n            item: {\n              vestingAccounts,\n            },\n          });\n          return tx;\n        } else {\n          let vendor = await registryClient.accounts.unlockedRewardVendor(\n            rli!.reward.unlockedAlloc!.vendor,\n          );\n          let vendorSigner = await registryClient.accounts.rewardVendorAuthority(\n            vendor.publicKey,\n            vendor.account.nonce,\n          );\n          const { tx } = await registryClient.claimUnlockedReward({\n            cursor: rli!.cursor,\n            member: member.publicKey,\n            vendor,\n            vendorSigner,\n            token: token!,\n          });\n          return tx;\n        }\n      },\n    );\n  };\n\n  return (\n    <>\n      {rli.reward.unlockedAlloc && (\n        <div>\n          <OwnedTokenAccountsSelect\n            style={{ width: '400px', height: '100%' }}\n            mint={network.srm}\n            onChange={(f: PublicKey) => setToken(f)}\n          />\n        </div>\n      )}\n      <div\n        style={{ marginLeft: '10px', marginRight: '10px' }}\n        onClick={() =>\n          clickHandler().catch(err => {\n            snack.enqueueSnackbar(\n              `Error ending pending redemption: ${err.toString()}`,\n              {\n                variant: 'error',\n              },\n            );\n          })\n        }\n      >\n        <Button\n          disabled={rli.reward.unlockedAlloc && token === null}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Claim Reward\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport * as registry from '@project-serum/registry';\nimport { RewardEvent } from '@project-serum/registry/dist/accounts';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport RewardsList, { RewardListItemViewModel } from './RewardsList';\nimport DropRewardButton from './DropRewardButton';\nimport ClaimRewardButton from './ClaimRewardButton';\n\nexport default function Rewards() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const ctx = useSelector((state: StoreState) => {\n    return {\n      rewardEventQueue: state.registry.rewardEventQueue!,\n      member: state.registry.member.data!,\n      network: state.common.network,\n      vendors: state.registry.vendors,\n      poolMint: state.registry.registrar!.account.poolMint!,\n    };\n  });\n  const { rewardEventQueue, network, member, vendors } = ctx;\n\n  // Load any reward vendor accounts that hasn't been loaded already.\n  useEffect(() => {\n    rewardEventQueue!.account.messages().forEach(m => {\n      loadVendorIfNeeded(m, vendors, dispatch, registryClient).catch(err =>\n        snack.enqueueSnackbar(\n          `Error fetching locked reward vendor: ${err.toString()}`,\n          {\n            variant: 'error',\n          },\n        ),\n      );\n    });\n  });\n\n  // All rewards to display.\n  const rewards = rewardEventQueue!.account\n    .messages()\n    .map((m, idx) => RewardListItemViewModel.fromMessage(ctx, m, idx))\n    .reverse();\n\n  // Next reward to claim.\n  let nextReward = rewards\n    .filter(r => r.needsClaim)\n    .sort((a, b) => (a.cursor < b.cursor ? -1 : a.cursor > b.cursor ? 1 : 0))\n    .shift();\n\n  return (\n    <div style={{ width: '100%', marginTop: '24px' }}>\n      <div\n        style={{\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography style={{ fontWeight: 'bold', fontSize: '20px' }}>\n          Reward History\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          {nextReward !== undefined && (\n            <ClaimRewardButton\n              rli={nextReward}\n              member={member}\n              network={network}\n            />\n          )}\n          <DropRewardButton />\n        </div>\n      </div>\n      <Paper>\n        <RewardsList rewards={rewards} network={network} />\n      </Paper>\n    </div>\n  );\n}\n\n// Fetch the vendor account and load it into the redux store.\nasync function loadVendorIfNeeded(\n  m: RewardEvent,\n  vendors: Map<string, any>,\n  dispatch: any,\n  registryClient: registry.Client,\n) {\n  if (m.lockedAlloc !== undefined) {\n    if (vendors.get(m.lockedAlloc.vendor.toString()) === undefined) {\n      const vendor = await registryClient.accounts.lockedRewardVendor(\n        m.lockedAlloc.vendor,\n      );\n      dispatch({\n        type: ActionType.RegistryCreateRewardVendor,\n        item: {\n          vendor,\n        },\n      });\n    }\n  } else if (m.unlockedAlloc !== undefined) {\n    if (vendors.get(m.unlockedAlloc.vendor.toString()) === undefined) {\n      const vendor = await registryClient.accounts.unlockedRewardVendor(\n        m.unlockedAlloc.vendor,\n      );\n      dispatch({\n        type: ActionType.RegistryCreateRewardVendor,\n        item: {\n          vendor,\n        },\n      });\n    }\n  }\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\n\nexport default function NewVestingButton() {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <div onClick={() => setOpen(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n      <NewVestingDialog open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n\ntype NewVestingDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction NewVestingDialog(props: NewVestingDialogProps) {\n  const { open, onClose } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n    };\n  });\n\n  const defaultEndDate = '2027-01-01T12:00';\n  const defaultEndTs = new Date(defaultEndDate).getTime() / 1000;\n\n  const [beneficiary, setBeneficiary] = useState('');\n  const isValidBeneficiary = (() => {\n    try {\n      new PublicKey(beneficiary);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  })();\n  const displayBeneficiaryError = !isValidBeneficiary && beneficiary !== '';\n\n  const [fromAccount, setFromAccount] = useState<null | PublicKey>(null);\n  const [timestamp, setTimestamp] = useState(defaultEndTs);\n  const [periodCount, setPeriodCount] = useState(7);\n  const [amountStr, setAmountStr] = useState('');\n  // @ts-ignore\n  const isValidAmountStr = !isNaN(amountStr) && amountStr !== '';\n  const displayAmountError = !isValidAmountStr && amountStr !== '';\n  const amount = parseInt(amountStr);\n\n  const submitBtnEnabled =\n    fromAccount !== null && isValidBeneficiary && isValidAmountStr;\n\n  const { lockupClient } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const [mint, setMint] = useState<null | PublicKey>(null);\n  const [mintLabel, setMintLabel] = useState('');\n\n  const createVestingClickHandler = async () => {\n    setIsLoading(true);\n    enqueueSnackbar('Creating vesting acount...', {\n      variant: 'info',\n    });\n    try {\n      let { vesting } = await lockupClient.createVesting({\n        beneficiary: new PublicKey(beneficiary),\n        endTs: new BN(timestamp),\n        periodCount: new BN(periodCount),\n        depositAmount: new BN(amount),\n        depositor: fromAccount as PublicKey,\n      });\n      const vestingAccount = await lockupClient.accounts.vesting(vesting);\n      dispatch({\n        type: ActionType.LockupCreateVesting,\n        item: {\n          vesting: {\n            publicKey: vesting,\n            account: vestingAccount,\n          },\n        },\n      });\n      enqueueSnackbar(`Vesting account created ${vesting}`, {\n        variant: 'success',\n      });\n      onClose();\n    } catch (err) {\n      enqueueSnackbar(`Error creating vesting account: ${err.toString()}`, {\n        variant: 'error',\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Vesting Account\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          {isLoading && (\n            <div\n              style={{\n                width: '40px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '24px',\n              }}\n            >\n              <CircularProgress\n                style={{ marginLeft: 'auto', marginRight: 'auto' }}\n              />\n            </div>\n          )}\n          <div>\n            <div style={{ display: 'flex', width: '100%' }}>\n              <div style={{ flex: 1 }}>\n                <FormControl fullWidth>\n                  <InputLabel>From</InputLabel>\n                  <OwnedTokenAccountsSelect\n                    mint={mint}\n                    onChange={(f: PublicKey) => setFromAccount(f)}\n                  />\n                  <FormHelperText>Token account to send from</FormHelperText>\n                </FormControl>\n              </div>\n              <div>\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: '200px', marginLeft: '10px' }}\n                >\n                  <InputLabel>Mint</InputLabel>\n                  <Select\n                    value={mintLabel}\n                    onChange={e => {\n                      const m = e.target.value;\n                      setMintLabel(m as string);\n                      if (m === 'srm') {\n                        setMint(network.srm);\n                      } else if (m === 'msrm') {\n                        setMint(network.msrm);\n                      }\n                      // TODO: add a textfield for a custom mint.\n                    }}\n                    label=\"Mint\"\n                  >\n                    <MenuItem value=\"srm\">SRM</MenuItem>\n                    <MenuItem value=\"msrm\">MSRM</MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginTop: '24px' }}>\n            <TextField\n              fullWidth\n              error={displayBeneficiaryError}\n              helperText={displayBeneficiaryError && 'Invalid beneficiary'}\n              label=\"Beneficiary\"\n              value={beneficiary}\n              onChange={e => setBeneficiary(e.target.value)}\n            />\n            <FormHelperText>Owner of the new vesting account</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <TextField\n              error={displayAmountError}\n              helperText={displayAmountError && 'Invalid amount'}\n              fullWidth\n              label=\"Amount\"\n              value={amountStr}\n              onChange={e => setAmountStr(e.target.value)}\n            />\n            <FormHelperText>\n              Amount to deposit into the vesting account\n            </FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                defaultValue={defaultEndDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when all tokens are vested</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={timestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <TextField\n                id=\"outlined-number\"\n                label=\"Period Count\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={periodCount}\n                onChange={e =>\n                  setPeriodCount(parseInt(e.target.value) as number)\n                }\n                InputProps={{ inputProps: { min: 1 } }}\n              />\n              <FormHelperText>Number of vesting periods</FormHelperText>\n            </FormControl>\n          </div>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!submitBtnEnabled || isLoading}\n          onClick={() => createVestingClickHandler()}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slide from '@material-ui/core/Slide';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { PublicKey } from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport EntityGallery, { EntityActivityLabel } from '../nodes/EntityGallery';\nimport Me from '../Me';\nimport Stake from '../Stake';\nimport Rewards from '../rewards/Rewards';\nimport Vestings from '../lockups/Vestings';\nimport VestingAccountsSelect from './VestingAccountsSelect';\n\nenum TabModel {\n  Me,\n  Stake,\n  EntityGallery,\n  Rewards,\n  Lockup,\n}\n\nexport default function MyNode() {\n  const [tab, setTab] = useState(TabModel.Me);\n  return (\n    <div>\n      <MyNodeBanner setTab={setTab} />\n      <Container fixed maxWidth=\"md\" style={{ flex: 1, display: 'flex' }}>\n        {tab === TabModel.Me && <Me />}\n        {tab === TabModel.Stake && <Stake />}\n        {tab === TabModel.EntityGallery && <EntityGallery />}\n        {tab === TabModel.Rewards && <Rewards />}\n        {tab === TabModel.Lockup && <Vestings />}\n      </Container>\n    </div>\n  );\n}\n\ntype MyNodeBannerProps = {\n  setTab: (t: TabModel) => void;\n};\n\nfunction MyNodeBanner(props: MyNodeBannerProps) {\n  const [tab, setTab] = useState(TabModel.Me);\n  const { member, entity } = useSelector((state: StoreState) => {\n    const member = state.registry.member;\n    return {\n      registrar: state.registry.registrar,\n      member,\n      pendingWithdrawals: member.data\n        ? state.registry.pendingWithdrawals.get(\n            member.data.publicKey.toString(),\n          )\n        : [],\n      entity: state.registry.entities\n        .filter(\n          e =>\n            member.data &&\n            e.publicKey.toString() ===\n              member.data!.account.member.entity.toString(),\n        )\n        .pop(),\n    };\n  });\n  const [showDepositDialog, setShowDepositDialog] = useState(false);\n  const [showWithdrawDialog, setShowWithdrawDialog] = useState(false);\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: '#fff',\n          paddingTop: '24px',\n          borderBottom: 'solid 1pt #ccc',\n        }}\n      >\n        <Container\n          fixed\n          maxWidth=\"md\"\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Typography variant=\"h4\" style={{ marginBottom: '10px' }}>\n                My Node\n              </Typography>\n            </div>\n            {entity && (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <EntityActivityLabel\n                  noBubble={true}\n                  textStyle={{ fontSize: '16px' }}\n                  entity={entity}\n                />\n              </div>\n            )}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>\n              <Typography>\n                {member.data !== undefined\n                  ? member.data.account.member.entity.toString()\n                  : 'Account not found. Please create a stake account.'}\n              </Typography>\n            </div>\n            <div>\n              <div>\n                <Button\n                  disabled={member.data === undefined}\n                  onClick={() => setShowDepositDialog(true)}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{ marginRight: '10px' }}\n                >\n                  <ArrowDownwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Deposit\n                  </Typography>\n                </Button>\n                <Button\n                  disabled={member.data === undefined}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => setShowWithdrawDialog(true)}\n                >\n                  <ArrowUpwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Withdraw\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            maxWidth: '960px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            paddingLeft: '24px',\n            paddingRight: '24px',\n            marginTop: '10px',\n          }}\n        >\n          <Tabs\n            value={tab}\n            onChange={(_e, t) => {\n              setTab(t);\n              props.setTab(t);\n            }}\n          >\n            <Tab value={TabModel.Me} label=\"Me\" />\n            <Tab value={TabModel.Stake} label=\"Stake\" />\n            <Tab value={TabModel.EntityGallery} label=\"Nodes\" />\n            <Tab value={TabModel.Rewards} label=\"Rewards\" />\n            <Tab value={TabModel.Lockup} label=\"Lockups\" />\n          </Tabs>\n        </div>\n      </div>\n      {member !== undefined && (\n        <>\n          <DepositDialog\n            open={showDepositDialog}\n            onClose={() => setShowDepositDialog(false)}\n          />\n          <WithdrawDialog\n            open={showWithdrawDialog}\n            onClose={() => setShowWithdrawDialog(false)}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\ntype DepositDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\ntype Coin = 'srm' | 'lsrm' | 'msrm' | 'lmsrm';\n\nfunction DepositDialog(props: DepositDialogProps) {\n  const { open, onClose } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient, lockupClient } = useWallet();\n  const dispatch = useDispatch();\n  const { safe, registrar, member } = useSelector((state: StoreState) => {\n    return {\n      registrar: state.registry.registrar!,\n      safe: state.lockup.safe!,\n      member: state.registry.member!,\n    };\n  });\n  return (\n    <TransferDialog\n      deposit={true}\n      title={'Deposit'}\n      contextText={'Select the amount and coin you want to deposit'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        amount: number,\n        coin: Coin,\n        isLocked: boolean,\n      ) => {\n        enqueueSnackbar(\n          `Depositing ${amount} ${coin} from ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          let vault =\n            coin === 'srm' || coin === 'lsrm'\n              ? member.data!.account.member.balances[isLocked ? 1 : 0].vault\n              : member.data!.account.member.balances[isLocked ? 1 : 0]\n                  .vaultMega;\n          if (isLocked) {\n            const { tx } = await registryClient.depositLocked({\n              amount: new BN(amount),\n              vesting: from,\n              safe: safe.account,\n              lockupClient,\n              registrar: registrar.account,\n              entity: member.data!.account.member.entity,\n              member: member.data!.publicKey,\n              vault,\n            });\n            const vesting = await lockupClient.accounts.vesting(from);\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: vesting,\n                },\n              },\n            });\n            return tx;\n          } else {\n            const { tx } = await registryClient.deposit({\n              member: member.data!.publicKey,\n              depositor: from,\n              amount: new BN(amount),\n              entity: member.data!.account.member.entity,\n              vault,\n              vaultOwner: await registryClient.accounts.vaultAuthority(\n                registryClient.programId,\n                registryClient.registrar,\n                registrar.account,\n              ),\n            });\n            return tx;\n          }\n        })();\n        const newEntity = await registryClient.accounts.entity(\n          member.data!.account.member.entity,\n        );\n        dispatch({\n          type: ActionType.RegistryUpdateEntity,\n          item: {\n            entity: {\n              publicKey: member.data!.account.member.entity,\n              account: newEntity,\n            },\n          },\n        });\n        closeSnackbar();\n        enqueueSnackbar(`Deposit complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype WithdrawDialogProps = DepositDialogProps;\n\nfunction WithdrawDialog(props: WithdrawDialogProps) {\n  const { open, onClose } = props;\n  const { registryClient, lockupClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const { safe, registrar, member } = useSelector((state: StoreState) => {\n    return {\n      registrar: state.registry.registrar!,\n      safe: state.lockup.safe!,\n      member: state.registry.member!,\n    };\n  });\n  return (\n    <TransferDialog\n      title={'Withdraw'}\n      contextText={'Select the amount and coin you want to withdraw'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        amount: number,\n        coin: Coin,\n        isLocked: boolean,\n      ) => {\n        enqueueSnackbar(`Withdrawing ${amount} ${coin} to ${from.toString()}`, {\n          variant: 'info',\n        });\n        const tx = await (async () => {\n          let vault =\n            coin === 'srm' || coin === 'lsrm'\n              ? member.data!.account.member.balances[isLocked ? 1 : 0].vault\n              : member.data!.account.member.balances[isLocked ? 1 : 0]\n                  .vaultMega;\n          if (isLocked) {\n            const { tx } = await registryClient.withdrawLocked({\n              amount: new BN(amount),\n              vesting: from,\n              safe: safe.account,\n              lockupClient,\n              registrar: registrar.account,\n              entity: member.data!.account.member.entity,\n              member: member.data!.publicKey,\n              vault,\n            });\n            const vesting = await lockupClient.accounts.vesting(from);\n            dispatch({\n              type: ActionType.LockupUpdateVesting,\n              item: {\n                vesting: {\n                  publicKey: from,\n                  account: vesting,\n                },\n              },\n            });\n            return tx;\n          } else {\n            const { tx } = await registryClient.withdraw({\n              member: member.data!.publicKey,\n              depositor: from,\n              amount: new BN(amount),\n              entity: member.data!.account.member.entity,\n              vault,\n              vaultOwner: await registryClient.accounts.vaultAuthority(\n                registryClient.programId,\n                registryClient.registrar,\n                registrar.account,\n              ),\n            });\n            return tx;\n          }\n        })();\n        const newEntity = await registryClient.accounts.entity(\n          member.data!.account.member.entity,\n        );\n        dispatch({\n          type: ActionType.RegistryUpdateEntity,\n          item: {\n            entity: {\n              publicKey: member.data!.account.member.entity,\n              account: newEntity,\n            },\n          },\n        });\n        closeSnackbar();\n        enqueueSnackbar(`Withdraw complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype TransferDialogProps = {\n  title: string;\n  contextText: string;\n  open: boolean;\n  deposit?: boolean;\n  onClose: () => void;\n  onTransfer: (\n    from: PublicKey,\n    amount: number,\n    coin: Coin,\n    isLocked: boolean,\n  ) => Promise<void>;\n};\n\nfunction TransferDialog(props: TransferDialogProps) {\n  const { srmMint, msrmMint } = useSelector((state: StoreState) => {\n    const network = state.common.network;\n    return {\n      srmMint: network.srm,\n      msrmMint: network.msrm,\n    };\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  const { open, onClose, onTransfer, title, contextText, deposit } = props;\n  const [amount, setAmount] = useState<null | number>(null);\n  const [coin, setCoin] = useState<null | Coin>(null);\n  const [from, setFrom] = useState<null | PublicKey>(null);\n  const [vesting, setVesting] = useState<null | PublicKey>(null);\n  const [maxAmount, setMaxAmount] = useState<null | number>(null);\n  const mint = !coin\n    ? undefined\n    : coin === 'srm' || coin === 'lsrm'\n    ? srmMint\n    : msrmMint;\n  const isLocked = coin === 'lsrm' || coin === 'lmsrm';\n  const submitBtnDisabled =\n    (isLocked ? !vesting : !from) ||\n    !amount ||\n    !coin ||\n    !maxAmount ||\n    amount > maxAmount;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={onClose}\n        fullWidth\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <TextField\n                style={{ width: '100%' }}\n                id=\"outlined-number\"\n                label=\"Amount\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                onChange={e => setAmount(parseInt(e.target.value) as number)}\n                InputProps={{ inputProps: { min: 0, max: maxAmount ?? 0 } }}\n              />\n              <FormHelperText>{contextText}</FormHelperText>\n            </div>\n            <div>\n              <FormControl\n                variant=\"outlined\"\n                style={{ minWidth: '100px', marginLeft: '10px' }}\n              >\n                <InputLabel>Coin</InputLabel>\n                <Select\n                  value={coin}\n                  onChange={e => setCoin(e.target.value as Coin)}\n                  label=\"Coin\"\n                >\n                  <MenuItem value=\"srm\">SRM</MenuItem>\n                  <MenuItem value=\"msrm\">MSRM</MenuItem>\n                  <MenuItem value=\"lsrm\">Locked SRM</MenuItem>\n                  <MenuItem value=\"lmsrm\">Locked MSRM</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <FormControl fullWidth>\n            {!isLocked ? (\n              <>\n                <OwnedTokenAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  onChange={(f: PublicKey, maxAmount: BN) => {\n                    setFrom(f);\n                    setMaxAmount(maxAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Token account to transfer to/from\n                </FormHelperText>\n              </>\n            ) : (\n              <>\n                <VestingAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  deposit={deposit}\n                  onChange={(v: PublicKey, maxAmount: BN) => {\n                    setVesting(v);\n                    setMaxAmount(maxAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Vesting account to transfer to/from\n                </FormHelperText>\n              </>\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            //@ts-ignore\n            onClick={() =>\n              onTransfer(\n                isLocked ? vesting! : from!,\n                amount!,\n                coin!,\n                isLocked,\n              ).catch(err => {\n                enqueueSnackbar(`Error transferring funds: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              })\n            }\n            color=\"primary\"\n            disabled={submitBtnDisabled}\n          >\n            {title}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n","import React, { useState, useEffect } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport { useDispatch } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport { FixedScaleAxis, IChartOptions, Interpolation } from 'chartist';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport { accounts } from '@project-serum/lockup';\nimport { Network } from '@project-serum/common';\nimport { PublicKey } from '@solana/web3.js';\nimport { ProgramAccount } from '../../store/reducer';\nimport { useWallet } from '../common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { withTx } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\n\ntype VestingAccountCardProps = {\n  network: Network;\n  vesting: ProgramAccount<accounts.Vesting>;\n};\n\nexport default function VestingAccountCard(props: VestingAccountCardProps) {\n  const { vesting, network } = props;\n  const { lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const currencyLabel = vesting.account.mint.equals(network.srm)\n    ? 'SRM'\n    : vesting.account.mint.equals(network.msrm)\n    ? 'MSRM'\n    : vesting.account.mint.toString();\n\n  const startTs = vesting.account.startTs;\n  const endTs = vesting.account.endTs;\n\n  const tsOverflow = endTs.sub(startTs).mod(vesting.account.periodCount);\n  const shiftedStartTs = startTs.sub(tsOverflow);\n\n  const period = endTs.sub(shiftedStartTs).div(vesting.account.periodCount);\n\n  // Make the horizontal axis evenly spaced.\n  //\n  // Vesting dates assuming we stretch the start date back in time (so that the\n  // periods are of even length).\n  const vestingDates = [\n    ...Array(vesting.account.periodCount.toNumber() + 1),\n  ].map((_, idx) => {\n    return formatDate(\n      new Date((shiftedStartTs.toNumber() + idx * period.toNumber()) * 1000),\n    );\n  });\n  // Now push the start window forward to the real start date, making the first period shorter.\n  vestingDates[0] = formatDate(new Date(startTs.toNumber() * 1000));\n\n  // Now do the same thing on the vertical axis.\n  const rewardOverflow = vesting.account.startBalance.mod(\n    vesting.account.periodCount,\n  );\n  const rewardPerPeriod = vesting.account.startBalance\n    .sub(rewardOverflow)\n    .div(vesting.account.periodCount)\n    .toNumber();\n  const cumulativeVesting = [...Array(vestingDates.length)].map(() => 0);\n  cumulativeVesting[1] = rewardPerPeriod + rewardOverflow.toNumber();\n  for (let k = 2; k < cumulativeVesting.length; k += 1) {\n    cumulativeVesting[k] = cumulativeVesting[k - 1] + rewardPerPeriod;\n  }\n\n  const startLabel = formatDate(\n    new Date(vesting.account.startTs.toNumber() * 1000),\n  );\n  const endLabel = formatDate(\n    new Date(vesting.account.endTs.toNumber() * 1000),\n  );\n  const urlSuffix = `?cluster=${network.explorerClusterSuffix}`;\n\n  const [\n    availableForWithdrawal,\n    setAvailableForWithdrawal,\n  ] = useState<null | BN>(null);\n  const [withdrawalAccount, setWithdrawalAccount] = useState<null | PublicKey>(\n    null,\n  );\n\n  useEffect(() => {\n    lockupClient.accounts\n      .availableForWithdrawal(vesting.publicKey)\n      .then(amount => {\n        setAvailableForWithdrawal(amount);\n      })\n      .catch(err => {\n        enqueueSnackbar(\n          `Error fetching available for withdrawal: ${err.toString()}`,\n          {\n            variant: 'error',\n          },\n        );\n      });\n  }, [lockupClient.accounts, vesting, enqueueSnackbar]);\n  const snack = useSnackbar();\n\n  const withdrawEnabled =\n    withdrawalAccount !== null &&\n    availableForWithdrawal !== null &&\n    availableForWithdrawal.gtn(0);\n  const withdraw = async () => {\n    await withTx(\n      snack,\n      'Withdrawing locked tokens',\n      'Tokens unlocked',\n      async () => {\n        const { tx } = await lockupClient.withdraw({\n          amount: availableForWithdrawal!,\n          vesting: vesting.publicKey,\n          tokenAccount: withdrawalAccount!,\n        });\n        const newVesting = await lockupClient.accounts.vesting(\n          vesting.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupUpdateVesting,\n          item: {\n            vesting: {\n              publicKey: vesting.publicKey,\n              account: newVesting,\n            },\n          },\n        });\n        return tx;\n      },\n    );\n  };\n\n  return (\n    <Card\n      key={vesting.publicKey.toString()}\n      style={{\n        marginTop: '24px',\n      }}\n    >\n      <CardContent>\n        <ListItem>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <ListItemText\n              primary={\n                <Link\n                  href={\n                    `https://explorer.solana.com/account/${vesting.publicKey.toBase58()}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {vesting.publicKey.toString()}\n                </Link>\n              }\n              secondary={`${startLabel}, ${endLabel} | ${vesting.account.periodCount.toNumber()} periods`}\n            />\n            <div\n              style={{\n                marginTop: '6px',\n                color: 'rgba(0, 0, 0, 0.54)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography variant=\"body1\">\n                {`${vesting.account.outstanding.toNumber()} ${currencyLabel}`}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n        <ChartistGraph\n          data={{\n            labels: vestingDates,\n            series: [cumulativeVesting],\n          }}\n          options={\n            {\n              axisY: {\n                type: FixedScaleAxis,\n                low: 0,\n                high: cumulativeVesting[cumulativeVesting.length - 1],\n                ticks: cumulativeVesting,\n              },\n              axisX: {\n                ticks: vestingDates,\n              },\n              lineSmooth: Interpolation.step(),\n              height: 400,\n            } as IChartOptions\n          }\n          type={'Line'}\n        />\n        <div>\n          <Typography>\n            Available for withdrawal:{' '}\n            {availableForWithdrawal === null ? (\n              <CircularProgress />\n            ) : (\n              availableForWithdrawal.toString()\n            )}\n          </Typography>\n          <Typography>\n            Locked outstanding: {vesting.account.outstanding.toString()}\n          </Typography>\n          <Typography>\n            Current balance:{' '}\n            {vesting.account.outstanding\n              .sub(vesting.account.whitelistOwned)\n              .toString()}\n          </Typography>\n          <Typography>\n            Initial lockup: {vesting.account.startBalance.toString()}\n          </Typography>\n          <Typography>\n            Whitelist owned: {vesting.account.whitelistOwned.toString()}\n          </Typography>\n          <Typography>Vault: {vesting.account.vault.toString()}</Typography>\n          <Typography>\n            Period count: {vesting.account.periodCount.toString()}\n          </Typography>\n          <Typography>\n            Start timestamp: {vesting.account.startTs.toString()}\n          </Typography>\n          <Typography>\n            End timestamp: {vesting.account.endTs.toString()}\n          </Typography>\n          <div style={{ marginTop: '10px' }}>\n            <OwnedTokenAccountsSelect\n              mint={vesting.account.mint}\n              onChange={(f: PublicKey) => setWithdrawalAccount(f)}\n            />\n            <div style={{ marginTop: '10px' }}>\n              <Button\n                color=\"primary\"\n                disabled={!withdrawEnabled}\n                variant=\"contained\"\n                onClick={() =>\n                  withdraw().catch(err => {\n                    enqueueSnackbar(\n                      `Error withdrawing from vesting account: ${err.toString()}`,\n                      {\n                        variant: 'error',\n                      },\n                    );\n                  })\n                }\n              >\n                Unlock tokens\n              </Button>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row-reverse',\n          marginBottom: '16px',\n          marginRight: '16px',\n        }}\n      >\n        <Typography color=\"textSecondary\">\n          Granted by {vesting.account.grantor.toString()}\n        </Typography>\n      </div>\n    </Card>\n  );\n}\n\n// TODO: locale format without minutes, hours, seconds?\nfunction formatDate(d: Date): string {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\n\nexport default function Vestings() {\n  const { wallet } = useWallet();\n  const { vestingAccounts, network } = useSelector((state: StoreState) => {\n    return {\n      vestingAccounts: state.lockup.vestings,\n      network: state.common.network,\n    };\n  });\n  return (\n    <Container fixed maxWidth=\"md\" style={{ flex: 1 }}>\n      <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n        />\n        <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n        {wallet.publicKey && (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginBottom: '24px',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography\n                style={{\n                  fontSize: '20px',\n                  fontWeight: 'bold',\n                }}\n              >\n                My Vesting Accounts\n              </Typography>\n            </div>\n            <div>\n              <NewVestingButton />\n            </div>\n          </div>\n        )}\n        <List disablePadding>\n          {vestingAccounts.map(v => (\n            <VestingAccountCard network={network} vesting={v} />\n          ))}\n          {vestingAccounts.length === 0 && (\n            <Card\n              style={{\n                marginTop: '24px',\n              }}\n            >\n              <CardContent>\n                <ListItem>\n                  <div\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                    }}\n                  >\n                    <Typography color=\"textSecondary\" variant=\"h6\">\n                      No vesting accounts found\n                    </Typography>\n                  </div>\n                </ListItem>\n              </CardContent>\n            </Card>\n          )}\n        </List>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport * as lockup from '@project-serum/lockup';\nimport { ProgramAccount } from '@project-serum/common';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n  deposit?: boolean;\n};\n\nexport default function VestingAccountsSelect(p: Props) {\n  const { mint, variant, onChange, style, deposit } = p;\n  const vestings = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.lockup.vestings.filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n        onChange(pubkey, availableAmount(v!, deposit));\n      }}\n    >\n      {vestings.length === 0 ? (\n        <MenuItem value={''}>No vesting accounts found</MenuItem>\n      ) : (\n        vestings.map(v => {\n          return (\n            <MenuItem value={v.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${v.publicKey.toString()}`}</div>\n                <div\n                  style={{ float: 'right', color: '#ccc' }}\n                >{`${availableAmount(v, deposit).toString()}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction availableAmount(\n  v: ProgramAccount<lockup.accounts.Vesting>,\n  deposit?: boolean,\n): BN {\n  return deposit\n    ? v.account.outstanding.sub(v.account.whitelistOwned)\n    : v.account.whitelistOwned;\n}\n","import React from 'react';\nimport MyNode from '../components/common/MyNode';\n\nexport default function MyNodePage() {\n  return <MyNode />;\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\nimport { store } from './store';\nimport WalletProvider from './components/common/WalletProvider';\nimport BootstrapProvider from './components/common/BootstrapProvider';\nimport Layout from './components/common/Layout';\nimport MyNodePage from './pages/MyNode';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      background: {\n        default: 'rgb(255,255,255)',\n      },\n    },\n    typography: {\n      fontFamily: ['Source Sans Pro', 'sans-serif'].join(','),\n    },\n    overrides: {},\n  });\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n          <WalletProvider>\n            <BootstrapProvider>\n              <HashRouter basename={'/'}>\n                <Layout>\n                  <Route exact path=\"/\" component={MyNodePage} />\n                </Layout>\n              </HashRouter>\n            </BootstrapProvider>\n          </WalletProvider>\n        </SnackbarProvider>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","import { u8, struct } from 'buffer-layout';\nimport { i64, publicKey, rustEnum, u64, vecU8 } from '@project-serum/borsh';\nimport { WHITELIST_ENTRY_LAYOUT } from './accounts/whitelist';\nconst LOCKUP_INSTRUCTION_LAYOUT = rustEnum([\n    struct([publicKey('authority')], 'initialize'),\n    struct([\n        publicKey('beneficiary'),\n        i64('endTs'),\n        u64('periodCount'),\n        u64('depositAmount'),\n        u8('nonce'),\n    ], 'createVesting'),\n    struct([u64('amount')], 'withdraw'),\n    struct([u64('amount'), vecU8('instructionData')], 'whitelistWithdraw'),\n    struct([vecU8('instructionData')], 'whitelistDeposit'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistAdd'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistDelete'),\n    struct([publicKey('newAuthority')], 'setAuthority'),\n    struct([], 'availableForWithdrawal'),\n]);\nexport function decode(data) {\n    return LOCKUP_INSTRUCTION_LAYOUT.decode(data);\n}\nexport function encode(i) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKUP_INSTRUCTION_LAYOUT.encode(i, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=instruction.js.map","import { SystemProgram, TransactionInstruction, } from '@solana/web3.js';\nimport * as instruction from './instruction';\nimport * as accounts from './accounts';\nexport async function initializeInstrs(params) {\n    const { programId, authority, name, about, imageUrl, provider, metadataAccount, entity, mqueue, } = params;\n    return [\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: metadataAccount.publicKey,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.metadata.SIZE),\n            space: accounts.metadata.SIZE,\n            programId,\n        }),\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: mqueue.publicKey,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.mqueue.MQueue.accountSize()),\n            space: accounts.mqueue.MQueue.accountSize(),\n            programId,\n        }),\n        new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: metadataAccount.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n            ],\n            programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                    entity,\n                    name,\n                    about,\n                    imageUrl,\n                    chat: mqueue.publicKey,\n                },\n            }),\n        }),\n    ];\n}\nexport async function updateInstr(params) {\n    const { programId, authority, name, about, chat, metadata, imageUrl, } = params;\n    return new TransactionInstruction({\n        keys: [\n            { pubkey: metadata, isWritable: true, isSigner: false },\n            { pubkey: authority, isWritable: false, isSigner: true },\n        ],\n        programId,\n        data: instruction.encode({\n            updateMetaEntity: {\n                name,\n                about,\n                imageUrl,\n                chat,\n            },\n        }),\n    });\n}\n//# sourceMappingURL=transaction.js.map","import { struct, u8 } from 'buffer-layout';\nimport { publicKey, option } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport class Whitelist {\n    constructor(safe, entries) {\n        this.safe = safe;\n        this.entries = entries;\n    }\n    static ITEM_START() {\n        return 32;\n    }\n    static LEN() {\n        return 50;\n    }\n    static ITEM_SIZE() {\n        return 65;\n    }\n    static SIZE() {\n        return Whitelist.ITEM_START() + Whitelist.LEN() * Whitelist.ITEM_SIZE();\n    }\n}\nexport const WHITELIST_ENTRY_LAYOUT = struct([\n    publicKey('programId'),\n    option(publicKey(), 'instance'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    if (data.length !== SIZE) {\n        throw new Error(`invalid buffer len: ${data.length}`);\n    }\n    const entries = [];\n    const safe = new PublicKey(data.slice(0, Whitelist.ITEM_START()));\n    for (let k = Whitelist.ITEM_START(); k < Whitelist.SIZE(); k += Whitelist.ITEM_SIZE()) {\n        const programId = new PublicKey(data.slice(k, k + 32));\n        const instance = new PublicKey(data.slice(k + 32, k + 64));\n        const nonce = data[k + 64];\n        entries.push({\n            programId,\n            instance,\n            nonce,\n        });\n    }\n    return new Whitelist(safe, entries);\n}\nexport const SIZE = Whitelist.SIZE();\n//# sourceMappingURL=whitelist.js.map","import { u32 } from 'buffer-layout';\nconst HEAD_START = 32;\nconst TAIL_START = 36;\nexport class Ring {\n    constructor(data, decoder, capacity, messageSize) {\n        this.data = data;\n        this.decoder = decoder;\n        this.capacity = capacity;\n        this.messageSize = messageSize;\n    }\n    bufferSize() {\n        return this.capacity * this.messageSize + Ring.MESSAGE_START;\n    }\n    messages() {\n        let messages = [];\n        let idx = this.tail();\n        let head = this.head();\n        while (idx % this.capacity !== head) {\n            messages.push(this.messageAt(idx));\n            idx += 1;\n        }\n        return messages;\n    }\n    messageAt(idx) {\n        let start = idx * this.messageSize + Ring.MESSAGE_START;\n        let end = start + this.messageSize;\n        let bytes = this.data.slice(start, end);\n        return this.decoder.decode(bytes);\n    }\n    head() {\n        return this.headCursor() % this.capacity;\n    }\n    headCursor() {\n        let bytes = this.data.slice(HEAD_START, HEAD_START + 4);\n        return u32().decode(bytes);\n    }\n    tail() {\n        return this.tailCursor() % this.capacity;\n    }\n    tailCursor() {\n        let bytes = this.data.slice(TAIL_START, TAIL_START + 4);\n        return u32().decode(bytes);\n    }\n}\nRing.MESSAGE_START = 40;\n//# sourceMappingURL=ring.js.map"],"sourceRoot":""}