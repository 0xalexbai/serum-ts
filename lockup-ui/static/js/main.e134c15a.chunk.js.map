{"version":3,"sources":["../../src/layout.js","../../../../src/accounts/safe.ts","../../../../src/accounts/generation.ts","../../../src/index.ts","../../src/index.js","../../../src/client.ts","../../src/tokens_and_markets.ts","../../../src/schema.ts","../../../src/instructions.ts","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../../src/transactions.ts","../../../../src/accounts/entity.ts","../../../../src/accounts/member.ts","../../../../src/accounts/pending-withdrawal.ts","../../src/market.ts","../../src/slab.ts","../../../src/provider.ts","../../../src/simulate-transaction.ts","store/actions.ts","components/common/Wallet.tsx","components/common/Layout.tsx","pages/lockup/NewVestingAccount.tsx","pages/lockup/VestingAccounts.tsx","pages/registry/Entity.tsx","pages/registry/Entities.tsx","Routes.tsx","store/reducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx","../../src/token-instructions.js","../../../src/instruction.ts","../../../../src/accounts/whitelist.ts","../../../../src/accounts/registrar.ts","../../../../src/accounts/vesting.ts"],"names":["BNLayout","buffer_layout_1","Blob","b","publicKey","tx","this","pubkey","layout_1","exports","feeTier","transaction","u32","zeros","ActionType","useWallet","w","useContext","WalletContext","Error","React","createContext","WalletProvider","props","useSelector","state","walletProvider","common","networkUrl","wallet","useMemo","Wallet","client","Client","devnet","preflightCommitment","registryClient","RegistryClient","Provider","value","children","WalletConnectButton","isConnected","walletIsConnected","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useEffect","type","CommonAppWillStart","item","a","getEntityAccounts","provider","connection","entityAccounts","RegistrySetEntities","entities","CommonAppDidStart","fetchEntityAccounts","on","CommonWalletReset","variant","autoHideDuration","CommonWalletIsConnected","fetchOwnedTokenAccounts","getOwnedTokenAccounts","ownedTokenAccounts","CommonOwnedTokenAccountsSet","fetchVestingAccounts","getVestingAccounts","vestingAccounts","LockupSetVestings","Promise","all","toBase58","Button","color","onClick","disconnect","connect","filters","getOwnedAccountsFilters","_rpcRequest","TokenInstructions","TOKEN_PROGRAM_ID","commitment","resp","error","message","result","map","data","account","bs58","PublicKey","parseTokenAccountData","getVestingAccountsFilters","networks","programId","accounts","vesting","decode","memcmp","offset","bytes","dataSize","SIZE","getEntityAccountsFilters","registry","entity","ACCOUNT_LAYOUT","BufferLayout","mint","owner","amount","offsetOf","span","Layout","Fragment","Nav","style","display","minHeight","flexDirection","backgroundColor","textAlign","height","justifyContent","Typography","fontSize","fontWeight","AppBar","position","background","Toolbar","width","to","textDecoration","marginRight","alt","src","IconButton","edge","marginLeft","Container","fixed","maxWidth","marginTop","marginBottom","NewVesting","defaultEndDate","defaultEndTs","Date","getTime","useState","beneficiary","setBeneficiary","isValidBeneficiary","_","displayBeneficiaryError","fromAccount","setFromAccount","timestamp","setTimestamp","periodCount","setPeriodCount","amountStr","setAmountStr","isValidAmountStr","isNaN","displayAmountError","parseInt","srmMint","srm","filter","ota","toString","isValidOwnedTokenAccounts","length","submitBtnEnabled","isLoading","setIsLoading","CircularProgress","Card","CardContent","component","FormControl","fullWidth","InputLabel","id","Select","onChange","e","target","MenuItem","ownedTokenAccount","float","FormHelperText","TextField","helperText","label","defaultValue","InputLabelProps","shrink","d","labelId","disabled","createVesting","endTs","BN","depositAmount","needsAssignment","depositor","vestingAccount","LockupCreateVesting","VestingAccounts","lockup","vestings","totalBalance","va","balance","reduce","add","toNumber","rel","href","paddingBottom","Link","List","disablePadding","v","VestingAccountCard","startTs","tsOverflow","sub","mod","shiftedStartTs","period","div","vestingDates","Array","idx","formatDate","rewardOverflow","startBalance","rewardPerPeriod","cumulativeVesting","k","startLabel","endLabel","ListItem","ListItemText","primary","secondary","labels","series","options","axisY","FixedScaleAxis","low","high","ticks","axisX","lineSmooth","Interpolation","step","getMonth","getDate","getFullYear","TabModel","Entity","Stake","tab","setTab","isWalletConnected","paddingTop","paddingRight","paddingLeft","borderBottom","leader","EntityActivityLabel","flex","JoinButton","Tabs","_e","t","Tab","StakeContent","Members","MembersContent","Grid","container","spacing","BalanceGridItem","balances","currentDeposit","currentMegaDeposit","sptAmount","sptMegaAmount","generation","xs","boxShadow","createEntity","closeSnackbar","Entities","undefined","active","concat","pendingDeactivation","inactive","NewButton","visibility","flexWrap","EntityCard","open","setOpen","EntityDialog","onClose","padding","className","borderRadius","overflow","ActivityLabel","text","entityAccount","RegistryCreateEntity","Dialog","DialogContent","Routes","basename","exact","path","NewVestingAccount","initialState","isBootstrapped","store","createStore","action","newState","CommonWalletSetProvider","CommonNetworkSetUrl","CommonClearStore","unshift","RegistrySetMember","member","App","theme","createMuiTheme","palette","default","typography","fontFamily","join","overrides","fallback","CssBaseline","maxSnack","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","u8","publicKeyLayout","LAYOUT","addVariant","struct"],"mappings":"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","file":"static/js/main.e134c15a.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, publicKey } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport const SAFE_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('mint'),\n    publicKey('authority'),\n    u8('nonce'),\n    publicKey('whitelist'),\n    publicKey('vault'),\n]);\nexport function decode(data) {\n    return SAFE_LAYOUT.decode(data);\n}\nexport function encode(s) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = SAFE_LAYOUT.encode(s, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    mint: new PublicKey(Buffer.alloc(32)),\n    authority: new PublicKey(Buffer.alloc(32)),\n    nonce: 0,\n    whitelist: new PublicKey(Buffer.alloc(32)),\n    vault: new PublicKey(Buffer.alloc(32)),\n}).length;\n//# sourceMappingURL=safe.js.map","import { struct } from 'buffer-layout';\nimport { Basket } from '@project-serum/pool';\nimport { bool, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nexport const POOL_PRICES_LAYOUT = struct([\n    Basket.replicate('basket'),\n    Basket.replicate('megaBasket'),\n]);\nconst GENERATION_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('entity'),\n    u64('generation'),\n    POOL_PRICES_LAYOUT.replicate('lastActivePrices'),\n]);\nexport function decode(data) {\n    return GENERATION_LAYOUT.decode(data);\n}\nexport function encode(g) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = GENERATION_LAYOUT.encode(g, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    entity: new PublicKey(Buffer.alloc(32)),\n    generation: new BN(0),\n    lastActivePrices: defaultPoolPrices(),\n}).length;\nexport function defaultPoolPrices() {\n    return {\n        basket: {\n            quantities: [new BN(0)],\n        },\n        megaBasket: {\n            quantities: [new BN(0), new BN(0)],\n        },\n    };\n}\n//# sourceMappingURL=generation.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPoolBasket = exports.loadPoolInfo = exports.PoolTransactions = exports.PoolInstructions = void 0;\nconst schema_1 = require(\"./schema\");\nconst instructions_1 = require(\"./instructions\");\nconst simulate_transaction_1 = require(\"./simulate-transaction\");\nconst transactions_1 = require(\"./transactions\");\n__exportStar(require(\"./schema\"), exports);\nvar instructions_2 = require(\"./instructions\");\nObject.defineProperty(exports, \"PoolInstructions\", { enumerable: true, get: function () { return instructions_2.PoolInstructions; } });\nvar transactions_2 = require(\"./transactions\");\nObject.defineProperty(exports, \"PoolTransactions\", { enumerable: true, get: function () { return transactions_2.PoolTransactions; } });\n/**\n * Load and decode pool state.\n *\n * Throws an error if the pool is not found or invalid.\n *\n * @param connection Solana connection to use to fetch the pool state.\n * @param address Pool state account address.\n */\nasync function loadPoolInfo(connection, address) {\n    const accountInfo = await connection.getAccountInfo(address);\n    if (accountInfo === null) {\n        throw new Error('Pool does not exist');\n    }\n    if (!schema_1.isPoolState(accountInfo.data)) {\n        throw new Error('Address is not a valid pool');\n    }\n    return {\n        address,\n        state: schema_1.decodePoolState(accountInfo.data),\n        program: accountInfo.owner,\n    };\n}\nexports.loadPoolInfo = loadPoolInfo;\n/**\n * Fetch the basket for a creation or redemption.\n *\n * For creations, the basket is the quantity of each asset that needs to be paid\n * to the pool to create the given quantity of pool tokens.\n *\n * For redemptions, the basket is the quantity of each asset that is received\n * from the pool in return for redeeming the given quantity of pool tokens.\n *\n * @param connection Connection to use to fetch data.\n * @param pool Pool to interact with.\n * @param action Creation, redemption, or swap.\n * @param payer Arbitrary Solana address. Must hold nonzero SOL and not be owned\n * by a program.\n */\nasync function getPoolBasket(connection, pool, action, payer) {\n    var _a;\n    const { transaction } = transactions_1.PoolTransactions.getBasket(pool, action, payer);\n    const { value } = await simulate_transaction_1.simulateTransaction(connection, transaction, (_a = connection.commitment) !== null && _a !== void 0 ? _a : 'single');\n    if (value.err) {\n        console.warn('Program logs:', value.logs);\n        throw new Error('Failed to get pool basket: ' + JSON.stringify(value.err));\n    }\n    if (value.logs) {\n        for (let i = value.logs.length - 2; i >= 0; --i) {\n            if (value.logs[i + 1] ===\n                'Call BPF program ' + instructions_1.RETBUF_PROGRAM_ID.toBase58() &&\n                value.logs[i].startsWith('Program log: ')) {\n                const data = Buffer.from(value.logs[i].slice('Program log: '.length), 'base64');\n                return schema_1.Basket.decode(data);\n            }\n        }\n    }\n    throw new Error('Failed to find pool basket in logs');\n}\nexports.getPoolBasket = getPoolBasket;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","import BN from 'bn.js';\nimport { Account, SystemProgram, Connection, PublicKey, Transaction, TransactionInstruction, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { createMint, createTokenAccount, getTokenAccount, createAccountRentExempt, SPL_SHARED_MEMORY_ID, Provider, NodeWallet, } from '@project-serum/common';\nimport { encodePoolState, decodePoolState, Basket, PoolInstructions, } from '@project-serum/pool';\nimport * as instruction from './instruction';\nimport * as accounts from './accounts';\nimport { SIZE as REGISTRAR_SIZE, STAKE_POOL_NAME, MEGA_STAKE_POOL_NAME, } from './accounts/registrar';\nexport const networks = {\n    devnet: {\n        url: 'https://devnet.solana.com',\n        programId: new PublicKey('HM7psK4cwnn7DXmzhRPbABB9vcA5UR4jLgBwGx98Ntqj'),\n        stakeProgramId: new PublicKey('FFXx3NM8fXxa4TainZ5o26xrzLuoZQCMZ238cyQGmX8H'),\n        registrar: new PublicKey('AraER5NbsTzDQV2h6gGz3b7WHfYAejQQbKdn9aSHaqKi'),\n        srm: new PublicKey('2gsgrFTjFsckJiPifzkHP3tznMuqVbh5TTUcVd3iMVQx'),\n        msrm: new PublicKey('4gq1S2B4yheTmvy61oArkBqZx7iCid6pvYbn242epFCk'),\n        god: new PublicKey('9PRbiYDXcFig3C6cu7VBFuypqbaPfqdq8knY85AgvrKw'),\n        megaGod: new PublicKey('dMyk9X7KjyHFAhdDNyEad9k2SaUMQ8Yy42CjMxZfi4V'),\n    },\n};\nexport default class Client {\n    constructor(cfg) {\n        this.provider = cfg.provider;\n        this.programId = cfg.programId;\n        this.stakeProgramId = cfg.stakeProgramId;\n        this.accounts = new Accounts(cfg.provider, cfg.registrar);\n        this.registrar = cfg.registrar;\n    }\n    // Connects to the devnet deployment of the program.\n    static devnet(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('https://devnet.solana.com', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.devnet.programId,\n            stakeProgramId: networks.devnet.stakeProgramId,\n            registrar: networks.devnet.registrar,\n        });\n    }\n    // Initializes both the registry and its associated staking pool.\n    static async initialize(provider, req) {\n        let { programId, stakeProgramId, mint, megaMint, withdrawalTimelock, deactivationTimelock, rewardActivationThreshold, maxStakePerEntity, authority, registrar, } = req;\n        if (authority === undefined) {\n            authority = provider.wallet.publicKey;\n        }\n        if (registrar === undefined) {\n            registrar = new Account();\n        }\n        const pool = new Account();\n        const megaPool = new Account();\n        // Create program vault authorities.\n        const [vaultAuthority, vaultNonce] = await PublicKey.findProgramAddress([registrar.publicKey.toBuffer()], programId);\n        const [poolVaultAuthority, poolVaultNonce,] = await PublicKey.findProgramAddress([pool.publicKey.toBuffer()], stakeProgramId);\n        const [megaPoolVaultAuthority, megaPoolVaultNonce,] = await PublicKey.findProgramAddress([megaPool.publicKey.toBuffer()], stakeProgramId);\n        // Create program vaults.\n        const vault = await createTokenAccount(provider, mint, vaultAuthority);\n        const megaVault = await createTokenAccount(provider, megaMint, vaultAuthority);\n        const poolVault = await createTokenAccount(provider, mint, poolVaultAuthority);\n        const megaPoolVault = await createTokenAccount(provider, mint, megaPoolVaultAuthority);\n        const megaPoolMegaVault = await createTokenAccount(provider, megaMint, megaPoolVaultAuthority);\n        // Create pool tokens.\n        const poolMint = await createMint(provider, poolVaultAuthority);\n        const megaPoolMint = await createMint(provider, megaPoolVaultAuthority);\n        const createTx = new Transaction();\n        createTx.add(\n        // Create registrar.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: registrar.publicKey,\n            space: REGISTRAR_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(REGISTRAR_SIZE),\n            programId: programId,\n        }), \n        // Create staking pool.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: pool.publicKey,\n            space: POOL_STATE_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(POOL_STATE_SIZE),\n            programId: stakeProgramId,\n        }), \n        // Create mega staking pool.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: megaPool.publicKey,\n            space: MEGA_POOL_STATE_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(MEGA_POOL_STATE_SIZE),\n            programId: stakeProgramId,\n        }));\n        // Program specific accounts.\n        const additionalAccounts = [\n            { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n        ];\n        const initTx = new Transaction();\n        initTx.add(\n        // Initialize pool.\n        PoolInstructions.initialize(stakeProgramId, pool.publicKey, poolMint, STAKE_POOL_NAME, [poolVault], poolVaultAuthority, poolVaultNonce, additionalAccounts), \n        // Initialize mega pool.\n        PoolInstructions.initialize(stakeProgramId, megaPool.publicKey, megaPoolMint, MEGA_STAKE_POOL_NAME, [megaPoolVault, megaPoolMegaVault], megaPoolVaultAuthority, megaPoolVaultNonce, additionalAccounts), \n        // Iniitalize registrar.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: registrar.publicKey, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: false, isSigner: false },\n                { pubkey: megaVault, isWritable: false, isSigner: false },\n                { pubkey: pool.publicKey, isWritable: false, isSigner: false },\n                { pubkey: megaPool.publicKey, isWritable: false, isSigner: false },\n                {\n                    pubkey: stakeProgramId,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                    nonce: vaultNonce,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    rewardActivationThreshold,\n                    maxStakePerEntity,\n                },\n            }),\n        }));\n        const createSigners = [registrar, pool, megaPool];\n        const createTxSig = await provider.send(createTx, createSigners);\n        const initTxSig = await provider.send(initTx);\n        const client = new Client({\n            registrar: registrar.publicKey,\n            provider,\n            programId,\n            stakeProgramId,\n        });\n        return [\n            client,\n            {\n                createTx: createTxSig,\n                initTx: initTxSig,\n                registrar: registrar.publicKey,\n                pool: pool.publicKey,\n                megaPool: megaPool.publicKey,\n            },\n        ];\n    }\n    async updateRegistrar(req) {\n        let { authority, newAuthority, withdrawalTimelock, deactivationTimelock, rewardActivationThreshold, maxStakePerEntity, } = req;\n        let authorityPubkey = authority === undefined\n            ? this.provider.wallet.publicKey\n            : authority.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: this.registrar, isWritable: true, isSigner: false },\n                { pubkey: authorityPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateRegistrar: {\n                    newAuthority,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    rewardActivationThreshold,\n                    maxStakePerEntity,\n                },\n            }),\n        }));\n        let signers = [authority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createEntity(req) {\n        let { leader } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const entity = new Account();\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: entity.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.entity.SIZE),\n            space: accounts.entity.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity.publicKey, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createEntity: {},\n            }),\n        }));\n        let signers = [entity, leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            entity: entity.publicKey,\n        };\n    }\n    async updateEntity(req) {\n        let { leader, newLeader, entity } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateEntity: {\n                    leader: newLeader,\n                },\n            }),\n        }));\n        let signers = [leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createMember(req) {\n        let { beneficiary, entity, delegate } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (delegate === undefined) {\n            delegate = new PublicKey(Buffer.alloc(32));\n        }\n        const member = new Account();\n        const [_, nonce] = await PublicKey.findProgramAddress([member.publicKey.toBuffer(), beneficiaryPubkey.toBuffer()], this.programId);\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: member.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.member.SIZE),\n            space: accounts.member.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createMember: {\n                    delegate: delegate,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [member, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            member: member.publicKey,\n        };\n    }\n    async updateMember(req) {\n        let { member, beneficiary, delegate } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateMember: {\n                    delegate,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async switchEntity(req) {\n        let { member, entity, newEntity, beneficiary } = req;\n        if (entity === undefined) {\n            entity = (await this.accounts.member(member)).entity;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: newEntity, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                switchEntity: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async deposit(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        if (vault === undefined) {\n            vault = (await this.vaultFor(depositor)).vaultAddress;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: true,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n            ].concat(await this.poolAccounts()),\n            programId: this.programId,\n            data: instruction.encode({\n                deposit: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async vaultFor(depositor) {\n        let vaultAddress = undefined;\n        let vault = undefined;\n        let depositorAcc = await getTokenAccount(this.provider, depositor);\n        let r = await this.accounts.registrar(this.registrar);\n        let vaultAcc = await this.accounts.depositVault(this.registrar);\n        if (vaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = r.vault;\n            vault = vaultAcc;\n        }\n        let megaVaultAcc = await this.accounts.depositMegaVault(this.registrar);\n        if (megaVaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = r.megaVault;\n            vault = megaVaultAcc;\n        }\n        if (vaultAddress === undefined) {\n            throw new Error(`Invalid depositor account: ${depositor}`);\n        }\n        if (vault === undefined) {\n            throw new Error(`Invalid mint for depositor account: ${depositor}`);\n        }\n        return {\n            vaultAddress,\n            vault,\n        };\n    }\n    async poolFor(poolToken, r) {\n        let poolTokenAcc = await getTokenAccount(this.provider, poolToken);\n        let pool = await this.accounts.pool(r);\n        if (pool.poolTokenMint.equals(poolTokenAcc.mint)) {\n            return { pool, isMega: false };\n        }\n        let megaPool = await this.accounts.megaPool(r);\n        if (megaPool.poolTokenMint.equals(poolTokenAcc.mint)) {\n            return { pool: megaPool, isMega: true };\n        }\n        throw new Error(`Failed top find pool for ${poolToken}`);\n    }\n    async withdraw(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, } = req;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        let v = await this.vaultFor(depositor);\n        if (vault === undefined) {\n            vault = v.vaultAddress;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: v.vault.owner, isWritable: true, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: v.vault.owner, isWritable: true, isSigner: false },\n            ].concat(await this.poolAccounts()),\n            programId: this.programId,\n            data: instruction.encode({\n                withdraw: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async stake(req) {\n        let { member, beneficiary, entity, amount, stakeToken } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n            ].concat(await this.executePoolAccounts(stakeToken)),\n            programId: this.programId,\n            data: instruction.encode({\n                stake: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async executePoolAccounts(poolToken, r) {\n        if (r === undefined) {\n            r = await this.accounts.registrar(this.registrar);\n        }\n        const accs = await this.poolAccounts(r);\n        let assetAccs = await (async () => {\n            const { pool, isMega } = await this.poolFor(poolToken, r);\n            let assetAccs = [r.vault];\n            if (isMega) {\n                assetAccs.push(r.megaVault);\n            }\n            return assetAccs.map(a => {\n                return { pubkey: a, isWritable: true, isSigner: false };\n            });\n        })();\n        let vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, r);\n        return accs\n            .concat([{ pubkey: poolToken, isWritable: true, isSigner: false }])\n            .concat(assetAccs)\n            .concat([{ pubkey: vaultAuthority, isWritable: false, isSigner: false }]);\n    }\n    async poolAccounts(r) {\n        if (r === undefined) {\n            r = await this.accounts.registrar(this.registrar);\n        }\n        let pool = await this.accounts.pool(r);\n        let megaPool = await this.accounts.megaPool(r);\n        let retbuf = await createAccountRentExempt(this.provider, SPL_SHARED_MEMORY_ID, MAX_BASKET_SIZE);\n        return [\n            // Pids.\n            { pubkey: this.stakeProgramId, isWritable: false, isSigner: false },\n            { pubkey: SPL_SHARED_MEMORY_ID, isWritable: false, isSigner: false },\n            { pubkey: retbuf.publicKey, isWritable: true, isSigner: false },\n            // Pool.\n            { pubkey: r.pool, isWritable: true, isSigner: false },\n            { pubkey: pool.poolTokenMint, isWritable: true, isSigner: false },\n            {\n                pubkey: pool.assets[0].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: pool.vaultSigner, isWritable: false, isSigner: false },\n            // Mega pool.\n            { pubkey: r.megaPool, isWritable: true, isSigner: false },\n            { pubkey: megaPool.poolTokenMint, isWritable: true, isSigner: false },\n            {\n                pubkey: megaPool.assets[0].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            {\n                pubkey: megaPool.assets[1].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: megaPool.vaultSigner, isWritable: false, isSigner: false },\n        ];\n    }\n    async markGeneration(req) {\n        let { entity, generation } = req;\n        if (generation === undefined) {\n            generation = (await createAccountRentExempt(this.provider, this.programId, accounts.generation.SIZE)).publicKey;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: generation, isWritable: true, isSigner: false },\n                { pubkey: entity, isWritable: false, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                markGeneration: {},\n            }),\n        }));\n        let txSig = await this.provider.send(tx);\n        return {\n            tx: txSig,\n            generation,\n        };\n    }\n    async startStakeWithdrawal(req) {\n        let { pendingWithdrawal, member, beneficiary, entity, amount, stakeToken, generation, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (pendingWithdrawal === undefined) {\n            pendingWithdrawal = new Account();\n        }\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        let vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar);\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: pendingWithdrawal.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.pendingWithdrawal.SIZE),\n            space: accounts.pendingWithdrawal.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: pendingWithdrawal.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ]\n                .concat(await this.executePoolAccounts(stakeToken))\n                .concat(generation === undefined\n                ? []\n                : [\n                    {\n                        pubkey: generation,\n                        isWritable: false,\n                        isSigner: false,\n                    },\n                ]),\n            programId: this.programId,\n            data: instruction.encode({\n                startStakeWithdrawal: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [beneficiary, pendingWithdrawal];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            pendingWithdrawal: pendingWithdrawal.publicKey,\n        };\n    }\n    async endStakeWithdrawal(req) {\n        let { member, entity, beneficiary, pendingWithdrawal } = req;\n        if (entity === undefined) {\n            entity = (await this.accounts.member(member)).entity;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: pendingWithdrawal, isWritable: true, isSigner: false },\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                endStakeWithdrawal: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    // Allocates a staking pool token. Note that the token doesn't belong to\n    // the user until `stake` has been called, at which point the Registry will\n    // mint a balance to the token account and set the delegate to be the\n    // beneficiary.\n    async allocSpt(isMega) {\n        const owner = await this.accounts.vaultAuthority(this.programId, this.registrar);\n        let pool = isMega\n            ? await this.accounts.megaPool(this.registrar)\n            : await this.accounts.pool(this.registrar);\n        let spt = await createTokenAccount(this.provider, pool.poolTokenMint, owner);\n        return spt;\n    }\n}\nclass Accounts {\n    constructor(provider, registrarAddress) {\n        this.provider = provider;\n        this.registrarAddress = registrarAddress;\n    }\n    async registrar(address) {\n        if (address === undefined) {\n            address = this.registrarAddress;\n        }\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Registrar does not exist ${address}`);\n        }\n        return accounts.registrar.decode(accountInfo.data);\n    }\n    async entity(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Entity does not exist ${address}`);\n        }\n        return accounts.entity.decode(accountInfo.data);\n    }\n    async member(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Member does not exist ${address}`);\n        }\n        return accounts.member.decode(accountInfo.data);\n    }\n    async pendingWithdrawal(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`PendingWithdrawal does not exist ${address}`);\n        }\n        return accounts.pendingWithdrawal.decode(accountInfo.data);\n    }\n    async depositVault(registrarAddr) {\n        let r = await this.registrar(registrarAddr);\n        return getTokenAccount(this.provider, r.vault);\n    }\n    async depositMegaVault(registrarAddr) {\n        let r = await this.registrar(registrarAddr);\n        return getTokenAccount(this.provider, r.megaVault);\n    }\n    async pool(registrar) {\n        if (registrar instanceof PublicKey) {\n            registrar = await this.registrar(registrar);\n        }\n        let acc = await this.provider.connection.getAccountInfo(registrar.pool);\n        if (acc === null) {\n            throw new Error('Failed to find staking pool');\n        }\n        return decodePoolState(acc.data);\n    }\n    async poolVault(registrar) {\n        const p = await this.pool(registrar);\n        return getTokenAccount(this.provider, p.assets[0].vaultAddress);\n    }\n    async megaPoolVaults(registrar) {\n        const p = await this.pool(registrar);\n        return Promise.all([\n            getTokenAccount(this.provider, p.assets[0].vaultAddress),\n            getTokenAccount(this.provider, p.assets[1].vaultAddress),\n        ]);\n    }\n    async megaPool(registrar) {\n        if (registrar instanceof PublicKey) {\n            registrar = await this.registrar(registrar);\n        }\n        let acc = await this.provider.connection.getAccountInfo(registrar.megaPool);\n        if (acc === null) {\n            throw new Error('Failed to find staking pool');\n        }\n        return decodePoolState(acc.data);\n    }\n    async vaultAuthority(programId, registrarAddr, registrar) {\n        if (registrar === undefined) {\n            registrar = await this.registrar(registrarAddr);\n        }\n        return PublicKey.createProgramAddress([registrarAddr.toBuffer(), Buffer.from([registrar.nonce])], programId);\n    }\n}\n// The maximum basket size. Used to create the \"retbuf\" shared memory account\n// data to pass data back from the staking pool to the registry via CPI.\n//\n// The SRM pool has a basket with a single asset quantitiy. The MSRM pool,\n// however, has two assets (SRM and MSRM) and so has a larger size.\nconst MAX_BASKET_SIZE = maxBasketSize();\nconst POOL_STATE_SIZE = poolStateSize(1);\nconst MEGA_POOL_STATE_SIZE = poolStateSize(2);\nfunction maxBasketSize() {\n    const b = {\n        quantities: [new BN(0), new BN(0)],\n    };\n    const buffer = Buffer.alloc(1000);\n    const len = Basket.encode(b, buffer);\n    return len;\n}\nfunction poolStateSize(assetLen) {\n    return encodePoolState({\n        poolTokenMint: new PublicKey(Buffer.alloc(32)),\n        assets: [...Array(assetLen)].map(() => {\n            return {\n                mint: new PublicKey(Buffer.alloc(32)),\n                vaultAddress: new PublicKey(Buffer.alloc(32)),\n            };\n        }),\n        vaultSigner: new PublicKey(Buffer.alloc(32)),\n        vaultSignerNonce: 0,\n        accountParams: [...Array(assetLen)].map(() => {\n            return {\n                address: new PublicKey(Buffer.alloc(32)),\n                writable: false,\n            };\n        }),\n        name: STAKE_POOL_NAME,\n        adminKey: new PublicKey(Buffer.alloc(32)),\n        customState: Buffer.from([]),\n    }).length;\n}\n/*\n                            <Typography\n                style={{\n                                    marginTop: '5px',\n                                    fontSize: '12px',\n                                    overflow: 'hidden',\n                                    color: 'rgba(0, 0, 0, 0.54)',\n                                }}\n                            >\n                                <div style={{\n                                    display: 'flex',\n                                    justifyContent: 'space-between',\n                                }}>\n                                    <div>\n                                        Leader\n                                    </div>\n                                    <div>\n                                        {entity.account.leader.toString()}\n                                    </div>\n                                </div>\n                            </Typography>\n                            <Typography\n                style={{\n                                    marginTop: '5px',\n                                    fontSize: '12px',\n                                    overflow: 'hidden',\n                                    color: 'rgba(0, 0, 0, 0.54)',\n                                    borderBottom: 'solid 1pt',\n                                }}\n                            >\n                                SRM Pool Shares\n                            </Typography>\n              <Typography\n                style={{\n                                    fontSize: '12px',\n                                    overflow: 'hidden',\n                                    color: 'rgba(0, 0, 0, 0.54)',\n                                }}\n              >\n                {entity.account.balances.sptAmount.toString()}\n              </Typography>\n*/\n//# sourceMappingURL=client.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    return 2;\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePoolRequest = exports.encodePoolRequest = exports.encodePoolState = exports.decodePoolState = exports.isPoolState = exports.PoolRequest = exports.POOL_REQUEST_TAG = exports.InitializePoolRequest = exports.PoolAction = exports.Basket = exports.PoolState = exports.POOL_STATE_TAG = exports.ParamDesc = exports.AssetInfo = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst borsh_1 = require(\"@project-serum/borsh\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nexports.AssetInfo = buffer_layout_1.struct([\n    borsh_1.publicKey('mint'),\n    borsh_1.publicKey('vaultAddress'),\n]);\nexports.ParamDesc = buffer_layout_1.struct([\n    borsh_1.publicKey('address'),\n    borsh_1.bool('writable'),\n]);\nexports.POOL_STATE_TAG = new bn_js_1.default('16a7874c7fb2301b', 'hex');\nexports.PoolState = borsh_1.tagged(exports.POOL_STATE_TAG, buffer_layout_1.struct([\n    borsh_1.publicKey('poolTokenMint'),\n    borsh_1.vec(exports.AssetInfo, 'assets'),\n    borsh_1.publicKey('vaultSigner'),\n    buffer_layout_1.u8('vaultSignerNonce'),\n    borsh_1.vec(exports.ParamDesc, 'accountParams'),\n    borsh_1.str('name'),\n    borsh_1.option(borsh_1.publicKey(), 'adminKey'),\n    borsh_1.vecU8('customState'),\n]));\nexports.Basket = buffer_layout_1.struct([borsh_1.vec(borsh_1.i64(), 'quantities')]);\nexports.PoolAction = borsh_1.rustEnum([\n    borsh_1.u64('create'),\n    borsh_1.u64('redeem'),\n    exports.Basket.replicate('swap'),\n]);\nexports.InitializePoolRequest = buffer_layout_1.struct([\n    buffer_layout_1.u8('vaultSignerNonce'),\n    buffer_layout_1.u8('assetsLength'),\n    borsh_1.str('poolName'),\n    borsh_1.vecU8('customData'),\n]);\nexports.POOL_REQUEST_TAG = new bn_js_1.default('220a6cbdcd1cc4cf', 'hex');\nexports.PoolRequest = borsh_1.tagged(exports.POOL_REQUEST_TAG, borsh_1.rustEnum([\n    exports.InitializePoolRequest.replicate('initialize'),\n    exports.PoolAction.replicate('getBasket'),\n    exports.PoolAction.replicate('execute'),\n]));\nfunction isPoolState(data) {\n    return data.slice(0, 8).equals(exports.POOL_STATE_TAG.toBuffer('le'));\n}\nexports.isPoolState = isPoolState;\nfunction decodePoolState(data) {\n    return exports.PoolState.decode(data);\n}\nexports.decodePoolState = decodePoolState;\nfunction encodePoolState(state) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolState.encode(state, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolState = encodePoolState;\nfunction encodePoolRequest(poolRequest) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolRequest.encode(poolRequest, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolRequest = encodePoolRequest;\nfunction decodePoolRequest(data) {\n    return exports.PoolRequest.decode(data);\n}\nexports.decodePoolRequest = decodePoolRequest;\n//# sourceMappingURL=schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolInstructions = exports.RETBUF_PROGRAM_ID = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst schema_1 = require(\"./schema\");\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nexports.RETBUF_PROGRAM_ID = new web3_js_1.PublicKey(\n// TODO\n'Fb5VbxAy7Q6HKjWrggEvEtifBfM7T4HukisF1yyVRN4y');\nclass PoolInstructions {\n    /**\n     * Instruction to initialize a pool.\n     *\n     * @param poolProgram Program ID of the pool program.\n     * @param poolAccount Newly-created account to hold the pool state. Must be\n     * owned by the pool program.\n     * @param poolTokenMint spl-token mint address for the pool token.\n     * @param poolName User-friendly name for the pool.\n     * @param vaults spl-token account for each of the assets in the pool.\n     * @param vaultSigner Mint authority for `poolTokenMint` and owner of\n     * `poolTokenMint`.\n     * @param vaultSignerNonce Nonce used to generate `vaultSigner`.\n     * @param additionalAccounts Any custom pool-specific accounts needed to\n     * initialize the pool.\n     * @param customData Any custom pool-specific data needed to initialize the pool\n     */\n    static initialize(poolProgram, poolAccount, poolTokenMint, poolName, vaults, vaultSigner, vaultSignerNonce, additionalAccounts, customData) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: poolAccount, isSigner: false, isWritable: true },\n                { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n                ...vaults.map(vaultAddress => ({\n                    pubkey: vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: vaultSigner, isSigner: false, isWritable: false },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...(additionalAccounts !== null && additionalAccounts !== void 0 ? additionalAccounts : []),\n            ],\n            programId: poolProgram,\n            data: schema_1.encodePoolRequest({\n                initialize: {\n                    vaultSignerNonce,\n                    assetsLength: vaults.length,\n                    poolName,\n                    customData: customData !== null && customData !== void 0 ? customData : Buffer.alloc(0),\n                },\n            }),\n        });\n    }\n    /**\n     * Instruction to get the expected basket for a {@link PoolAction}.\n     *\n     * For creations, the basket is the quantity of each asset\n     * that need to be sent to the pool to process the creation.  For redemptions\n     * and swaps, the basket is the quantity of each asset that will be\n     * transferred from the pool to the user after the redemption or swap.\n     *\n     * Negative quantities will cause tokens to be transferred in the opposite\n     * direction.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param retbufAccount Account to which the basket will be written. Must be\n     * owned by the retbuf program.\n     */\n    static getBasket(pool, action, retbufAccount) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: false },\n                {\n                    pubkey: pool.state.poolTokenMint,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: retbufAccount, isSigner: false, isWritable: true },\n                { pubkey: exports.RETBUF_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ getBasket: action }),\n        });\n    }\n    /**\n     * Instruction to execute a creation, redemption, or swap.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     */\n    static execute(pool, action, user) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: true },\n                { pubkey: pool.state.poolTokenMint, isSigner: false, isWritable: true },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: user.poolTokenAccount, isSigner: false, isWritable: true },\n                ...user.assetAccounts.map(address => ({\n                    pubkey: address,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: user.owner, isSigner: true, isWritable: false },\n                { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: paramInfo.writable,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ execute: action }),\n        });\n    }\n}\nexports.PoolInstructions = PoolInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolTransactions = void 0;\nconst instructions_1 = require(\"./instructions\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nclass PoolTransactions {\n    /**\n     * Transaction to initialize a simple pool.\n     *\n     * This will:\n     * - initialize a new pool token mint\n     * - initialize a pool token account for the creator and mint some tokens to it\n     * - initialize vault accounts for each of the pool assets\n     * - transfer assets from the pool creator to the vault accounts\n     * - initialize the pool\n     */\n    static async initializeSimplePool(params) {\n        const { connection, programId, poolStateSpace, poolMintDecimals = 6, poolName, assetMints, initialPoolMintSupply = new bn_js_1.default('1' + '0'.repeat(poolMintDecimals)), initialAssetQuantities, creator, creatorAssets, additionalAccounts = [], } = params;\n        if (assetMints.length !== initialAssetQuantities.length) {\n            throw new Error('assetMints and initialAssetQuantities must have the same length');\n        }\n        if (assetMints.length !== creatorAssets.length) {\n            throw new Error('assetMints and creatorAssets must have the same length');\n        }\n        const poolStateAccount = new web3_js_1.Account();\n        const [vaultSigner, vaultSignerNonce] = await web3_js_1.PublicKey.findProgramAddress([poolStateAccount.publicKey.toBuffer()], programId);\n        const poolTokenMint = new web3_js_1.Account();\n        const creatorPoolTokenAccount = new web3_js_1.Account();\n        const vaultAccounts = assetMints.map(() => new web3_js_1.Account());\n        // Split into two transactions to stay under the size limit.\n        // Ideally all instructions that transfer tokens happen in the second transaction,\n        // so they get reverted if the pool creation fails.\n        const setup = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolTokenMint, creatorPoolTokenAccount, ...vaultAccounts],\n        };\n        const finalize = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolStateAccount],\n        };\n        const mintAccountSpace = 82;\n        const mintAccountLamports = await connection.getMinimumBalanceForRentExemption(mintAccountSpace);\n        const tokenAccountSpace = 165;\n        const tokenAccountLamports = await connection.getMinimumBalanceForRentExemption(tokenAccountSpace);\n        // Initialize pool token.\n        setup.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolTokenMint.publicKey,\n            space: mintAccountSpace,\n            lamports: mintAccountLamports,\n            programId: token_instructions_1.TOKEN_PROGRAM_ID,\n        }), serum_1.TokenInstructions.initializeMint({\n            mint: poolTokenMint.publicKey,\n            decimals: poolMintDecimals,\n            mintAuthority: creator,\n        }), web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: creatorPoolTokenAccount.publicKey,\n            space: tokenAccountSpace,\n            lamports: tokenAccountLamports,\n            programId: token_instructions_1.TOKEN_PROGRAM_ID,\n        }), serum_1.TokenInstructions.initializeAccount({\n            account: creatorPoolTokenAccount.publicKey,\n            mint: poolTokenMint.publicKey,\n            owner: creator,\n        }));\n        finalize.transaction.add(serum_1.TokenInstructions.mintTo({\n            mint: poolTokenMint.publicKey,\n            destination: creatorPoolTokenAccount.publicKey,\n            amount: initialPoolMintSupply,\n            mintAuthority: creator,\n        }), serum_1.TokenInstructions.setAuthority({\n            target: poolTokenMint.publicKey,\n            currentAuthority: creator,\n            newAuthority: vaultSigner,\n            authorityType: 0,\n        }));\n        // Initialize vault accounts.\n        assetMints.forEach((mint, index) => {\n            const vault = vaultAccounts[index];\n            setup.transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: creator,\n                newAccountPubkey: vault.publicKey,\n                space: tokenAccountSpace,\n                lamports: tokenAccountLamports,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }), serum_1.TokenInstructions.initializeAccount({\n                account: vault.publicKey,\n                mint,\n                owner: vaultSigner,\n            }));\n            finalize.transaction.add(serum_1.TokenInstructions.transfer({\n                source: creatorAssets[index],\n                destination: vault.publicKey,\n                amount: initialAssetQuantities[index],\n                owner: creator,\n            }));\n        });\n        // Initialize pool account.\n        finalize.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolStateAccount.publicKey,\n            space: poolStateSpace,\n            lamports: await connection.getMinimumBalanceForRentExemption(poolStateSpace),\n            programId: programId,\n        }), instructions_1.PoolInstructions.initialize(programId, poolStateAccount.publicKey, poolTokenMint.publicKey, poolName, vaultAccounts.map(vault => vault.publicKey), vaultSigner, vaultSignerNonce, additionalAccounts));\n        return [poolStateAccount.publicKey, [setup, finalize]];\n    }\n    /**\n     * Transaction to get a pool basket, for use with simulateTransaction.\n     *\n     * This is a wrapper around {@link PoolInstructions.getBasket} that handles\n     * initializing the retbuf account.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param payer Payer for fees. Must have nonzero SOL but will not be charged\n     * if the transaction is only simulated.\n     */\n    static getBasket(pool, action, payer) {\n        const transaction = new web3_js_1.Transaction();\n        const retbufAccount = new web3_js_1.Account();\n        transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: payer,\n            newAccountPubkey: retbufAccount.publicKey,\n            lamports: 0,\n            space: 1024,\n            programId: instructions_1.RETBUF_PROGRAM_ID,\n        }));\n        transaction.add(instructions_1.PoolInstructions.getBasket(pool, action, retbufAccount.publicKey));\n        transaction.feePayer = payer;\n        return { transaction, signers: [retbufAccount] };\n    }\n    /**\n     * Transaction to execute a creation, redemption, or swap.\n     *\n     * This is a wrapper around {@link PoolInstructions.execute} that handles\n     * token delegation.\n     *\n     * The transaction will create a temporary account, delegate tokens to it,\n     * and use it in place of the actual owner, to limit the quantity of tokens\n     * that the pool can pull from the user's accounts.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     * @param expectedBasket Expected basket. Used to determine the quantity of\n     * tokens to approve.\n     */\n    static execute(pool, action, user, expectedBasket) {\n        if (expectedBasket.quantities.length !== pool.state.assets.length) {\n            throw new Error('expectedBasket must have the same number of components as the pool');\n        }\n        const transaction = new web3_js_1.Transaction();\n        const delegate = new web3_js_1.Account();\n        if ('create' in action) {\n            expectedBasket.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        else if ('redeem' in action) {\n            transaction.add(serum_1.TokenInstructions.approve({\n                owner: user.owner,\n                source: user.poolTokenAccount,\n                delegate: delegate.publicKey,\n                amount: action.redeem,\n            }));\n            expectedBasket.quantities.forEach((amount, index) => {\n                if (amount.isNeg()) {\n                    transaction.add(serum_1.TokenInstructions.approve({\n                        owner: user.owner,\n                        source: user.assetAccounts[index],\n                        delegate: delegate.publicKey,\n                        amount: amount.abs(),\n                    }));\n                }\n            });\n        }\n        else if ('swap' in action) {\n            action.swap.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        transaction.add(instructions_1.PoolInstructions.execute(pool, action, {\n            ...user,\n            owner: delegate.publicKey,\n        }));\n        return { transaction, signers: [delegate] };\n    }\n}\nexports.PoolTransactions = PoolTransactions;\n//# sourceMappingURL=transactions.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, rustEnum, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst BALANCES_LAYOUT = struct([\n    u64('sptAmount'),\n    u64('sptMegaAmount'),\n    u64('currentDeposit'),\n    u64('currentMegaDeposit'),\n]);\nconst ENTITY_STATE_LAYOUT = rustEnum([\n    struct([], 'inactive'),\n    struct([i64('deactivationStartTs'), i64('timelock')], 'pendingDeactivation'),\n    struct([], 'active'),\n]);\nconst ENTITY_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('leader'),\n    BALANCES_LAYOUT.replicate('balances'),\n    u64('generation'),\n    ENTITY_STATE_LAYOUT.replicate('state'),\n]);\nexport function decode(data) {\n    return ENTITY_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = ENTITY_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    registrar: new PublicKey(Buffer.alloc(32)),\n    leader: new PublicKey(Buffer.alloc(32)),\n    balances: {\n        sptAmount: new BN(0),\n        sptMegaAmount: new BN(0),\n        currentDeposit: new BN(0),\n        currentMegaDeposit: new BN(0),\n    },\n    generation: new BN(0),\n    state: {\n        inactive: {},\n    },\n}).length;\n//# sourceMappingURL=entity.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { POOL_PRICES_LAYOUT, defaultPoolPrices, } from './generation';\nconst ORIGINAL_DEPOSIT_LAYOUT = struct([\n    publicKey('owner'),\n    u64('deposit'),\n    u64('megaDeposit'),\n]);\nconst MEMBER_BALANCES_LAYOUT = struct([\n    u64('sptAmount'),\n    u64('sptMegaAmount'),\n    u64('currentDeposit'),\n    u64('currentMegaDeposit'),\n    ORIGINAL_DEPOSIT_LAYOUT.replicate('main'),\n    ORIGINAL_DEPOSIT_LAYOUT.replicate('delegate'),\n]);\nconst MEMBER_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('entity'),\n    publicKey('beneficiary'),\n    u64('generation'),\n    MEMBER_BALANCES_LAYOUT.replicate('balances'),\n    POOL_PRICES_LAYOUT.replicate('lastActivePrices'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    return MEMBER_LAYOUT.decode(data);\n}\nexport function encode(m) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = MEMBER_LAYOUT.encode(m, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    registrar: new PublicKey(Buffer.alloc(32)),\n    entity: new PublicKey(Buffer.alloc(32)),\n    beneficiary: new PublicKey(Buffer.alloc(32)),\n    generation: new BN(0),\n    balances: {\n        sptAmount: new BN(0),\n        sptMegaAmount: new BN(0),\n        currentDeposit: new BN(0),\n        currentMegaDeposit: new BN(0),\n        main: {\n            owner: new PublicKey(Buffer.alloc(32)),\n            deposit: new BN(0),\n            megaDeposit: new BN(0),\n        },\n        delegate: {\n            owner: new PublicKey(Buffer.alloc(32)),\n            deposit: new BN(0),\n            megaDeposit: new BN(0),\n        },\n    },\n    lastActivePrices: defaultPoolPrices(),\n    nonce: 0,\n}).length;\n//# sourceMappingURL=member.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst PENDING_PAYMENT_LAYOUT = struct([\n    u64('assetAmount'),\n    u64('megaAssetAmount'),\n]);\nconst PENDING_WITHDRAWAL_LAYOUT = struct([\n    bool('initialized'),\n    bool('burned'),\n    publicKey('member'),\n    i64('startTs'),\n    i64('endTs'),\n    u64('sptAmount'),\n    publicKey('pool'),\n    PENDING_PAYMENT_LAYOUT.replicate('payment'),\n]);\nexport function decode(data) {\n    return PENDING_WITHDRAWAL_LAYOUT.decode(data);\n}\nexport function encode(pw) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = PENDING_WITHDRAWAL_LAYOUT.encode(pw, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    burned: false,\n    member: new PublicKey(Buffer.alloc(32)),\n    startTs: new BN(0),\n    endTs: new BN(0),\n    sptAmount: new BN(0),\n    pool: new PublicKey(Buffer.alloc(32)),\n    payment: {\n        assetAmount: new BN(0),\n        megaAssetAmount: new BN(0),\n    },\n}).length;\n//# sourceMappingURL=pending-withdrawal.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey, }) {\n        const { transaction, signers } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 0) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        feeDiscountPubkey =\n            feeDiscountPubkey ||\n                (this.supportsSrmFeeDiscounts\n                    ? (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey\n                    : null);\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            const newOpenOrdersAccount = new web3_js_1.Account();\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, newOpenOrdersAccount.publicKey, this._programId));\n            openOrdersAddress = newOpenOrdersAccount.publicKey;\n            signers.push(newOpenOrdersAccount);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        return instructions_1.DexInstructions.newOrder({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            openOrders: openOrdersAddressKey,\n            owner: ownerAddress,\n            payer,\n            side,\n            limitPrice: this.priceNumberToLots(price),\n            maxQuantity: this.baseSizeNumberToLots(size),\n            orderType,\n            clientId,\n            programId: this._programId,\n            feeDiscountPubkey,\n        });\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n            market: this.address,\n            owner,\n            openOrders,\n            requestQueue: this._decoded.requestQueue,\n            clientId,\n            programId: this._programId,\n        }));\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        return instructions_1.DexInstructions.cancelOrder({\n            market: this.address,\n            owner,\n            openOrders: order.openOrdersAddress,\n            requestQueue: this._decoded.requestQueue,\n            side: order.side,\n            orderId: order.orderId,\n            openOrdersSlot: order.openOrdersSlot,\n            programId: this._programId,\n        });\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    *[Symbol.iterator]() {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWallet = exports.Provider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass Provider {\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: 'max',\n        };\n    }\n    static local(url, opts) {\n        opts = opts || Provider.defaultOptions();\n        const connection = new web3_js_1.Connection(url || 'http://localhost:8899', opts.preflightCommitment);\n        const wallet = NodeWallet.local();\n        return new Provider(connection, wallet, opts);\n    }\n    async send(tx, signers, opts) {\n        if (signers === undefined) {\n            signers = [];\n        }\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const signerKps = signers.filter(s => s !== undefined);\n        const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n        tx.setSigners(...signerPubkeys);\n        tx.recentBlockhash = (await this.connection.getRecentBlockhash(opts.preflightCommitment)).blockhash;\n        await this.wallet.signTransaction(tx);\n        signerKps.forEach(kp => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        const txId = await this.connection.sendRawTransaction(rawTx, opts);\n        await this.connection.confirmTransaction(txId, this.opts.preflightCommitment);\n        return txId;\n    }\n}\nexports.Provider = Provider;\nclass NodeWallet {\n    constructor(payer) {\n        this.payer = payer;\n    }\n    static local() {\n        const payer = new web3_js_1.Account(Buffer.from(JSON.parse(require('fs').readFileSync(require('os').homedir() + '/.config/solana/id.json', {\n            encoding: 'utf-8',\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n}\nexports.NodeWallet = NodeWallet;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","export type Action = {\n  type: ActionType;\n  item: any;\n};\n\nexport enum ActionType {\n  // Common.\n  CommonAppWillStart,\n  CommonAppDidStart,\n  CommonWalletSetProvider,\n  CommonWalletIsConnected,\n  CommonNetworkSetUrl,\n  CommonOwnedTokenAccountsSet,\n  CommonClearStore,\n  CommonWalletReset,\n\n  // Lockup.\n  LockupSetVestings,\n  LockupCreateVesting,\n\n  // Registry.\n  RegistryCreateEntity,\n  RegistrySetEntities,\n  RegistrySetMember,\n}\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as bs58 from 'bs58';\nimport * as BufferLayout from 'buffer-layout';\nimport { useSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport { AccountInfo as TokenAccount } from '@solana/spl-token';\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Client, accounts, networks } from '@project-serum/lockup';\nimport { Client as RegistryClient } from '@project-serum/registry';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { TokenInstructions } from '@project-serum/serum';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error('Missing wallet context');\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  client: Client; // todo: rename lockupClient.\n  registryClient: RegistryClient;\n};\n\nexport function WalletProvider(\n  props: PropsWithChildren<ReactNode>,\n): ReactElement {\n  const { walletProvider, networkUrl } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      networkUrl: state.common.networkUrl,\n    };\n  });\n  const wallet = useMemo(() => new Wallet(walletProvider, networkUrl), [\n    walletProvider,\n    networkUrl,\n  ]);\n\n  const { client, registryClient } = useMemo(() => {\n    return {\n      client: Client.devnet(wallet, {\n        preflightCommitment: 'recent',\n      }),\n      registryClient: RegistryClient.devnet(wallet, {\n        preflightCommitment: 'recent',\n      }),\n    };\n  }, [wallet]);\n\n  return (\n    <WalletContext.Provider value={{ wallet, client, registryClient }}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function WalletConnectButton(): ReactElement {\n  const isConnected = useSelector(\n    (state: StoreState) => state.common.walletIsConnected,\n  );\n  const dispatch = useDispatch();\n  const { wallet, client, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const connect = () => {\n    wallet.connect();\n  };\n\n  const disconnect = () => {\n    wallet.disconnect();\n  };\n\n  // One time application startup.\n  useEffect(() => {\n\t\tdispatch({\n\t\t\ttype: ActionType.CommonAppWillStart,\n\t\t\titem: {},\n\t\t});\n    const fetchEntityAccounts = async () => {\n      const entityAccounts = await getEntityAccounts(\n        registryClient.provider.connection,\n      );\n      dispatch({\n        type: ActionType.RegistrySetEntities,\n        item: {\n          entities: entityAccounts,\n        },\n      });\n\t\t\tdispatch({\n\t\t\t\ttype: ActionType.CommonAppDidStart,\n\t\t\t\titem: {},\n\t\t\t});\n    };\n    fetchEntityAccounts();\n  }, [dispatch, registryClient.provider.connection]);\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on('disconnect', () => {\n      dispatch({\n        type: ActionType.CommonWalletReset,\n        item: {},\n      });\n      enqueueSnackbar('Disconnected from wallet', {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n    });\n    wallet.on('connect', async () => {\n      dispatch({\n        type: ActionType.CommonWalletIsConnected,\n        item: {\n          walletIsConnected: true,\n        },\n      });\n\n      const fetchOwnedTokenAccounts = async () => {\n        const ownedTokenAccounts = await getOwnedTokenAccounts(\n          client.provider.connection,\n          wallet.publicKey,\n        );\n        dispatch({\n          type: ActionType.CommonOwnedTokenAccountsSet,\n          item: {\n            ownedTokenAccounts,\n          },\n        });\n      };\n\n      const fetchVestingAccounts = async () => {\n        const vestingAccounts = await getVestingAccounts(\n          client.provider.connection,\n          wallet.publicKey,\n        );\n        dispatch({\n          type: ActionType.LockupSetVestings,\n          item: {\n            vestingAccounts,\n          },\n        });\n      };\n\n      await Promise.all([fetchOwnedTokenAccounts(), fetchVestingAccounts()]);\n      enqueueSnackbar(`Connection established ${wallet.publicKey.toBase58()}`, {\n        variant: 'success',\n        autoHideDuration: 2500,\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, client.provider.connection]);\n\n  return isConnected ? (\n    <Button color=\"inherit\" onClick={disconnect}>\n      Disconnect\n    </Button>\n  ) : (\n    <Button color=\"inherit\" onClick={connect}>\n      Connect wallet\n    </Button>\n  );\n}\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<ProgramAccount<TokenAccount>[]> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TokenInstructions.TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return (\n    resp.result\n      // @ts-ignore\n      .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n          publicKey: new PublicKey(pubkey),\n          account: parseTokenAccountData(data),\n        };\n      })\n  );\n}\n\nexport async function getVestingAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<ProgramAccount<accounts.Vesting>[]> {\n  let filters = getVestingAccountsFilters(publicKey);\n\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    networks.devnet.programId.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n\n  return (\n    resp.result\n      // @ts-ignore\n      .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n          publicKey: new PublicKey(pubkey),\n          account: accounts.vesting.decode(data),\n        };\n      })\n  );\n}\n\nfunction getVestingAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        // todo: update once we move the option around\n        // @ts-ignore\n        offset: 35, //accounts.vesting.VESTING_LAYOUT.offsetOf('beneficiary'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: accounts.vesting.SIZE,\n    },\n  ];\n}\n\nexport async function getEntityAccounts(\n  connection: Connection,\n): Promise<ProgramAccount<registry.accounts.Entity>[]> {\n  let filters = getEntityAccountsFilters();\n\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    registry.networks.devnet.programId.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error('failed to get entity accounts');\n  }\n\n  return (\n    resp.result\n      // @ts-ignore\n      .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n          publicKey: new PublicKey(pubkey),\n          account: registry.accounts.entity.decode(data),\n        };\n      })\n  );\n}\n\n// All initialized entity accounts.\nfunction getEntityAccountsFilters() {\n  return [\n    {\n      memcmp: {\n        offset: 0,\n        bytes: '2',\n      },\n    },\n    {\n      dataSize: registry.accounts.entity.SIZE,\n    },\n  ];\n}\n\n// todo: remove\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.blob(37),\n]);\n\nexport function parseTokenAccountData(data: any) {\n  // @ts-ignore\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\n// @ts-ignore\nexport function parseMintData(data) {\n  // @ts-ignore\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\n// @ts-ignore\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        // @ts-ignore\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n","import React, { PropsWithChildren, ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { WalletConnectButton } from './Wallet';\n\ntype Props = {};\n\nexport default function Layout(props: PropsWithChildren<Props>) {\n  return (\n    <React.Fragment>\n      <Nav>{props.children}</Nav>\n    </React.Fragment>\n  );\n}\n\nfunction Nav(props: PropsWithChildren<Props>): ReactElement {\n  return (\n    <div style={{\n\t\t\tdisplay: 'flex',\n\t\t\tminHeight: '100vh',\n\t\t\tflexDirection: 'column',\n\t\t\tbackgroundColor: 'rgb(251, 251, 251)',\n\t\t}}>\n\t\t\t<div style={{\n\t\t\t\ttextAlign: 'center',\n\t\t\t\theight: '30px',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tbackgroundColor: 'rgb(245, 0, 87)',\n\t\t\t\tcolor: '#fef7f9',\n\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography style={{ fontSize: '14px', fontWeight: 'bold', }}>\n\t\t\t\t\tThis is unaudited software. Use at your own risk.\n\t\t\t\t</Typography>\n\t\t\t</div>\n      <AppBar\n        position=\"static\"\n        style={{\n          background: '#172026',\n          color: 'white',\n        }}\n      >\n        <Toolbar>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              width: '100%',\n            }}\n          >\n            <div style={{ display: 'flex' }}>\n              <Link\n                to={'/lockup'}\n                style={{ color: 'inherit', textDecoration: 'none' }}\n              >\n                <div style={{ display: 'flex' }}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center',\n                      marginRight: '24px',\n                    }}\n                  >\n                    <img\n                      style={{\n                        display: 'block',\n                        height: '35px',\n                      }}\n                      alt=\"Logo\"\n                      src=\"http://dex.projectserum.com/static/media/logo.49174c73.svg\"\n                    />\n                  </div>\n                  <IconButton color=\"inherit\" edge=\"start\">\n                    <Typography variant=\"h6\">Lockup</Typography>\n                  </IconButton>\n                </div>\n              </Link>\n              <Link\n                to={'/registry/entities'}\n                style={{ color: 'inherit', textDecoration: 'none' }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                    marginLeft: '12px',\n                  }}\n                >\n                  <IconButton color=\"inherit\" edge=\"start\">\n                    <Typography variant=\"h6\">Registry</Typography>\n                  </IconButton>\n                </div>\n              </Link>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n              }}\n            >\n              <WalletConnectButton />\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Container fixed maxWidth=\"md\">\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          {props.children}\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport { networks } from '@project-serum/lockup';\nimport { PublicKey } from '@solana/web3.js';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/Wallet';\n\nexport default function NewVesting() {\n  const defaultEndDate = '2027-01-01';\n  const defaultEndTs = new Date(defaultEndDate).getTime() / 1000;\n\n  const [beneficiary, setBeneficiary] = useState('');\n  const isValidBeneficiary = (() => {\n    try {\n      new PublicKey(beneficiary);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  })();\n  const displayBeneficiaryError = !isValidBeneficiary && beneficiary !== '';\n\n  const [fromAccount, setFromAccount] = useState('');\n  const [timestamp, setTimestamp] = useState(defaultEndTs);\n  const [periodCount, setPeriodCount] = useState(7);\n  const [amountStr, setAmountStr] = useState('');\n  // @ts-ignore\n  const isValidAmountStr = !isNaN(amountStr) && amountStr !== '';\n  const displayAmountError = !isValidAmountStr && amountStr !== '';\n  const amount = parseInt(amountStr);\n\n  // TODO: don't hardcode srm filter.\n  const srmMint = networks.devnet.srm;\n  const ownedTokenAccounts = useSelector((state: StoreState) =>\n    state.common.ownedTokenAccounts.filter(\n      ota => ota.account.mint.toString() === srmMint.toString(),\n    ),\n  );\n\n  const isValidOwnedTokenAccounts = ownedTokenAccounts.length > 0;\n\n  const submitBtnEnabled =\n    isValidBeneficiary && isValidAmountStr && isValidOwnedTokenAccounts;\n\n  const { client } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {isLoading && (\n        <div\n          style={{\n            width: '40px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginBottom: '24px',\n          }}\n        >\n          <CircularProgress\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          />\n        </div>\n      )}\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h4\" component=\"h2\">\n            New Vesting Account\n          </Typography>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-helper-label\">From</InputLabel>\n              <Select\n                fullWidth\n                value={fromAccount}\n                onChange={e => setFromAccount(e.target.value as string)}\n              >\n                {ownedTokenAccounts.length === 0 ? (\n                  <MenuItem value={''}>No token accounts found</MenuItem>\n                ) : (\n                  ownedTokenAccounts.map(ownedTokenAccount => {\n                    return (\n                      <MenuItem value={ownedTokenAccount.publicKey.toString()}>\n                        <div\n                          style={{\n                            width: '100%',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                          }}\n                        >\n                          <div>{`${ownedTokenAccount.publicKey}`}</div>\n                          <div\n                            style={{ float: 'right', color: '#ccc' }}\n                          >{`${ownedTokenAccount.account.amount}`}</div>\n                        </div>\n                      </MenuItem>\n                    );\n                  })\n                )}\n              </Select>\n              <FormHelperText>Token account to send from</FormHelperText>\n            </FormControl>\n          </div>\n          <div style={{ marginTop: '24px' }}>\n            <TextField\n              fullWidth\n              error={displayBeneficiaryError}\n              helperText={displayBeneficiaryError && 'Invalid beneficiary'}\n              label=\"Beneficiary\"\n              value={beneficiary}\n              onChange={e => setBeneficiary(e.target.value)}\n            />\n            <FormHelperText>Owner of the new vesting account</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <TextField\n              error={displayAmountError}\n              helperText={displayAmountError && 'Invalid amount'}\n              fullWidth\n              label=\"Amount\"\n              value={amountStr}\n              onChange={e => setAmountStr(e.target.value)}\n            />\n            <FormHelperText>\n              Amount to deposit into the vesting account\n            </FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"End date\"\n              type=\"date\"\n              defaultValue={defaultEndDate}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setTimestamp(d.getTime() / 1000);\n              }}\n            />\n            <FormHelperText>Date when all tokens are vested</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-helper-label\">\n                Periods\n              </InputLabel>\n              <Select\n                fullWidth\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                value={periodCount}\n                onChange={e => setPeriodCount(e.target.value as number)}\n              >\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={6}>6</MenuItem>\n                <MenuItem value={7}>7</MenuItem>\n                <MenuItem value={8}>8</MenuItem>\n                <MenuItem value={9}>9</MenuItem>\n                <MenuItem value={10}>10</MenuItem>\n              </Select>\n              <FormHelperText>Number of vesting periods</FormHelperText>\n            </FormControl>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              float: 'right',\n              marginBottom: '24px',\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!submitBtnEnabled || isLoading}\n              onClick={async () => {\n                setIsLoading(true);\n                enqueueSnackbar('Creating vesting acount...', {\n                  variant: 'info',\n                });\n                let { vesting } = await client.createVesting({\n                  beneficiary: new PublicKey(beneficiary),\n                  endTs: new BN(timestamp),\n                  periodCount: new BN(periodCount),\n                  depositAmount: new BN(amount),\n                  needsAssignment: null,\n                  depositor: new PublicKey(fromAccount),\n                });\n                const vestingAccount = await client.accounts.vesting(vesting);\n                dispatch({\n                  type: ActionType.LockupCreateVesting,\n                  item: {\n                    vesting: {\n                      publicKey: vesting,\n                      vesting: vestingAccount,\n                    },\n                  },\n                });\n                setIsLoading(false);\n                enqueueSnackbar(`Vesting account created ${vesting}`, {\n                  variant: 'success',\n                });\n              }}\n            >\n              Create\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWallet } from '../../components/common/Wallet';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { accounts } from '@project-serum/lockup';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport ChartistGraph from 'react-chartist';\nimport { FixedScaleAxis, IChartOptions, Interpolation } from 'chartist';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport BN from 'bn.js';\n\nexport default function VestingAccounts() {\n  const { wallet } = useWallet();\n  const vestingAccounts = useSelector(\n    (state: StoreState) => state.lockup.vestings,\n  );\n  const urlSuffix = '?cluster=devnet'; // todo: don't hardcode\n  const totalBalance = wallet.publicKey\n    ? vestingAccounts\n        .map(va => va.account.balance)\n        .reduce((a, b) => a.add(b), new BN(0))\n        .toNumber()\n    : 0;\n  return (\n    <>\n      <link\n        rel=\"stylesheet\"\n        href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n      />\n      <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n      {wallet.publicKey && (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '24px',\n          }}\n        >\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Typography style={{\n\t\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tVesting Accounts\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n          <div>\n            <RouterLink\n              to={'/lockup/vesting/new'}\n              style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n              <Button variant=\"contained\" color=\"secondary\">\n                New\n              </Button>\n            </RouterLink>\n          </div>\n        </div>\n      )}\n      <Card>\n        <CardContent style={{ paddingBottom: '16px' }}>\n          {wallet.publicKey ? (\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div>\n                <Typography variant=\"h5\">Beneficiary</Typography>\n                <Typography style={{ fontSize: '16px' }}>\n                  <Link\n                    href={\n                      `https://explorer.solana.com/account/${wallet.publicKey.toBase58()}` +\n                      urlSuffix\n                    }\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    {wallet.publicKey.toString()}\n                  </Link>\n                </Typography>\n              </div>\n              <div>\n                <div\n                  style={{\n                    marginTop: '6px',\n                    color: 'rgba(0, 0, 0, 0.54)',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <Typography variant=\"body1\">\n                    {`${totalBalance} SRM`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <Typography variant=\"h5\">Disconnected</Typography>\n          )}\n        </CardContent>\n      </Card>\n      <List disablePadding>\n        {vestingAccounts.map(v => (\n          <VestingAccountCard vesting={v} />\n        ))}\n      </List>\n    </>\n  );\n}\n\ntype VestingAccountCardProps = {\n  vesting: ProgramAccount<accounts.Vesting>;\n};\n\nfunction VestingAccountCard(props: VestingAccountCardProps) {\n  const { vesting } = props;\n  const startTs = vesting.account.startTs;\n  const endTs = vesting.account.endTs;\n\n  const tsOverflow = endTs.sub(startTs).mod(vesting.account.periodCount);\n  const shiftedStartTs = startTs.sub(tsOverflow);\n\n  const period = endTs.sub(shiftedStartTs).div(vesting.account.periodCount);\n\n  // Make the horizontal axis evenly spaced.\n  //\n  // Vesting dates assuming we stretch the start date back in time (so that the\n  // periods are of even length).\n  const vestingDates = [\n    ...Array(vesting.account.periodCount.toNumber() + 1),\n  ].map((_, idx) => {\n    return formatDate(\n      new Date((shiftedStartTs.toNumber() + idx * period.toNumber()) * 1000),\n    );\n  });\n  // Now push the start window forward to the real start date, making the first period shorter.\n  vestingDates[0] = formatDate(new Date(startTs.toNumber() * 1000));\n\n  // Now do the same thing on the vertical axis.\n  const rewardOverflow = vesting.account.startBalance.mod(\n    vesting.account.periodCount,\n  );\n  const rewardPerPeriod = vesting.account.startBalance\n    .sub(rewardOverflow)\n    .div(vesting.account.periodCount)\n    .toNumber();\n  const cumulativeVesting = [...Array(vestingDates.length)].map(() => 0);\n  cumulativeVesting[1] = rewardPerPeriod + rewardOverflow.toNumber();\n  for (let k = 2; k < cumulativeVesting.length; k += 1) {\n    cumulativeVesting[k] = cumulativeVesting[k - 1] + rewardPerPeriod;\n  }\n\n  const startLabel = formatDate(\n    new Date(vesting.account.startTs.toNumber() * 1000),\n  );\n  const endLabel = formatDate(\n    new Date(vesting.account.endTs.toNumber() * 1000),\n  );\n\n  const currencyLabel = 'SRM'; // todo: don't hardcode.\n  const urlSuffix = '?cluster=devnet'; // todo: don't hardcode\n  return (\n    <Card\n      key={vesting.publicKey.toString()}\n      style={{\n        marginTop: '24px',\n      }}\n    >\n      <CardContent>\n        <ListItem>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <ListItemText\n              primary={\n                <Link\n                  href={\n                    `https://explorer.solana.com/account/${vesting.publicKey.toBase58()}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {vesting.publicKey.toString()}\n                </Link>\n              }\n              secondary={`${startLabel}, ${endLabel} | ${vesting.account.periodCount.toNumber()} periods`}\n            />\n            <div\n              style={{\n                marginTop: '6px',\n                color: 'rgba(0, 0, 0, 0.54)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography variant=\"body1\">\n                {`${vesting.account.balance.toNumber()} ${currencyLabel}`}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n        <ChartistGraph\n          data={{\n            labels: vestingDates,\n            series: [cumulativeVesting],\n          }}\n          options={\n            {\n              axisY: {\n                type: FixedScaleAxis,\n                low: 0,\n                high: cumulativeVesting[cumulativeVesting.length - 1],\n                ticks: cumulativeVesting,\n              },\n              axisX: {\n                ticks: vestingDates,\n              },\n              lineSmooth: Interpolation.step(),\n              height: 400,\n            } as IChartOptions\n          }\n          type={'Line'}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n\n// TODO: locale format without minutes, hours, seconds?\nfunction formatDate(d: Date): string {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`;\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { accounts } from '@project-serum/registry';\nimport { PublicKey } from '@solana/web3.js';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport JoinEntityButton from '../../components/registry/JoinEntity';\nimport { ExplorerAddress } from '../../components/common/ExplorerLink';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/Wallet';\nimport { EntityActivityLabel } from './Entities';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\ntype Props = {\n  entity: ProgramAccount<accounts.Entity>;\n};\n\nenum TabModel {\n\tStake,\n\tMembers,\n};\n\nexport default function Entity(props: Props) {\n  const { entity } = props;\n\tconst [tab, setTab] = useState(TabModel.Stake);\n  let { isWalletConnected } = useSelector((state: StoreState) => {\n    return {\n      isWalletConnected: state.common.walletIsConnected,\n    };\n  });\n\n  return (\n    <>\n      <div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}>\n\t\t\t\t<div style={{\n\t\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\t\tpaddingTop: 50,\n\t\t\t\t\tpaddingRight: 50,\n\t\t\t\t\tpaddingLeft: 50,\n\t\t\t\t}}>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tpaddingBottom: '10px',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\tborderBottom: 'solid #fbfbfb',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Typography variant=\"h1\" style={{\n\t\t\t\t\t\t\t\t\tfontSize: 25,\n\t\t\t\t\t\t\t\t\tfontWeight: 700,\n\t\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{entity.publicKey.toString()}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" style={{\n\t\t\t\t\t\t\t\t\tpaddingBottom: 10,\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tLeader - {entity.account.leader.toString()}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<EntityActivityLabel entity={entity} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div style={{ flex: 1 }}>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{isWalletConnected && <JoinButton />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\t\t\tpaddingRight: 50,\n\t\t\t\t\t\tpaddingLeft: 50,\n\t\t\t\t\t}}>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={tab}\n\t\t\t\t\t\tonChange={(_e, t) => setTab(t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab label=\"Stake\" />\n\t\t\t\t\t\t<Tab label=\"Members\" />\n\t\t\t\t\t</Tabs>\n\t\t\t\t</div>\n\t\t\t\t<div style={{\n\t\t\t\t\tbackgroundColor: '#fbfbfb',\n\t\t\t\t\tflex: 1,\n\t\t\t\t\tpaddingTop: 50,\n\t\t\t\t\tpaddingBottom: 50,\n\t\t\t\t\tpaddingLeft: 50,\n\t\t\t\t\tpaddingRight: 50,\n\t\t\t\t}}>\n\t\t\t\t\t{tab === TabModel.Stake && (\n\t\t\t\t\t\t<StakeContent entity={entity} />\n\t\t\t\t\t)}\n\t\t\t\t\t{tab === TabModel.Members && (\n\t\t\t\t\t\t<MembersContent />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n      </div>\n    </>\n  );\n}\n\ntype StakeContentProps = {\n\tentity: ProgramAccount<accounts.Entity>;\n}\n\nfunction StakeContent(props: StakeContentProps) {\n\tconst { entity } = props;\n\treturn (\n\t\t<div>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<BalanceGridItem\n\t\t\t\tlabel=\"Free SRM Balance\"\n\t\t\t\tamount={entity.account.balances.currentDeposit.toString()}\n\t\t\t\t/>\n\t\t\t\t<BalanceGridItem\n\t\t\t\tlabel=\"Free MSRM Balance\"\n\t\t\t\tamount={entity.account.balances.currentMegaDeposit.toString()}\n\t\t    />\n\t\t\t\t<BalanceGridItem\n\t\t\t\tlabel=\"Stake Pool Shares\"\n\t\t\t\tamount={entity.account.balances.sptAmount.toString()}\n\t\t\t\t/>\n\t\t\t\t<BalanceGridItem\n\t\t\t\tlabel=\"Mega Stake Pool Shares\"\n\t\t\t\tamount={entity.account.balances.sptMegaAmount.toString()}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'row-reverse',\n\t\t\t\tmarginTop: '50px',\n\t\t\t}}>\n\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\tGeneration {entity.account.generation.toString()}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\ntype BalanceGridItemProps = {\n\tlabel:string;\n\tamount: string;\n};\n\nfunction BalanceGridItem(props: BalanceGridItemProps) {\n\tconst { label, amount } = props;\n\treturn (\n\t\t<Grid item xs={6}\n\t\t\tstyle={{\n\t\t\t\theight: '250px',\n\t\t\t}}\n\t\t>\n\t\t<Card style={{\n      boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\tpaddingTop: '24px',\n\t\t\tpaddingBottom: '24px',\n\t\t}}>\n\t\t<div style={{\n\t\t\theight: '100%',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column',\n\t\t}}>\n\t\t\t<div>\n\t\t\t\t<Typography\n\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t}}>\n\t\t\t\t\t{label}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div style={{\n\t\t\t\theight: '100%',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\ttextAlign: 'center',\n\t\t\t}}>\n\t\t\t\t<Typography color=\"textSecondary\" style={{\n\t\t\t\t\tfontSize: '40px',\n\t\t\t\t}}>\n\t\t\t\t\t{amount}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</div>\n\t\t</Card>\n\t</Grid>\n\t);\n}\n\nfunction MembersContent() {\n\treturn (\n\t\t<div>MEMBERS TODO</div>\n\t);\n}\n\nfunction JoinButton() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createEntity = async () => {\n\t\t/*\n    enqueueSnackbar('Joining entity...', {\n      variant: 'info',\n    });\n    const { tx, member } = await registryClient.createMember({});\n    const entityAccount = await registryClient.accounts.entity(entity);\n    dispatch({\n      type: ActionType.RegistryCreateEntity,\n      item: {\n        entity: {\n          publicKey: entity,\n          account: entityAccount,\n\t\t\t\t\taction: <ViewTransactionOnExplorerButton signature={tx} />\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Entity created ${entity}`, {\n      variant: 'success',\n    });\n\t\t*/\n  };\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"secondary\" onClick={createEntity}>\n        Join\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { accounts } from '@project-serum/registry';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Birghtness1Icon from '@material-ui/icons/Brightness1';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { useWallet } from '../../components/common/Wallet';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useHistory } from 'react-router-dom';\nimport Entity from './Entity';\n\nexport default function Entities() {\n  let { entities, isWalletConnected } = useSelector((state: StoreState) => {\n    return {\n      entities: state.registry.entities,\n      isWalletConnected: state.common.walletIsConnected,\n    };\n  });\n  // Sort entities by activation.\n  entities = entities\n    .filter(e => e.account.state.active !== undefined)\n    .concat(\n      entities.filter(e => e.account.state.pendingDeactivation !== undefined),\n    )\n    .concat(entities.filter(e => e.account.state.inactive !== undefined));\n\n  return (\n    <div>\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'space-between',\n//\t\t\t\tmarginLeft: '5px',\n\t\t\t\tmarginBottom: '10px',\n\t\t\t}}>\n\t\t\t\t<div style={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t}}>\n\t\t\t\t\t<Typography style={{\n\t\t\t\t\t\tfontSize: '20px',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t}}>\n\t\t\t\t\t\tNode Entities\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<NewButton style={{ visibility: !isWalletConnected ? 'hidden' : ''  }} />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{entities.map(entity => (\n\t\t\t\t\t<EntityCard entity={entity} />\n\t\t\t\t))}\n\t\t\t</div>\n      <style>\n        {`\n.entity-card-container {\n  transition: box-shadow .2s ease-out,-webkit-box-shadow .2s ease-out,-moz-box-shadow .2s ease-out;\n}\n.entity-card-container:hover {\n  cursor: pointer;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -moz-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -webkit-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n}\n.entity-card-container-inner {\n  transition: transform .2s ease-out,-webkit-transform .2s ease-out;\n}\n.entity-card-container-inner:hover {\n  transform: scale(1.025);\n  -webkit-transform: scalee(1.025);\n}\n\t\t\t\t\t`}\n      </style>\n    </div>\n  );\n}\n\ntype EntityCardProps = {\n  entity: ProgramAccount<accounts.Entity>;\n};\n\nfunction EntityCard(props: EntityCardProps) {\n  const { entity } = props;\n  const [open, setOpen] = useState(false);\n  //\tconst history = useHistory();\n  return (\n    <>\n      <EntityDialog\n        open={open}\n        onClose={() => setOpen(false)}\n        entity={entity}\n      />\n      <div\n        style={{\n          width: '304px',\n          padding: '5px',\n        }}\n      >\n        <div className=\"entity-card-container\">\n          <Card\n            onClick={() => setOpen(true)}\n            style={{\n              borderRadius: 10,\n              height: '294px',\n              boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n            }}\n          >\n            <CardContent style={{\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tpaddingBottom: '16px', // Override material's non-symmetric default.\n\t\t\t\t\t\t}}>\n              <div\n                className=\"entity-card-container-inner\"\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textSecondary\"\n                    style={{\n                      fontWeight: 'bold',\n                      fontSize: '16px',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    {entity.publicKey.toString()}\n                  </Typography>\n                </div>\n                <div\n                  style={{\n                    flex: '1',\n                  }}\n                >\n                  <div\n                    style={{\n                      height: '100%',\n                      textAlign: 'center',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      flexDirection: 'column',\n                    }}\n                  >\n                    <div>\n                      <Typography\n                        color=\"textSecondary\"\n                        style={{\n                          fontSize: '24px',\n                        }}\n                      >\n                        {`${entity.account.balances.sptAmount.toString()} | ${entity.account.balances.sptMegaAmount.toString()}`}\n                      </Typography>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n\t\t\t\t\t\t\t\t\t<EntityActivityLabel entity={entity} />\n                  <Typography color=\"textSecondary\">\n                    {`Generation ${entity.account.generation}`}\n                  </Typography>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype EntityActivityLabelProps = {\n\tentity: ProgramAccount<accounts.Entity>;\n};\n\nexport function EntityActivityLabel(props: EntityActivityLabelProps) {\n\tconst { entity } = props;\n\treturn (\n\t\t<>\n      {entity.account.state.active !== undefined && (\n        <ActivityLabel color=\"green\" text=\"Active\" />\n      )}\n      {entity.account.state.pendingDeactivation !== undefined && (\n        <ActivityLabel color=\"yellow\" text=\"Inactive\" />\n      )}\n      {entity.account.state.inactive !== undefined && (\n        <ActivityLabel color=\"red\" text=\"Inactive\" />\n      )}\n\t\t</>\n\t);\n}\n\ntype ActivityLabelProps = {\n  color: string;\n  text: string;\n};\n\nfunction ActivityLabel(props: ActivityLabelProps) {\n  const { color, text } = props;\n  return (\n    <div style={{ display: 'flex' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          marginRight: '10px',\n        }}\n      >\n        <Birghtness1Icon\n          style={{\n            color,\n            fontSize: '15px',\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          fontSize: '10px',\n        }}\n      >\n        <Typography color=\"textSecondary\">{text}</Typography>\n      </div>\n    </div>\n  );\n}\n\ntype NewButtonProps = {\n\tstyle?: any;\n};\n\nfunction NewButton(props?: NewButtonProps) {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const createEntity = async () => {\n    enqueueSnackbar('Creating entity...', {\n      variant: 'info',\n    });\n    const { entity } = await registryClient.createEntity({});\n    const entityAccount = await registryClient.accounts.entity(entity);\n    dispatch({\n      type: ActionType.RegistryCreateEntity,\n      item: {\n        entity: {\n          publicKey: entity,\n          account: entityAccount,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Entity created ${entity}`, {\n      variant: 'success',\n    });\n  };\n  return (\n    <div style={props && props.style}>\n      <Button variant=\"contained\" color=\"secondary\" onClick={createEntity}>\n        New\n      </Button>\n    </div>\n  );\n}\n\ntype EntityDialogProps = {\n  entity: ProgramAccount<accounts.Entity>;\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction EntityDialog(props: EntityDialogProps) {\n  const { entity, open, onClose } = props;\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"md\">\n      <DialogContent style={{\n\t\t\t\tbackgroundColor: '#fbfbfb',\n\t\t\t\tpadding: 0,\n\t\t\t\tminHeight: '850px',\n\t\t\t}}>\n        <Entity entity={entity} />\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Layout from './components/common/Layout';\nimport NewVestingAccount from './pages/lockup/NewVestingAccount';\nimport VestingAccounts from './pages/lockup/VestingAccounts';\nimport Entities from './pages/registry/Entities';\nimport Entity from './pages/registry/Entity';\n\nexport default function Routes() {\n  return (\n    <React.Fragment>\n      <HashRouter basename={'/'}>\n        <Layout>\n          <Route exact path=\"/\" component={VestingAccounts} />\n          <Route exact path=\"/lockup\" component={VestingAccounts} />\n          <Route exact path=\"/lockup/vesting/new\" component={NewVestingAccount} />\n          <Route exact path=\"/registry/entities\" component={Entities} />\n        </Layout>\n      </HashRouter>\n    </React.Fragment>\n  );\n}\n","import { Action, ActionType } from './actions';\nimport { PublicKey } from '@solana/web3.js';\nimport { AccountInfo as TokenAccount } from '@solana/spl-token';\nimport * as lockup from '@project-serum/lockup';\nimport * as registry from '@project-serum/registry';\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  const newState = {\n    common: { ...state.common },\n    lockup: { ...state.lockup },\n    registry: { ...state.registry },\n  };\n  switch (action.type) {\n    // Common.\n    case ActionType.CommonAppWillStart:\n      return newState;\n    case ActionType.CommonAppDidStart:\n      newState.common.isBootstrapped = true;\n      return newState;\n    case ActionType.CommonWalletSetProvider:\n      newState.common.walletProvider = action.item.walletProvider;\n      return newState;\n    case ActionType.CommonWalletIsConnected:\n      newState.common.walletIsConnected = action.item.walletIsConnected;\n      return newState;\n    case ActionType.CommonNetworkSetUrl:\n      newState.common.networkUrl = action.item.networkUrl;\n      return newState;\n    case ActionType.CommonOwnedTokenAccountsSet:\n      newState.common.ownedTokenAccounts = action.item.ownedTokenAccounts;\n      return newState;\n    case ActionType.CommonClearStore:\n      return { ...initialState };\n    case ActionType.CommonWalletReset:\n      newState.common.walletIsConnected = false;\n      newState.common.ownedTokenAccounts = [];\n      newState.lockup.vestings = [];\n      return newState;\n\n    // Lockup.\n    case ActionType.LockupSetVestings:\n      newState.lockup.vestings = action.item.vestingAccounts;\n      return newState;\n    case ActionType.LockupCreateVesting:\n      newState.lockup.vestings.unshift(action.item.vesting);\n      return newState;\n\n    // Registry.\n    case ActionType.RegistryCreateEntity:\n      newState.registry.entities.unshift(action.item.entity);\n      return newState;\n    case ActionType.RegistrySetEntities:\n      newState.registry.entities = action.item.entities;\n      return newState;\n    case ActionType.RegistrySetMember:\n      newState.registry.member = action.item.member;\n      return newState;\n\n    // Misc.\n    default:\n      return newState;\n  }\n}\n\nexport type State = {\n  common: CommonState;\n  lockup: LockupState;\n  registry: RegistryState;\n};\n\nexport type CommonState = {\n  isBootstrapped: boolean;\n  walletProvider?: string;\n  walletIsConnected: boolean;\n  networkUrl?: string;\n  ownedTokenAccounts: ProgramAccount<TokenAccount>[];\n};\n\nexport type LockupState = {\n  vestings: ProgramAccount<lockup.accounts.Vesting>[];\n};\n\nexport type RegistryState = {\n  entities: ProgramAccount<registry.accounts.Entity>[];\n  member?: ProgramAccount<registry.accounts.Member>;\n};\n\nexport const initialState: State = {\n  common: {\n    isBootstrapped: false,\n    walletProvider: 'https://www.sollet.io',\n    walletIsConnected: false,\n    networkUrl: 'https://devnet.solana.com',\n    ownedTokenAccounts: [],\n  },\n  lockup: {\n    vestings: [],\n  },\n  registry: {\n    entities: [],\n  },\n};\n\nexport type ProgramAccount<T> = {\n  publicKey: PublicKey;\n  account: T;\n};\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React, { useMemo, Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport Routes from './Routes';\nimport { store } from './store';\nimport { WalletProvider } from './components/common/Wallet';\n\nfunction App() {\n\tconst theme = createMuiTheme({\n\t\tpalette: {\n\t\t\tbackground: {\n\t\t\t\tdefault: \"rgb(255,255,255)\"\n\t\t\t}\n\t\t},\n\t\ttypography: {\n\t\t\tfontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\")\n\t\t},\n\t\toverrides: {}\n\t});\n  return (\n\t\t<Provider store={store}>\n\t\t\t<Suspense fallback={<div></div>}>\n\t\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n          <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n\t\t\t\t\t\t<WalletProvider>\n\t\t\t\t\t\t\t<Routes />\n\t\t\t\t\t\t</WalletProvider>\n\t\t\t\t\t</SnackbarProvider>\n\t\t\t\t</MuiThemeProvider>\n\t\t\t</Suspense>\n\t\t</Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","import { u8, struct } from 'buffer-layout';\nimport { i64, publicKey, rustEnum, u64, vecU8, option, } from '@project-serum/borsh';\nimport { NEEDS_ASSIGNMENT_LAYOUT } from './accounts/vesting';\nimport { WHITELIST_ENTRY_LAYOUT } from './accounts/whitelist';\nconst LOCKUP_INSTRUCTION_LAYOUT = rustEnum([\n    struct([publicKey('authority'), u8('nonce')], 'initialize'),\n    struct([\n        publicKey('beneficiary'),\n        i64('endTs'),\n        u64('periodCount'),\n        u64('depositAmount'),\n        option(NEEDS_ASSIGNMENT_LAYOUT.replicate('needsAssignmentInner'), 'needsAssignment'),\n    ], 'createVesting'),\n    struct([publicKey('beneficiary')], 'assign'),\n    struct([], 'claim'),\n    struct([u64('amount')], 'redeem'),\n    struct([u64('amount'), vecU8('instructionData')], 'whitelistWithdraw'),\n    struct([vecU8('instructionData')], 'whitelistDeposit'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistAdd'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistDelete'),\n    struct([publicKey('newAuthority')], 'setAuthority'),\n    struct([], 'migrate'),\n]);\nexport function decode(data) {\n    return LOCKUP_INSTRUCTION_LAYOUT.decode(data);\n}\nexport function encode(i) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKUP_INSTRUCTION_LAYOUT.encode(i, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=instruction.js.map","import { struct, u8 } from 'buffer-layout';\nimport { publicKey, option } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport class Whitelist {\n    constructor(safe, entries) {\n        this.safe = safe;\n        this.entries = entries;\n    }\n    static ITEM_START() {\n        return 32;\n    }\n    static LEN() {\n        return 50;\n    }\n    static ITEM_SIZE() {\n        return 65;\n    }\n    static SIZE() {\n        return Whitelist.ITEM_START() + Whitelist.LEN() * Whitelist.ITEM_SIZE();\n    }\n}\nexport const WHITELIST_ENTRY_LAYOUT = struct([\n    publicKey('programId'),\n    option(publicKey(), 'instance'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    if (data.length !== SIZE) {\n        throw new Error(`invalid buffer len: ${data.length}`);\n    }\n    const entries = [];\n    const safe = new PublicKey(data.slice(0, Whitelist.ITEM_START()));\n    for (let k = Whitelist.ITEM_START(); k < Whitelist.SIZE(); k += Whitelist.ITEM_SIZE()) {\n        const programId = new PublicKey(data.slice(k, k + 32));\n        const instance = new PublicKey(data.slice(k + 32, k + 64));\n        const nonce = data[k + 64];\n        entries.push({\n            programId,\n            instance,\n            nonce,\n        });\n    }\n    return new Whitelist(safe, entries);\n}\nexport const SIZE = Whitelist.SIZE();\n//# sourceMappingURL=whitelist.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst REGISTRAR_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('authority'),\n    u8('nonce'),\n    u64('rewardActivationThreshold'),\n    u64('maxStakePerEntity'),\n    i64('withdrawalTimelock'),\n    i64('deactivationTimelock'),\n    publicKey('vault'),\n    publicKey('megaVault'),\n    publicKey('pool'),\n    publicKey('megaPool'),\n    publicKey('poolProgramId'),\n]);\nexport function decode(data) {\n    return REGISTRAR_LAYOUT.decode(data);\n}\nexport function encode(r) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = REGISTRAR_LAYOUT.encode(r, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    authority: new PublicKey(Buffer.alloc(32)),\n    nonce: 0,\n    rewardActivationThreshold: new BN(0),\n    maxStakePerEntity: new BN(0),\n    withdrawalTimelock: new BN(0),\n    deactivationTimelock: new BN(0),\n    vault: new PublicKey(Buffer.alloc(32)),\n    megaVault: new PublicKey(Buffer.alloc(32)),\n    pool: new PublicKey(Buffer.alloc(32)),\n    megaPool: new PublicKey(Buffer.alloc(32)),\n    poolProgramId: new PublicKey(Buffer.alloc(32)),\n}).length;\nexport const STAKE_POOL_NAME = '';\nexport const MEGA_STAKE_POOL_NAME = '';\n//# sourceMappingURL=registrar.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64, option } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nexport const NEEDS_ASSIGNMENT_LAYOUT = struct([\n    publicKey('authority'),\n    publicKey('programid'),\n    publicKey('identifier'),\n    u8('nonce'),\n]);\nexport const VESTING_LAYOUT = struct([\n    bool('initialized'),\n    option(NEEDS_ASSIGNMENT_LAYOUT.replicate('needsAssignmentInner'), 'needsAssignment'),\n    bool('claimed'),\n    publicKey('safe'),\n    publicKey('beneficiary'),\n    u64('balance'),\n    u64('startBalance'),\n    i64('startTs'),\n    i64('endTs'),\n    u64('periodCount'),\n    publicKey('lockedNftMint'),\n    publicKey('lockedNftToken'),\n    u64('whitelistOwned'),\n]);\nexport function decode(data) {\n    return VESTING_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = VESTING_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    needsAssignment: {\n        authority: new PublicKey(Buffer.alloc(32)),\n        programId: new PublicKey(Buffer.alloc(32)),\n        identifier: new PublicKey(Buffer.alloc(32)),\n        nonce: 0,\n    },\n    claimed: false,\n    safe: new PublicKey(Buffer.alloc(32)),\n    beneficiary: new PublicKey(Buffer.alloc(32)),\n    balance: new BN(0),\n    startBalance: new BN(0),\n    startTs: new BN(0),\n    endTs: new BN(0),\n    periodCount: new BN(0),\n    lockedNftMint: new PublicKey(Buffer.alloc(32)),\n    lockedNftToken: new PublicKey(Buffer.alloc(32)),\n    whitelistOwned: new BN(0),\n}).length;\n//# sourceMappingURL=vesting.js.map"],"sourceRoot":""}