{"version":3,"sources":["../../src/layout.js","../../../../src/accounts/vesting.ts","../../../../src/accounts/safe.ts","../../../../src/meta-entity/instruction.ts","../../../../src/accounts/ring.ts","../../../../src/accounts/reward-event-q.ts","../../../src/transaction-instruction.ts","../../../../src/accounts/generation.ts","../../../src/index.ts","../../src/index.js","../../src/tokens_and_markets.ts","../../../src/schema.ts","../../../src/instructions.ts","../../src/instructions.js","../../src/queue.ts","../../src/fees.ts","../../../src/client.ts","../../../src/transactions.ts","../../../../src/accounts/entity.ts","../../../../src/accounts/member.ts","../../../../src/accounts/pending-withdrawal.ts","../../../../src/accounts/locked-vendor.ts","../../../../../src/meta-entity/accounts/metadata.ts","../../../../../src/meta-entity/accounts/mqueue.ts","../../src/market.ts","../../src/slab.ts","../../../src/provider.ts","../../../src/token.ts","../../../src/networks.ts","../../../src/simulate-transaction.ts","store/actions.ts","store/reducer.ts","store/index.ts","components/common/WalletProvider.tsx","components/common/BootstrapProvider.tsx","components/common/Notification.tsx","components/common/Header.tsx","skin/index.ts","components/common/Scroll.tsx","components/common/Messaging.tsx","components/common/Footer.tsx","components/common/Layout.tsx","components/common/OwnedTokenAccountsSelect.tsx","components/nodes/Entity.tsx","components/nodes/EntityGallery.tsx","components/Me.tsx","components/rewards/DropRewardDialog.tsx","components/rewards/Rewards.tsx","components/lockups/NewVesting.tsx","components/common/MyNode.tsx","components/lockups/VestingAccountCard.tsx","components/lockups/Vestings.tsx","components/common/VestingAccountsSelect.tsx","pages/MyNode.tsx","App.tsx","reportWebVitals.ts","index.tsx","../../src/token-instructions.js","../../../src/instruction.ts","../../../../src/meta-entity/transaction.ts","../../../../src/accounts/whitelist.ts","../../../../src/accounts/registrar.ts"],"names":["BNLayout","buffer_layout_1","Blob","b","pubkey","exports","layout_1","feeTier","member","transaction","this","u32","zeros","ActionType","BootstrapState","initialState","common","bootstrapTrigger","shutdownTrigger","isWalletConnected","walletProvider","bootstrapState","NeedsBootstrap","network","networks","devnet","ownedTokenAccounts","lockup","vestings","registry","entities","entityMetadata","Map","pendingWithdrawals","vendors","store","createStore","state","action","newState","type","CommonAppWillBootstrap","IsBootstrapping","CommonAppDidBootstrap","Bootstrapped","CommonWalletSetProvider","item","CommonWalletDidConnect","CommonWalletDidDisconnect","CommonSetNetwork","label","CommonTriggerBootstrap","CommonTriggerShutdown","CommonDidShutdown","s","CommonOwnedTokenAccountsSet","LockupSetVestings","vestingAccounts","LockupCreateVesting","unshift","vesting","LockupSetSafe","safe","RegistryCreateEntity","entity","RegistrySetEntities","RegistryUpdateEntity","map","e","publicKey","toString","RegistrySetMember","RegistrySetPools","pool","poolTokenMint","poolVault","megaPool","megaPoolTokenMint","megaPoolVaults","RegistrySetRegistrar","registrar","RegistrySetPendingWithdrawals","set","memberPublicKey","RegistryCreatePendingWithdrawal","oldPw","memberWithdrawals","has","get","pendingWithdrawal","RegistryUpdatePendingWithdrawal","allPendingWithdrawals","memberPendingWithdrawals","pw","RegistrySetMetadata","forEach","emd","account","RegistryCreateMetadata","entityPublicKey","metadata","RegistrySetRewardEventQueue","rewardEventQueue","RegistryCreateRewardVendor","vendor","useWallet","w","useContext","WalletContext","Error","React","createContext","WalletProvider","props","useSelector","useMemo","preflightCommitment","opts","connection","Connection","url","wallet","Wallet","provider","Provider","RegistryClient","setRetbuf","retbuf","retbufProgramId","lockupClient","LockupClient","programId","lockupProgramId","registryClient","registryProgramId","stakeProgramId","metaEntityProgramId","value","children","BootstrapProvider","dispatch","useDispatch","enqueueSnackbar","useSnackbar","bootstrap","useCallback","a","startSubscriptions","conn","accounts","rewardEventQueueConnect","on","fetchEntityAccounts","allEntities","entityAccounts","allMetadata","defaultEntity","filter","pop","defaultMetadata","push","fetchPoolData","sleep","assets","vaultAddress","v","idx","fetchRegistrar","fetchSafe","fetchOwnedTokenAccounts","token","getOwnedTokenAccounts","fetchVestingAccounts","allVestings","fetchMemberAccount","membersWithBeneficiary","members","length","pendingWithdrawalsForMember","variant","autoHideDuration","shutdown","disconnect","rewardEventQueueDisconnect","err","console","error","useEffect","catch","withTx","snack","beforeLabel","afterLabel","execTx","tx","closeSnackbar","ViewTransactionOnExplorerButton","signature","explorerClusterSuffix","urlSuffix","Button","color","component","target","rel","href","Header","isAppReady","AppBar","position","style","background","Toolbar","display","justifyContent","width","SerumLogoButton","BarButton","hrefClient","NetworkSelector","WalletConnectButton","UserSelector","history","useHistory","onClick","flexDirection","height","alt","src","Typography","fontSize","useState","anchorEl","setAnchorEl","handleClose","marginRight","currentTarget","marginLeft","Menu","open","Boolean","onClose","Object","keys","n","MenuItem","createStakeAccount","vaultAuthority","delegate","createMember","memberAcc","Select","displayEmpty","renderValue","overflow","onChange","undefined","IconButton","showDisconnect","connect","_skin","active","ready","notReady","inactive","deactivating","instance","Scroll","overflowY","flex","top","left","right","maxHeight","minHeight","Messages","messages","setMessages","message","setMessage","divRef","useRef","mqueue","mqueueConnect","chat","current","scrollIntoView","behavior","fetchMessages","sendMessage","from","ts","BN","Date","now","content","handleKeyPress","key","log","CircularProgress","textAlign","borderBottom","padding","fontWeight","name","paddingLeft","m","ref","marginTop","TextField","onKeyPress","size","marginBottom","Footer","chatDisplay","setChatDisplay","envDisplay","setEnvDisplay","isDisconnected","hasMember","zIndex","bottom","backgroundColor","borderTop","paddingRight","skin","borderTopLeftRadius","boxShadow","NetworkEnvironment","srm","msrm","authority","maxStakePerEntity","withdrawalTimelock","deactivationTimelock","vault","megaVault","poolProgramId","whitelist","Layout","RiskBar","DisconnectedSplash","useStyles","makeStyles","theme","root","spacing","classes","className","LinearProgress","OwnedTokenAccountsSelect","p","mint","ota","fromAccount","setFromAccount","fullWidth","pk","PublicKey","equals","amount","ownedTokenAccount","float","Entity","paddingTop","paddingBottom","leader","EntityActivityLabel","JoinButton","disableElevation","disableFocusRipple","disableRipple","StakeContent","Grid","container","BalanceGridItem","balances","sptAmount","sptMegaAmount","currentDeposit","currentMegaDeposit","generation","xs","Card","joinEntity","oldEntity","newEntity","switchEntity","memberAccount","updatedOldEntity","updatedNewEntity","EntityGallery","entityAddress","setEntityAddress","concat","pendingDeactivation","EntityDialog","NewButton","visibility","flexWrap","EntityCard","imageUrl","defaultUrl","borderRadius","about","noBubble","textStyle","ActivityLabel","text","tStyle","assign","showDialog","setShowDialog","CreateEntityDialog","Dialog","maxWidth","DialogContent","setName","setAbout","setImageUrl","isCreateEnabled","createEntity","entityAccount","newMetadata","DialogTitle","margin","DialogActions","then","disabled","Me","prices","PoolPrices","poolSharePrice","basket","quantities","megaPoolSharePrice","megaBasket","createPoolTokens","spt","stake","u64","updatedMember","updatedEntity","redeemPoolTokens","startStakeWithdrawal","pwAccount","createSrmPool","shares","redeemSrmPool","createMsrmPool","sptMega","redeemMsrmPool","MemberBalancesCard","PoolCard","title","assetsLabel","create","redeem","RedemptionList","rows","balance","lockedRows","deposit","megaDeposit","megaValue","poolRows","CardHeader","subheader","CardContent","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","overflowX","srmPoolAmount","setSrmPoolAmount","supply","FormControl","parseInt","PendingWithdrawalButton","payment","assetAmount","megaAssetAmount","startTs","toNumber","toLocaleString","endTs","endPendingWithdrawal","endStakeWithdrawal","updatedPendingWithdrawal","burned","PoolTabViewModel","LockedTabViewModel","cfg","roundUp","mul","add","sub","div","DropRewardDialog","Srm","poolTab","setPoolTab","Unlocked","isLockedTab","setIsLockedTab","isLocked","Locked","Tabs","_e","t","Tab","Msrm","DropLockedForm","DropUnlockedForm","lockedRewardAmount","setLockedRewardAmount","setEndTs","expiryTs","setExpiryTs","expiryReceiver","setExpiryReceiver","depositor","setDepositor","mintLabel","setMintLabel","setMint","periodCount","setPeriodCount","isSendEnabled","sendLockedRewards","notification","dropLockedReward","total","depositorMint","f","FormHelperText","InputLabel","id","InputLabelProps","shrink","InputProps","inputProps","min","d","getTime","placeholder","srmFromAccount","setSrmFromAccount","msrmFromAccount","setMsrmFromAccount","rewardAmount","setRewardAmount","rewardMegaAmount","setRewardMegaAmount","sendUnlockedRewards","dropPoolReward","srmDepositor","msrmDepositor","srmAmount","msrmAmount","poolSrmVault","poolMsrmVault","Rewards","lockedAlloc","lockedVendor","lockedRewardVendor","rewards","cursor","tailCursor","needsClaim","ownsPoolShares","cmp","notYetClaimed","rewardsCursor","isEligible","lastStakeTs","reward","reverse","claimBtnClickHandler","r","k","lockedRewardVendorAuthority","nonce","vendorSigner","claimLockedReward","vendorVault","ClaimButton","DropButton","Paper","List","RewardListItem","ListItem","ListItemText","primary","poolDrop","PoolDropReward","LockedReward","amountLabel","totals","fromLabel","button","secondary","setOpen","Collapse","in","timeout","unmountOnExit","LockedRewardDetails","poolTokenSupply","toLocaleDateString","NewVestingButton","NewVestingDialog","defaultEndDate","defaultEndTs","beneficiary","setBeneficiary","isValidBeneficiary","_","displayBeneficiaryError","timestamp","setTimestamp","amountStr","setAmountStr","isValidAmountStr","isNaN","displayAmountError","submitBtnEnabled","isLoading","setIsLoading","createVestingClickHandler","createVesting","depositAmount","vestingAccount","helperText","defaultValue","TabModel","VestingAccountCard","currencyLabel","tsOverflow","mod","shiftedStartTs","period","vestingDates","Array","formatDate","rewardOverflow","startBalance","rewardPerPeriod","cumulativeVesting","startLabel","endLabel","availableForWithdrawal","setAvailableForWithdrawal","withdrawalAccount","setWithdrawalAccount","withdrawEnabled","gtn","withdraw","tokenAccount","Link","toBase58","outstanding","data","labels","series","options","axisY","FixedScaleAxis","low","high","ticks","axisX","lineSmooth","Interpolation","step","whitelistOwned","grantor","getMonth","getDate","getFullYear","Vestings","Container","fixed","disablePadding","VestingAccountsSelect","availableAmount","Stake","tab","setTab","MyNodeBanner","Lockup","showDepositDialog","setShowDepositDialog","showWithdrawDialog","setShowWithdrawDialog","DepositDialog","WithdrawDialog","TransferDialog","contextText","onTransfer","coin","depositLocked","vaultOwner","newMember","withdrawLocked","srmMint","msrmMint","setAmount","setCoin","setFrom","setVesting","maxAmount","setMaxAmount","submitBtnDisabled","TransitionComponent","Transition","keepMounted","max","minWidth","forwardRef","Slide","direction","MyNodePage","App","createMuiTheme","palette","default","typography","fontFamily","join","overrides","CssBaseline","maxSnack","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","BufferLayout","u8","publicKeyLayout","LAYOUT","addVariant","struct","i"],"mappings":"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","file":"static/js/main.b7f22e72.chunk.js","sourcesContent":["\"use strict\";\n// @ts-nocheck\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setLayoutEncoder = exports.setLayoutDecoder = exports.accountFlagsLayout = exports.orderTypeLayout = exports.sideLayout = exports.VersionedLayout = exports.WideBits = exports.u128 = exports.u64 = exports.publicKeyLayout = exports.zeros = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass Zeros extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        const slice = super.decode(b, offset);\n        if (!slice.every((v) => v === 0)) {\n            throw new Error('nonzero padding bytes');\n        }\n        return slice;\n    }\n}\nfunction zeros(length) {\n    return new Zeros(length);\n}\nexports.zeros = zeros;\nclass PublicKeyLayout extends buffer_layout_1.Blob {\n    constructor(property) {\n        super(32, property);\n    }\n    decode(b, offset) {\n        return new web3_js_1.PublicKey(super.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toBuffer(), b, offset);\n    }\n}\nfunction publicKeyLayout(property) {\n    return new PublicKeyLayout(property);\n}\nexports.publicKeyLayout = publicKeyLayout;\nclass BNLayout extends buffer_layout_1.Blob {\n    decode(b, offset) {\n        return new bn_js_1.default(super.decode(b, offset), 10, 'le');\n    }\n    encode(src, b, offset) {\n        return super.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, property);\n}\nexports.u64 = u64;\nfunction u128(property) {\n    return new BNLayout(16, property);\n}\nexports.u128 = u128;\nclass WideBits extends buffer_layout_1.Layout {\n    constructor(property) {\n        super(8, property);\n        this._lower = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n        this._upper = buffer_layout_1.bits(buffer_layout_1.u32(), false);\n    }\n    addBoolean(property) {\n        if (this._lower.fields.length < 32) {\n            this._lower.addBoolean(property);\n        }\n        else {\n            this._upper.addBoolean(property);\n        }\n    }\n    decode(b, offset = 0) {\n        const lowerDecoded = this._lower.decode(b, offset);\n        const upperDecoded = this._upper.decode(b, offset + this._lower.span);\n        return { ...lowerDecoded, ...upperDecoded };\n    }\n    encode(src, b, offset = 0) {\n        return (this._lower.encode(src, b, offset) +\n            this._upper.encode(src, b, offset + this._lower.span));\n    }\n}\nexports.WideBits = WideBits;\nclass VersionedLayout extends buffer_layout_1.Layout {\n    constructor(version, inner, property) {\n        super(inner.span > 0 ? inner.span + 1 : inner.span, property);\n        this.version = version;\n        this.inner = inner;\n    }\n    decode(b, offset = 0) {\n        // if (b.readUInt8(offset) !== this._version) {\n        //   throw new Error('invalid version');\n        // }\n        return this.inner.decode(b, offset + 1);\n    }\n    encode(src, b, offset = 0) {\n        b.writeUInt8(this.version, offset);\n        return 1 + this.inner.encode(src, b, offset + 1);\n    }\n    getSpan(b, offset = 0) {\n        return 1 + this.inner.getSpan(b, offset + 1);\n    }\n}\nexports.VersionedLayout = VersionedLayout;\nclass EnumLayout extends buffer_layout_1.UInt {\n    constructor(values, span, property) {\n        super(span, property);\n        this.values = values;\n    }\n    encode(src, b, offset) {\n        if (this.values[src] !== undefined) {\n            return super.encode(this.values[src], b, offset);\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n    decode(b, offset) {\n        const decodedValue = super.decode(b, offset);\n        const entry = Object.entries(this.values).find(([, value]) => value === decodedValue);\n        if (entry) {\n            return entry[0];\n        }\n        throw new Error('Invalid ' + this.property);\n    }\n}\nfunction sideLayout(property) {\n    return new EnumLayout({ buy: 0, sell: 1 }, 4, property);\n}\nexports.sideLayout = sideLayout;\nfunction orderTypeLayout(property) {\n    return new EnumLayout({ limit: 0, ioc: 1, postOnly: 2 }, 4, property);\n}\nexports.orderTypeLayout = orderTypeLayout;\nconst ACCOUNT_FLAGS_LAYOUT = new WideBits();\nACCOUNT_FLAGS_LAYOUT.addBoolean('initialized');\nACCOUNT_FLAGS_LAYOUT.addBoolean('market');\nACCOUNT_FLAGS_LAYOUT.addBoolean('openOrders');\nACCOUNT_FLAGS_LAYOUT.addBoolean('requestQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('eventQueue');\nACCOUNT_FLAGS_LAYOUT.addBoolean('bids');\nACCOUNT_FLAGS_LAYOUT.addBoolean('asks');\nfunction accountFlagsLayout(property = 'accountFlags') {\n    return ACCOUNT_FLAGS_LAYOUT.replicate(property);\n}\nexports.accountFlagsLayout = accountFlagsLayout;\nfunction setLayoutDecoder(layout, decoder) {\n    const originalDecode = layout.decode;\n    layout.decode = function decode(b, offset = 0) {\n        return decoder(originalDecode.call(this, b, offset));\n    };\n}\nexports.setLayoutDecoder = setLayoutDecoder;\nfunction setLayoutEncoder(layout, encoder) {\n    const originalEncode = layout.encode;\n    layout.encode = function encode(src, b, offset) {\n        return originalEncode.call(this, encoder(src), b, offset);\n    };\n    return layout;\n}\nexports.setLayoutEncoder = setLayoutEncoder;\n//# sourceMappingURL=layout.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nexport const VESTING_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('safe'),\n    publicKey('beneficiary'),\n    publicKey('mint'),\n    publicKey('vault'),\n    publicKey('grantor'),\n    u64('outstanding'),\n    u64('startBalance'),\n    i64('startTs'),\n    i64('endTs'),\n    u64('periodCount'),\n    u64('whitelistOwned'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    return VESTING_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = VESTING_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultVesting() {\n    return {\n        initialized: false,\n        safe: new PublicKey(Buffer.alloc(32)),\n        beneficiary: new PublicKey(Buffer.alloc(32)),\n        mint: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        grantor: new PublicKey(Buffer.alloc(32)),\n        outstanding: new BN(0),\n        startBalance: new BN(0),\n        startTs: new BN(0),\n        endTs: new BN(0),\n        periodCount: new BN(0),\n        whitelistOwned: new BN(0),\n        nonce: 0,\n    };\n}\nexport const SIZE = encode(defaultVesting()).length;\n//# sourceMappingURL=vesting.js.map","import { struct } from 'buffer-layout';\nimport { bool, publicKey } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport const SAFE_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('authority'),\n    publicKey('whitelist'),\n]);\nexport function decode(data) {\n    return SAFE_LAYOUT.decode(data);\n}\nexport function encode(s) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = SAFE_LAYOUT.encode(s, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    authority: new PublicKey(Buffer.alloc(32)),\n    whitelist: new PublicKey(Buffer.alloc(32)),\n}).length;\n//# sourceMappingURL=safe.js.map","import { struct } from 'buffer-layout';\nimport { option, publicKey, str, rustEnum, vecU8, } from '@project-serum/borsh';\nconst META_ENTITY_INSTRUCTION_LAYOUT = rustEnum([\n    struct([\n        publicKey('entity'),\n        publicKey('authority'),\n        str('name'),\n        str('about'),\n        str('imageUrl'),\n        publicKey('chat'),\n    ], 'initialize'),\n    struct([\n        option(str(), 'name'),\n        option(str(), 'about'),\n        option(publicKey(), 'chat'),\n    ], 'updateMetaEntity'),\n    struct([vecU8('data')], 'sendMessage'),\n]);\nexport function decode(data) {\n    return META_ENTITY_INSTRUCTION_LAYOUT.decode(data);\n}\nexport function encode(i) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = META_ENTITY_INSTRUCTION_LAYOUT.encode(i, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=instruction.js.map","import { u32 } from 'buffer-layout';\nconst HEAD_START = 32;\nconst TAIL_START = 36;\nexport class Ring {\n    constructor(data, decoder, capacity, messageSize) {\n        this.data = data;\n        this.decoder = decoder;\n        this.capacity = capacity;\n        this.messageSize = messageSize;\n    }\n    bufferSize() {\n        return this.capacity * this.messageSize + Ring.MESSAGE_START;\n    }\n    messages() {\n        let messages = [];\n        let idx = this.tail();\n        let head = this.head();\n        while (idx % this.capacity !== head) {\n            messages.push(this.messageAt(idx));\n            idx += 1;\n        }\n        return messages;\n    }\n    messageAt(idx) {\n        let start = idx * this.messageSize + Ring.MESSAGE_START;\n        let end = start + this.messageSize;\n        let bytes = this.data.slice(start, end);\n        return this.decoder.decode(bytes);\n    }\n    head() {\n        return this.headCursor() % this.capacity;\n    }\n    headCursor() {\n        let bytes = this.data.slice(HEAD_START, HEAD_START + 4);\n        return u32().decode(bytes);\n    }\n    tail() {\n        return this.tailCursor() % this.capacity;\n    }\n    tailCursor() {\n        let bytes = this.data.slice(TAIL_START, TAIL_START + 4);\n        return u32().decode(bytes);\n    }\n}\nRing.MESSAGE_START = 40;\n//# sourceMappingURL=ring.js.map","import { struct } from 'buffer-layout';\nimport { publicKey, u64, rustEnum, vec } from '@project-serum/borsh';\nimport { Ring } from './ring';\nconst CAPACITY = 14598;\nconst MESSAGE_SIZE = 137;\nexport class RewardEventQueue extends Ring {\n    constructor(data) {\n        super(data, new RewardEventDecoder(), CAPACITY, MESSAGE_SIZE);\n        if (data.length != this.bufferSize()) {\n            throw new Error(`expected data length ${this.bufferSize()} got ${data.length}`);\n        }\n    }\n    static accountSize() {\n        return CAPACITY * MESSAGE_SIZE + Ring.MESSAGE_START;\n    }\n}\nclass RewardEventDecoder {\n    decode(data) {\n        return REWARD_EVENT_LAYOUT.decode(data);\n    }\n}\nconst REWARD_EVENT_LAYOUT = rustEnum([\n    struct([publicKey('from'), vec(u64(), 'totals'), publicKey('pool')], 'poolDrop'),\n    struct([\n        publicKey('from'),\n        u64('total'),\n        publicKey('pool'),\n        publicKey('lockedVendor'),\n        publicKey('mint'),\n    ], 'lockedAlloc'),\n]);\n//# sourceMappingURL=reward-event-q.js.map","import { PublicKey, SystemProgram, TransactionInstruction, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { createTokenAccountInstrs } from '@project-serum/common';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { SIZE as VESTING_SIZE } from './accounts/vesting';\nimport * as instruction from './instruction';\nexport async function createVesting(provider, programId, safe, vesting, vault, mint, depositor, depositorAuthorityPubkey, beneficiary, endTs, periodCount, depositAmount) {\n    let { nonce, ixs } = await allocVestingIxs(provider, programId, safe, vesting, vault, mint, beneficiary);\n    return [\n        ...ixs,\n        // Create Vesting.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: vesting, isWritable: true, isSigner: false },\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: safe, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId,\n            data: instruction.encode({\n                createVesting: {\n                    beneficiary,\n                    endTs,\n                    periodCount,\n                    depositAmount,\n                    nonce,\n                },\n            }),\n        }),\n    ];\n}\nexport async function allocVestingIxs(provider, programId, safe, vesting, vault, mint, beneficiary) {\n    const [vaultAuthority, nonce] = await PublicKey.findProgramAddress([safe.toBuffer(), beneficiary.toBuffer()], programId);\n    const createVaultInstructions = await createTokenAccountInstrs(provider, vault, mint, vaultAuthority);\n    return {\n        nonce,\n        ixs: [\n            ...createVaultInstructions,\n            // Allocate account.\n            SystemProgram.createAccount({\n                fromPubkey: provider.wallet.publicKey,\n                newAccountPubkey: vesting,\n                space: VESTING_SIZE,\n                lamports: await provider.connection.getMinimumBalanceForRentExemption(VESTING_SIZE),\n                programId,\n            }),\n        ],\n    };\n}\n//# sourceMappingURL=transaction-instruction.js.map","import { struct } from 'buffer-layout';\nimport { Basket } from '@project-serum/pool';\nimport { bool, publicKey, u64 as borshU64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nimport BN from 'bn.js';\nexport const POOL_PRICES_LAYOUT = struct([\n    Basket.replicate('basket'),\n    Basket.replicate('megaBasket'),\n]);\nconst GENERATION_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('entity'),\n    borshU64('generation'),\n    POOL_PRICES_LAYOUT.replicate('lastActivePrices'),\n]);\nexport function decode(data) {\n    return GENERATION_LAYOUT.decode(data);\n}\nexport function encode(g) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = GENERATION_LAYOUT.encode(g, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultPoolPrices() {\n    return {\n        basket: {\n            quantities: [new BN(0)],\n        },\n        megaBasket: {\n            quantities: [new BN(0), new BN(0)],\n        },\n    };\n}\nexport function defaultGeneration() {\n    return {\n        initialized: false,\n        entity: new PublicKey(Buffer.alloc(32)),\n        generation: new u64(0),\n        lastActivePrices: {\n            basket: {\n                quantities: [new u64(0)],\n            },\n            megaBasket: {\n                quantities: [new u64(0), new u64(0)],\n            },\n        },\n    };\n}\nexport const SIZE = encode(defaultGeneration()).length;\n//# sourceMappingURL=generation.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i64 = exports.u64 = exports.struct = exports.u32 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = buffer_layout_1.blob(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, 'le');\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout_1.blob(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout_1.u8();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout(buffer_layout_1.u8(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error('Invalid bool: ' + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(elementLayout, buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = buffer_layout_1.struct([\n        u64('tag'),\n        layout.replicate('data'),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error('Invalid tag, expected: ' +\n                tag.toString('hex') +\n                ', got: ' +\n                receivedTag.toString('hex'));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, data => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.blob(buffer_layout_1.offset(length, -length.span), 'data'),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, data => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), data => data.toString('utf-8'), s => Buffer.from(s, 'utf-8'), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property) {\n    const unionLayout = buffer_layout_1.union(buffer_layout_1.u8(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenInstructions = exports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeRequestQueue = exports.decodeEventQueue = exports.getLayoutVersion = exports.MARKETS = exports.TOKEN_MINTS = exports.supportsSrmFeeDiscounts = exports.getFeeRates = exports.getFeeTier = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = exports.decodeInstruction = exports.DexInstructions = exports.OpenOrders = exports.Orderbook = exports.Market = void 0;\nvar market_1 = require(\"./market\");\nObject.defineProperty(exports, \"Market\", { enumerable: true, get: function () { return market_1.Market; } });\nObject.defineProperty(exports, \"Orderbook\", { enumerable: true, get: function () { return market_1.Orderbook; } });\nObject.defineProperty(exports, \"OpenOrders\", { enumerable: true, get: function () { return market_1.OpenOrders; } });\nvar instructions_1 = require(\"./instructions\");\nObject.defineProperty(exports, \"DexInstructions\", { enumerable: true, get: function () { return instructions_1.DexInstructions; } });\nObject.defineProperty(exports, \"decodeInstruction\", { enumerable: true, get: function () { return instructions_1.decodeInstruction; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_BASE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_BASE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"SETTLE_FUNDS_QUOTE_WALLET_INDEX\", { enumerable: true, get: function () { return instructions_1.SETTLE_FUNDS_QUOTE_WALLET_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OPEN_ORDERS_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OPEN_ORDERS_INDEX; } });\nObject.defineProperty(exports, \"NEW_ORDER_OWNER_INDEX\", { enumerable: true, get: function () { return instructions_1.NEW_ORDER_OWNER_INDEX; } });\nvar fees_1 = require(\"./fees\");\nObject.defineProperty(exports, \"getFeeTier\", { enumerable: true, get: function () { return fees_1.getFeeTier; } });\nObject.defineProperty(exports, \"getFeeRates\", { enumerable: true, get: function () { return fees_1.getFeeRates; } });\nObject.defineProperty(exports, \"supportsSrmFeeDiscounts\", { enumerable: true, get: function () { return fees_1.supportsSrmFeeDiscounts; } });\nvar tokens_and_markets_1 = require(\"./tokens_and_markets\");\nObject.defineProperty(exports, \"TOKEN_MINTS\", { enumerable: true, get: function () { return tokens_and_markets_1.TOKEN_MINTS; } });\nObject.defineProperty(exports, \"MARKETS\", { enumerable: true, get: function () { return tokens_and_markets_1.MARKETS; } });\nObject.defineProperty(exports, \"getLayoutVersion\", { enumerable: true, get: function () { return tokens_and_markets_1.getLayoutVersion; } });\nvar queue_1 = require(\"./queue\");\nObject.defineProperty(exports, \"decodeEventQueue\", { enumerable: true, get: function () { return queue_1.decodeEventQueue; } });\nObject.defineProperty(exports, \"decodeRequestQueue\", { enumerable: true, get: function () { return queue_1.decodeRequestQueue; } });\nObject.defineProperty(exports, \"REQUEST_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.REQUEST_QUEUE_LAYOUT; } });\nObject.defineProperty(exports, \"EVENT_QUEUE_LAYOUT\", { enumerable: true, get: function () { return queue_1.EVENT_QUEUE_LAYOUT; } });\nexports.TokenInstructions = __importStar(require(\"./token-instructions\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MARKETS = exports.TOKEN_MINTS = exports.getLayoutVersion = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst markets_json_1 = __importDefault(require(\"./markets.json\"));\nconst token_mints_json_1 = __importDefault(require(\"./token-mints.json\"));\nfunction getLayoutVersion(programId) {\n    if (programId.equals(new web3_js_1.PublicKey('4ckmDgGdxQoPDLUkDT3vHgSAkzA3QRdNq5ywwY4sUSJn')) ||\n        programId.equals(new web3_js_1.PublicKey('BJ3jrUzddfuSrZHXSCxMUUQsjKEyLmuuyZebkcaFp2fg'))) {\n        return 1;\n    }\n    return 2;\n}\nexports.getLayoutVersion = getLayoutVersion;\nexports.TOKEN_MINTS = token_mints_json_1.default.map((mint) => {\n    return {\n        address: new web3_js_1.PublicKey(mint.address),\n        name: mint.name,\n    };\n});\nexports.MARKETS = markets_json_1.default.map((market) => {\n    return {\n        address: new web3_js_1.PublicKey(market.address),\n        name: market.name,\n        programId: new web3_js_1.PublicKey(market.programId),\n        deprecated: market.deprecated,\n    };\n});\n//# sourceMappingURL=tokens_and_markets.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePoolRequest = exports.encodePoolRequest = exports.encodePoolState = exports.decodePoolState = exports.isPoolState = exports.PoolRequest = exports.POOL_REQUEST_TAG = exports.InitializePoolRequest = exports.PoolAction = exports.Basket = exports.PoolState = exports.POOL_STATE_TAG = exports.ParamDesc = exports.AssetInfo = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst borsh_1 = require(\"@project-serum/borsh\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nexports.AssetInfo = buffer_layout_1.struct([\n    borsh_1.publicKey('mint'),\n    borsh_1.publicKey('vaultAddress'),\n]);\nexports.ParamDesc = buffer_layout_1.struct([\n    borsh_1.publicKey('address'),\n    borsh_1.bool('writable'),\n]);\nexports.POOL_STATE_TAG = new bn_js_1.default('16a7874c7fb2301b', 'hex');\nexports.PoolState = borsh_1.tagged(exports.POOL_STATE_TAG, buffer_layout_1.struct([\n    borsh_1.publicKey('poolTokenMint'),\n    borsh_1.vec(exports.AssetInfo, 'assets'),\n    borsh_1.publicKey('vaultSigner'),\n    buffer_layout_1.u8('vaultSignerNonce'),\n    borsh_1.vec(exports.ParamDesc, 'accountParams'),\n    borsh_1.str('name'),\n    borsh_1.option(borsh_1.publicKey(), 'adminKey'),\n    borsh_1.vecU8('customState'),\n]));\nexports.Basket = buffer_layout_1.struct([borsh_1.vec(borsh_1.i64(), 'quantities')]);\nexports.PoolAction = borsh_1.rustEnum([\n    borsh_1.u64('create'),\n    borsh_1.u64('redeem'),\n    exports.Basket.replicate('swap'),\n]);\nexports.InitializePoolRequest = buffer_layout_1.struct([\n    buffer_layout_1.u8('vaultSignerNonce'),\n    buffer_layout_1.u8('assetsLength'),\n    borsh_1.str('poolName'),\n    borsh_1.vecU8('customData'),\n]);\nexports.POOL_REQUEST_TAG = new bn_js_1.default('220a6cbdcd1cc4cf', 'hex');\nexports.PoolRequest = borsh_1.tagged(exports.POOL_REQUEST_TAG, borsh_1.rustEnum([\n    exports.InitializePoolRequest.replicate('initialize'),\n    exports.PoolAction.replicate('getBasket'),\n    exports.PoolAction.replicate('execute'),\n]));\nfunction isPoolState(data) {\n    return data.slice(0, 8).equals(exports.POOL_STATE_TAG.toBuffer('le'));\n}\nexports.isPoolState = isPoolState;\nfunction decodePoolState(data) {\n    return exports.PoolState.decode(data);\n}\nexports.decodePoolState = decodePoolState;\nfunction encodePoolState(state) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolState.encode(state, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolState = encodePoolState;\nfunction encodePoolRequest(poolRequest) {\n    const buffer = Buffer.alloc(1000);\n    const len = exports.PoolRequest.encode(poolRequest, buffer);\n    return buffer.slice(0, len);\n}\nexports.encodePoolRequest = encodePoolRequest;\nfunction decodePoolRequest(data) {\n    return exports.PoolRequest.decode(data);\n}\nexports.decodePoolRequest = decodePoolRequest;\n//# sourceMappingURL=schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolInstructions = exports.RETBUF_PROGRAM_ID = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst schema_1 = require(\"./schema\");\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nexports.RETBUF_PROGRAM_ID = new web3_js_1.PublicKey(\n// TODO\n'Fb5VbxAy7Q6HKjWrggEvEtifBfM7T4HukisF1yyVRN4y');\nclass PoolInstructions {\n    /**\n     * Instruction to initialize a pool.\n     *\n     * @param poolProgram Program ID of the pool program.\n     * @param poolAccount Newly-created account to hold the pool state. Must be\n     * owned by the pool program.\n     * @param poolTokenMint spl-token mint address for the pool token.\n     * @param poolName User-friendly name for the pool.\n     * @param vaults spl-token account for each of the assets in the pool.\n     * @param vaultSigner Mint authority for `poolTokenMint` and owner of\n     * `poolTokenMint`.\n     * @param vaultSignerNonce Nonce used to generate `vaultSigner`.\n     * @param additionalAccounts Any custom pool-specific accounts needed to\n     * initialize the pool.\n     * @param customData Any custom pool-specific data needed to initialize the pool\n     */\n    static initialize(poolProgram, poolAccount, poolTokenMint, poolName, vaults, vaultSigner, vaultSignerNonce, additionalAccounts, customData) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: poolAccount, isSigner: false, isWritable: true },\n                { pubkey: poolTokenMint, isSigner: false, isWritable: true },\n                ...vaults.map(vaultAddress => ({\n                    pubkey: vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: vaultSigner, isSigner: false, isWritable: false },\n                {\n                    pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...(additionalAccounts !== null && additionalAccounts !== void 0 ? additionalAccounts : []),\n            ],\n            programId: poolProgram,\n            data: schema_1.encodePoolRequest({\n                initialize: {\n                    vaultSignerNonce,\n                    assetsLength: vaults.length,\n                    poolName,\n                    customData: customData !== null && customData !== void 0 ? customData : Buffer.alloc(0),\n                },\n            }),\n        });\n    }\n    /**\n     * Instruction to get the expected basket for a {@link PoolAction}.\n     *\n     * For creations, the basket is the quantity of each asset\n     * that need to be sent to the pool to process the creation.  For redemptions\n     * and swaps, the basket is the quantity of each asset that will be\n     * transferred from the pool to the user after the redemption or swap.\n     *\n     * Negative quantities will cause tokens to be transferred in the opposite\n     * direction.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param retbufAccount Account to which the basket will be written. Must be\n     * owned by the retbuf program.\n     */\n    static getBasket(pool, action, retbufAccount) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: false },\n                {\n                    pubkey: pool.state.poolTokenMint,\n                    isSigner: false,\n                    isWritable: false,\n                },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: retbufAccount, isSigner: false, isWritable: true },\n                { pubkey: exports.RETBUF_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: false,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ getBasket: action }),\n        });\n    }\n    /**\n     * Instruction to execute a creation, redemption, or swap.\n     *\n     * @param pool\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     */\n    static execute(pool, action, user) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: pool.address, isSigner: false, isWritable: true },\n                { pubkey: pool.state.poolTokenMint, isSigner: false, isWritable: true },\n                ...pool.state.assets.map(assetInfo => ({\n                    pubkey: assetInfo.vaultAddress,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: pool.state.vaultSigner, isSigner: false, isWritable: false },\n                { pubkey: user.poolTokenAccount, isSigner: false, isWritable: true },\n                ...user.assetAccounts.map(address => ({\n                    pubkey: address,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: user.owner, isSigner: true, isWritable: false },\n                { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n                ...pool.state.accountParams.map(paramInfo => ({\n                    pubkey: paramInfo.address,\n                    isSigner: false,\n                    isWritable: paramInfo.writable,\n                })),\n            ],\n            programId: pool.program,\n            data: schema_1.encodePoolRequest({ execute: action }),\n        });\n    }\n}\nexports.PoolInstructions = PoolInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DexInstructions = exports.decodeInstruction = exports.encodeInstruction = exports.INSTRUCTION_LAYOUT = exports.NEW_ORDER_OWNER_INDEX = exports.NEW_ORDER_OPEN_ORDERS_INDEX = exports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = exports.SETTLE_FUNDS_BASE_WALLET_INDEX = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst token_instructions_1 = require(\"./token-instructions\");\n// NOTE: Update these if the position of arguments for the settleFunds instruction changes\nexports.SETTLE_FUNDS_BASE_WALLET_INDEX = 5;\nexports.SETTLE_FUNDS_QUOTE_WALLET_INDEX = 6;\n// NOTE: Update these if the position of arguments for the newOrder instruction changes\nexports.NEW_ORDER_OPEN_ORDERS_INDEX = 1;\nexports.NEW_ORDER_OWNER_INDEX = 4;\nexports.INSTRUCTION_LAYOUT = new layout_1.VersionedLayout(0, buffer_layout_1.union(buffer_layout_1.u32('instruction')));\nexports.INSTRUCTION_LAYOUT.inner.addVariant(0, buffer_layout_1.struct([\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    buffer_layout_1.u16('feeRateBps'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.u64('quoteDustThreshold'),\n]), 'initializeMarket');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(1, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u64('limitPrice'),\n    layout_1.u64('maxQuantity'),\n    layout_1.orderTypeLayout('orderType'),\n    layout_1.u64('clientId'),\n]), 'newOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(2, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'matchOrders');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u16('limit')]), 'consumeEvents');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(4, buffer_layout_1.struct([\n    layout_1.sideLayout('side'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    buffer_layout_1.u8('openOrdersSlot'),\n]), 'cancelOrder');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(5, buffer_layout_1.struct([]), 'settleFunds');\nexports.INSTRUCTION_LAYOUT.inner.addVariant(6, buffer_layout_1.struct([layout_1.u64('clientId')]), 'cancelOrderByClientId');\nfunction encodeInstruction(instruction) {\n    const b = Buffer.alloc(100);\n    return b.slice(0, exports.INSTRUCTION_LAYOUT.encode(instruction, b));\n}\nexports.encodeInstruction = encodeInstruction;\nfunction decodeInstruction(message) {\n    return exports.INSTRUCTION_LAYOUT.decode(message);\n}\nexports.decodeInstruction = decodeInstruction;\nclass DexInstructions {\n    static initializeMarket({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, baseMint, quoteMint, baseLotSize, quoteLotSize, feeRateBps, vaultSignerNonce, quoteDustThreshold, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n                { pubkey: baseMint, isSigner: false, isWritable: false },\n                { pubkey: quoteMint, isSigner: false, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                initializeMarket: {\n                    baseLotSize,\n                    quoteLotSize,\n                    feeRateBps,\n                    vaultSignerNonce,\n                    quoteDustThreshold,\n                },\n            }),\n        });\n    }\n    static newOrder({ market, openOrders, payer, owner, requestQueue, baseVault, quoteVault, side, limitPrice, maxQuantity, orderType, clientId, programId, feeDiscountPubkey = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: requestQueue, isSigner: false, isWritable: true },\n            { pubkey: payer, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n        ];\n        if (feeDiscountPubkey) {\n            keys.push({\n                pubkey: feeDiscountPubkey,\n                isSigner: false,\n                isWritable: false,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                newOrder: clientId\n                    ? { side, limitPrice, maxQuantity, orderType, clientId }\n                    : { side, limitPrice, maxQuantity, orderType },\n            }),\n        });\n    }\n    static matchOrders({ market, requestQueue, eventQueue, bids, asks, baseVault, quoteVault, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n                { pubkey: bids, isSigner: false, isWritable: true },\n                { pubkey: asks, isSigner: false, isWritable: true },\n                { pubkey: baseVault, isSigner: false, isWritable: true },\n                { pubkey: quoteVault, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ matchOrders: { limit } }),\n        });\n    }\n    static consumeEvents({ market, eventQueue, openOrdersAccounts, limit, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                ...openOrdersAccounts.map((account) => ({\n                    pubkey: account,\n                    isSigner: false,\n                    isWritable: true,\n                })),\n                { pubkey: market, isSigner: false, isWritable: true },\n                { pubkey: eventQueue, isSigner: false, isWritable: true },\n            ],\n            programId,\n            data: encodeInstruction({ consumeEvents: { limit } }),\n        });\n    }\n    static cancelOrder({ market, openOrders, owner, requestQueue, side, orderId, openOrdersSlot, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrder: { side, orderId, openOrders, openOrdersSlot },\n            }),\n        });\n    }\n    static cancelOrderByClientId({ market, openOrders, owner, requestQueue, clientId, programId, }) {\n        return new web3_js_1.TransactionInstruction({\n            keys: [\n                { pubkey: market, isSigner: false, isWritable: false },\n                { pubkey: openOrders, isSigner: false, isWritable: true },\n                { pubkey: requestQueue, isSigner: false, isWritable: true },\n                { pubkey: owner, isSigner: true, isWritable: false },\n            ],\n            programId,\n            data: encodeInstruction({\n                cancelOrderByClientId: { clientId },\n            }),\n        });\n    }\n    static settleFunds({ market, openOrders, owner, baseVault, quoteVault, baseWallet, quoteWallet, vaultSigner, programId, referrerQuoteWallet = null, }) {\n        const keys = [\n            { pubkey: market, isSigner: false, isWritable: true },\n            { pubkey: openOrders, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner: true, isWritable: false },\n            { pubkey: baseVault, isSigner: false, isWritable: true },\n            { pubkey: quoteVault, isSigner: false, isWritable: true },\n            { pubkey: baseWallet, isSigner: false, isWritable: true },\n            { pubkey: quoteWallet, isSigner: false, isWritable: true },\n            { pubkey: vaultSigner, isSigner: false, isWritable: false },\n            { pubkey: token_instructions_1.TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n        ];\n        if (referrerQuoteWallet) {\n            keys.push({\n                pubkey: referrerQuoteWallet,\n                isSigner: false,\n                isWritable: true,\n            });\n        }\n        return new web3_js_1.TransactionInstruction({\n            keys,\n            programId,\n            data: encodeInstruction({\n                settleFunds: {},\n            }),\n        });\n    }\n}\nexports.DexInstructions = DexInstructions;\n//# sourceMappingURL=instructions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENT_QUEUE_LAYOUT = exports.REQUEST_QUEUE_LAYOUT = exports.decodeEventQueue = exports.decodeRequestQueue = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst REQUEST_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('nextSeqNum'),\n    layout_1.zeros(4),\n]);\nconst REQUEST_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'requestFlags');\nREQUEST_FLAGS.addBoolean('newOrder');\nREQUEST_FLAGS.addBoolean('cancelOrder');\nREQUEST_FLAGS.addBoolean('bid');\nREQUEST_FLAGS.addBoolean('postOnly');\nREQUEST_FLAGS.addBoolean('ioc');\nconst REQUEST = buffer_layout_1.struct([\n    REQUEST_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('maxBaseSizeOrCancelId'),\n    layout_1.u64('nativeQuoteQuantityLocked'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nconst EVENT_QUEUE_HEADER = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    buffer_layout_1.u32('head'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('count'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('seqNum'),\n    layout_1.zeros(4),\n]);\nconst EVENT_FLAGS = buffer_layout_1.bits(buffer_layout_1.u8(), false, 'eventFlags');\nEVENT_FLAGS.addBoolean('fill');\nEVENT_FLAGS.addBoolean('out');\nEVENT_FLAGS.addBoolean('bid');\nEVENT_FLAGS.addBoolean('maker');\nconst EVENT = buffer_layout_1.struct([\n    EVENT_FLAGS,\n    buffer_layout_1.u8('openOrdersSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(5),\n    layout_1.u64('nativeQuantityReleased'),\n    layout_1.u64('nativeQuantityPaid'),\n    layout_1.u64('nativeFeeOrRebate'),\n    layout_1.u128('orderId'),\n    layout_1.publicKeyLayout('openOrders'),\n    layout_1.u64('clientOrderId'),\n]);\nfunction decodeQueue(headerLayout, nodeLayout, buffer, history) {\n    const header = headerLayout.decode(buffer);\n    const allocLen = Math.floor((buffer.length - headerLayout.span) / nodeLayout.span);\n    const nodes = [];\n    if (history) {\n        for (let i = 0; i < Math.min(history, allocLen); ++i) {\n            const nodeIndex = (header.head + header.count + allocLen - 1 - i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    else {\n        for (let i = 0; i < header.count; ++i) {\n            const nodeIndex = (header.head + i) % allocLen;\n            nodes.push(nodeLayout.decode(buffer, headerLayout.span + nodeIndex * nodeLayout.span));\n        }\n    }\n    return { header, nodes };\n}\nfunction decodeRequestQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(REQUEST_QUEUE_HEADER, REQUEST, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.requestQueue) {\n        throw new Error('Invalid requests queue');\n    }\n    return nodes;\n}\nexports.decodeRequestQueue = decodeRequestQueue;\nfunction decodeEventQueue(buffer, history) {\n    const { header, nodes } = decodeQueue(EVENT_QUEUE_HEADER, EVENT, buffer, history);\n    if (!header.accountFlags.initialized || !header.accountFlags.eventQueue) {\n        throw new Error('Invalid events queue');\n    }\n    return nodes;\n}\nexports.decodeEventQueue = decodeEventQueue;\nexports.REQUEST_QUEUE_LAYOUT = {\n    HEADER: REQUEST_QUEUE_HEADER,\n    NODE: REQUEST,\n};\nexports.EVENT_QUEUE_LAYOUT = {\n    HEADER: EVENT_QUEUE_HEADER,\n    NODE: EVENT,\n};\n//# sourceMappingURL=queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeeTier = exports.getFeeRates = exports.supportsSrmFeeDiscounts = void 0;\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nfunction supportsSrmFeeDiscounts(programId) {\n    return tokens_and_markets_1.getLayoutVersion(programId) > 1;\n}\nexports.supportsSrmFeeDiscounts = supportsSrmFeeDiscounts;\nfunction getFeeRates(feeTier) {\n    if (feeTier === 1) {\n        // SRM2\n        return { taker: 0.002, maker: -0.0003 };\n    }\n    else if (feeTier === 2) {\n        // SRM3\n        return { taker: 0.0018, maker: -0.0003 };\n    }\n    else if (feeTier === 3) {\n        // SRM4\n        return { taker: 0.0016, maker: -0.0003 };\n    }\n    else if (feeTier === 4) {\n        // SRM5\n        return { taker: 0.0014, maker: -0.0003 };\n    }\n    else if (feeTier === 5) {\n        // SRM6\n        return { taker: 0.0012, maker: -0.0003 };\n    }\n    else if (feeTier === 6) {\n        // MSRM\n        return { taker: 0.001, maker: -0.0005 };\n    }\n    // Base\n    return { taker: 0.0022, maker: -0.0003 };\n}\nexports.getFeeRates = getFeeRates;\nfunction getFeeTier(msrmBalance, srmBalance) {\n    if (msrmBalance >= 1) {\n        return 6;\n    }\n    else if (srmBalance >= 1000000) {\n        return 5;\n    }\n    else if (srmBalance >= 100000) {\n        return 4;\n    }\n    else if (srmBalance >= 10000) {\n        return 3;\n    }\n    else if (srmBalance >= 1000) {\n        return 2;\n    }\n    else if (srmBalance >= 100) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexports.getFeeTier = getFeeTier;\n//# sourceMappingURL=fees.js.map","import BN from 'bn.js';\nimport * as bs58 from 'bs58';\nimport { Account, SystemProgram, Connection, PublicKey, Transaction, TransactionInstruction, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY, } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '@project-serum/serum/lib/token-instructions';\nimport { createTokenAccountInstrs, createMint, createTokenAccount, getTokenAccount, getMintInfo, createAccountRentExempt, SPL_SHARED_MEMORY_ID, Provider, NodeWallet, networks, } from '@project-serum/common';\nimport { encodePoolState, decodePoolState, Basket, PoolInstructions, } from '@project-serum/pool';\nimport { txIx as lockupTxIx, } from '@project-serum/lockup';\nimport * as instruction from './instruction';\nimport * as accounts from './accounts';\nimport { SIZE as REGISTRAR_SIZE, STAKE_POOL_NAME, MEGA_STAKE_POOL_NAME, } from './accounts/registrar';\nimport { RewardEventQueue } from './accounts/reward-event-q';\nimport * as metaEntity from './meta-entity';\nimport EventEmitter from 'eventemitter3';\n// TODO: handle susbcription state within client object.\nlet REWARD_Q_LISTENER = -1;\nexport default class Client {\n    constructor(cfg) {\n        this.provider = cfg.provider;\n        this.programId = cfg.programId;\n        this.stakeProgramId = cfg.stakeProgramId;\n        this.metaEntityProgramId = cfg.metaEntityProgramId;\n        this.accounts = new Accounts(cfg.provider, cfg.registrar, cfg.programId, cfg.metaEntityProgramId);\n        this.registrar = cfg.registrar;\n        this.rewardEventQueue = cfg.rewardEventQueue;\n    }\n    // Use this to cache a retbuf account, so that we don't have to allocate\n    // one everytime we need it.\n    static setRetbuf(retbuf, retbufProgramId) {\n        Client._retbuf = retbuf;\n        if (retbufProgramId !== undefined) {\n            Client._retbufProgramId = retbufProgramId;\n        }\n    }\n    // Connects to the devnet deployment of the program.\n    static devnet(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('https://devnet.solana.com', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.devnet.registryProgramId,\n            stakeProgramId: networks.devnet.stakeProgramId,\n            registrar: networks.devnet.registrar,\n            metaEntityProgramId: networks.devnet.metaEntityProgramId,\n            rewardEventQueue: networks.devnet.rewardEventQueue,\n        });\n    }\n    static localhost(wallet, opts) {\n        if (wallet === undefined) {\n            wallet = NodeWallet.local();\n        }\n        opts = opts || Provider.defaultOptions();\n        const connection = new Connection('http://localhost:8899', opts.preflightCommitment);\n        const provider = new Provider(connection, wallet, opts);\n        return new Client({\n            provider,\n            programId: networks.localhost.registryProgramId,\n            stakeProgramId: networks.localhost.stakeProgramId,\n            registrar: networks.localhost.registrar,\n            metaEntityProgramId: networks.localhost.metaEntityProgramId,\n            rewardEventQueue: networks.localhost.rewardEventQueue,\n        });\n    }\n    // Initializes both the registry and its associated staking pool.\n    static async initialize(provider, req) {\n        let { programId, stakeProgramId, metaEntityProgramId, mint, megaMint, withdrawalTimelock, deactivationTimelock, rewardActivationThreshold, maxStakePerEntity, authority, registrar, } = req;\n        if (authority === undefined) {\n            authority = provider.wallet.publicKey;\n        }\n        if (registrar === undefined) {\n            registrar = new Account();\n        }\n        const rewardEventQueue = new Account();\n        const pool = new Account();\n        const megaPool = new Account();\n        // Create program vault authorities.\n        const [vaultAuthority, vaultNonce] = await PublicKey.findProgramAddress([registrar.publicKey.toBuffer()], programId);\n        const [poolVaultAuthority, poolVaultNonce,] = await PublicKey.findProgramAddress([pool.publicKey.toBuffer()], stakeProgramId);\n        const [megaPoolVaultAuthority, megaPoolVaultNonce,] = await PublicKey.findProgramAddress([megaPool.publicKey.toBuffer()], stakeProgramId);\n        // Create program vaults.\n        const vault = await createTokenAccount(provider, mint, vaultAuthority);\n        const megaVault = await createTokenAccount(provider, megaMint, vaultAuthority);\n        const poolVault = await createTokenAccount(provider, mint, poolVaultAuthority);\n        const megaPoolVault = await createTokenAccount(provider, mint, megaPoolVaultAuthority);\n        const megaPoolMegaVault = await createTokenAccount(provider, megaMint, megaPoolVaultAuthority);\n        // Create pool tokens.\n        const poolMint = await createMint(provider, poolVaultAuthority);\n        const megaPoolMint = await createMint(provider, megaPoolVaultAuthority);\n        const createTx = new Transaction();\n        createTx.add(\n        // Create reward event queue.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: rewardEventQueue.publicKey,\n            space: accounts.RewardEventQueue.accountSize(),\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.RewardEventQueue.accountSize()),\n            programId: programId,\n        }), \n        // Create registrar.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: registrar.publicKey,\n            space: REGISTRAR_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(REGISTRAR_SIZE),\n            programId: programId,\n        }), \n        // Create staking pool.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: pool.publicKey,\n            space: POOL_STATE_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(POOL_STATE_SIZE),\n            programId: stakeProgramId,\n        }), \n        // Create mega staking pool.\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: megaPool.publicKey,\n            space: MEGA_POOL_STATE_SIZE,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(MEGA_POOL_STATE_SIZE),\n            programId: stakeProgramId,\n        }));\n        // Program specific accounts.\n        const additionalAccounts = [\n            { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n        ];\n        const initTx = new Transaction();\n        initTx.add(\n        // Initialize pool.\n        PoolInstructions.initialize(stakeProgramId, pool.publicKey, poolMint, STAKE_POOL_NAME, [poolVault], poolVaultAuthority, poolVaultNonce, additionalAccounts), \n        // Initialize mega pool.\n        PoolInstructions.initialize(stakeProgramId, megaPool.publicKey, megaPoolMint, MEGA_STAKE_POOL_NAME, [megaPoolVault, megaPoolMegaVault], megaPoolVaultAuthority, megaPoolVaultNonce, additionalAccounts), \n        // Iniitalize registrar.\n        new TransactionInstruction({\n            keys: [\n                { pubkey: registrar.publicKey, isWritable: true, isSigner: false },\n                { pubkey: vault, isWritable: false, isSigner: false },\n                { pubkey: megaVault, isWritable: false, isSigner: false },\n                { pubkey: pool.publicKey, isWritable: false, isSigner: false },\n                { pubkey: megaPool.publicKey, isWritable: false, isSigner: false },\n                {\n                    pubkey: stakeProgramId,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                {\n                    pubkey: rewardEventQueue.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                    nonce: vaultNonce,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    rewardActivationThreshold,\n                    maxStakePerEntity,\n                },\n            }),\n        }));\n        const createSigners = [rewardEventQueue, registrar, pool, megaPool];\n        const createTxSig = await provider.send(createTx, createSigners);\n        const initTxSig = await provider.send(initTx);\n        const client = new Client({\n            registrar: registrar.publicKey,\n            provider,\n            programId,\n            stakeProgramId,\n            metaEntityProgramId,\n            rewardEventQueue: rewardEventQueue.publicKey,\n        });\n        return [\n            client,\n            {\n                createTx: createTxSig,\n                initTx: initTxSig,\n                registrar: registrar.publicKey,\n                pool: pool.publicKey,\n                megaPool: megaPool.publicKey,\n            },\n        ];\n    }\n    async updateRegistrar(req) {\n        let { authority, newAuthority, withdrawalTimelock, deactivationTimelock, rewardActivationThreshold, maxStakePerEntity, } = req;\n        let authorityPubkey = authority === undefined\n            ? this.provider.wallet.publicKey\n            : authority.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: this.registrar, isWritable: true, isSigner: false },\n                { pubkey: authorityPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateRegistrar: {\n                    newAuthority,\n                    withdrawalTimelock,\n                    deactivationTimelock,\n                    rewardActivationThreshold,\n                    maxStakePerEntity,\n                },\n            }),\n        }));\n        let signers = [authority];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createEntity(req) {\n        let { leader, name, about, imageUrl } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const metadataAccount = new Account();\n        const mqueue = new Account();\n        const entity = new Account();\n        const metadataInstrs = await metaEntity.transaction.initializeInstrs({\n            mqueue,\n            programId: this.metaEntityProgramId,\n            authority: leaderPubkey,\n            name,\n            about,\n            provider: this.provider,\n            metadataAccount,\n            imageUrl,\n            entity: entity.publicKey,\n        });\n        const tx = new Transaction();\n        tx.add(...metadataInstrs, SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: entity.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.entity.SIZE),\n            space: accounts.entity.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity.publicKey, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createEntity: {\n                    metadata: metadataAccount.publicKey,\n                },\n            }),\n        }));\n        let signers = [metadataAccount, mqueue, entity, leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            entity: entity.publicKey,\n            metadata: metadataAccount.publicKey,\n        };\n    }\n    async updateEntity(req) {\n        let { leader, newLeader, entity } = req;\n        const leaderPubkey = leader === undefined ? this.provider.wallet.publicKey : leader.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: leaderPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateEntity: {\n                    leader: newLeader,\n                },\n            }),\n        }));\n        let signers = [leader];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async createMember(req) {\n        let { beneficiary, entity, delegate, poolTokenMint, megaPoolTokenMint, registrar, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (poolTokenMint === undefined) {\n            const pool = await this.accounts.pool(this.registrar);\n            poolTokenMint = pool.poolTokenMint;\n        }\n        if (megaPoolTokenMint === undefined) {\n            const megaPool = await this.accounts.megaPool(this.registrar);\n            megaPoolTokenMint = megaPool.poolTokenMint;\n        }\n        const member = new Account();\n        const registrySigner = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const spt = new Account();\n        const sptMega = new Account();\n        const createSptInstrs = await createTokenAccountInstrs(this.provider, spt.publicKey, poolTokenMint, registrySigner);\n        const createMsptInstrs = await createTokenAccountInstrs(this.provider, sptMega.publicKey, megaPoolTokenMint, registrySigner);\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: member.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.member.SIZE),\n            space: accounts.member.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(...createSptInstrs, ...createMsptInstrs, new TransactionInstruction({\n            keys: [\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: member.publicKey, isWritable: true, isSigner: false },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: registrySigner, isWritable: false, isSigner: false },\n                { pubkey: spt.publicKey, isWritable: false, isSigner: false },\n                { pubkey: sptMega.publicKey, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                createMember: {\n                    delegate: delegate,\n                },\n            }),\n        }));\n        let signers = [spt, sptMega, member, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            member: member.publicKey,\n            spt: spt.publicKey,\n            sptMega: sptMega.publicKey,\n        };\n    }\n    async updateMember(req) {\n        let { member, beneficiary, delegate } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                updateMember: {\n                    delegate,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async switchEntity(req) {\n        let { member, entity, newEntity, beneficiary } = req;\n        if (entity === undefined) {\n            entity = (await this.accounts.member(member)).entity;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: newEntity, isWritable: true, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ].concat(await this.poolAccounts()),\n            programId: this.programId,\n            data: instruction.encode({\n                switchEntity: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async deposit(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, vaultOwner, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        if (vault === undefined || vaultOwner == undefined) {\n            const v = await this.vaultFor(depositor);\n            vault = v.vaultAddress;\n            vaultOwner = v.vault.owner;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: true,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultOwner, isWritable: false, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ].concat(await this.poolAccounts()),\n            programId: this.programId,\n            data: instruction.encode({\n                deposit: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async vaultFor(depositor) {\n        let vaultAddress = undefined;\n        let vault = undefined;\n        let depositorAcc = await getTokenAccount(this.provider, depositor);\n        let r = await this.accounts.registrar(this.registrar);\n        let vaultAcc = await this.accounts.depositVault(this.registrar);\n        if (vaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = r.vault;\n            vault = vaultAcc;\n        }\n        let megaVaultAcc = await this.accounts.depositMegaVault(this.registrar);\n        if (megaVaultAcc.mint.equals(depositorAcc.mint)) {\n            vaultAddress = r.megaVault;\n            vault = megaVaultAcc;\n        }\n        if (vaultAddress === undefined) {\n            throw new Error(`Invalid depositor account: ${depositor}`);\n        }\n        if (vault === undefined) {\n            throw new Error(`Invalid mint for depositor account: ${depositor}`);\n        }\n        return {\n            vaultAddress,\n            vault,\n        };\n    }\n    async poolFor(poolToken, r) {\n        let poolTokenAcc = await getTokenAccount(this.provider, poolToken);\n        let pool = await this.accounts.pool(r);\n        if (pool.poolTokenMint.equals(poolTokenAcc.mint)) {\n            return { pool, isMega: false };\n        }\n        let megaPool = await this.accounts.megaPool(r);\n        if (megaPool.poolTokenMint.equals(poolTokenAcc.mint)) {\n            return { pool: megaPool, isMega: true };\n        }\n        throw new Error(`Failed top find pool for ${poolToken}`);\n    }\n    async withdraw(req) {\n        let { entity, member, beneficiary, depositor, depositorAuthority, amount, vault, vaultOwner, } = req;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        if (vault === undefined || vaultOwner === undefined) {\n            let v = await this.vaultFor(depositor);\n            vault = v.vaultAddress;\n            vaultOwner = v.vault.owner;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const depositorAuthorityPubkey = depositorAuthority === undefined\n            ? this.provider.wallet.publicKey\n            : depositorAuthority.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                // Whitelist relay interface.\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: depositorAuthorityPubkey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: vault, isWritable: true, isSigner: false },\n                { pubkey: vaultOwner, isWritable: false, isSigner: false },\n                // Program specific.\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ].concat(await this.poolAccounts()),\n            programId: this.programId,\n            data: instruction.encode({\n                withdraw: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [depositorAuthority, beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async stake(req) {\n        let { member, beneficiary, entity, amount, spt } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n            ].concat(await this.executePoolAccounts(spt)),\n            programId: this.programId,\n            data: instruction.encode({\n                stake: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async executePoolAccounts(poolToken, r) {\n        if (r === undefined) {\n            r = await this.accounts.registrar(this.registrar);\n        }\n        const accs = await this.poolAccounts(r);\n        let assetAccs = await (async () => {\n            const { pool, isMega } = await this.poolFor(poolToken, r);\n            let assetAccs = [r.vault];\n            if (isMega) {\n                assetAccs.push(r.megaVault);\n            }\n            return assetAccs.map(a => {\n                return { pubkey: a, isWritable: true, isSigner: false };\n            });\n        })();\n        let vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, r);\n        return accs\n            .concat([{ pubkey: poolToken, isWritable: true, isSigner: false }])\n            .concat(assetAccs)\n            .concat([{ pubkey: vaultAuthority, isWritable: false, isSigner: false }]);\n    }\n    async poolAccounts(r, retbuf, retbufProgramId) {\n        if (r === undefined) {\n            r = await this.accounts.registrar(this.registrar);\n        }\n        let pool = await this.accounts.pool(r);\n        let megaPool = await this.accounts.megaPool(r);\n        if (retbuf === undefined) {\n            if (Client._retbuf === null) {\n                throw new Error('Retbuf not provided');\n            }\n            retbuf = Client._retbuf;\n        }\n        if (retbufProgramId === undefined) {\n            if (Client._retbufProgramId !== null) {\n                retbufProgramId = Client._retbufProgramId;\n            }\n            else {\n                retbufProgramId = SPL_SHARED_MEMORY_ID;\n            }\n        }\n        return [\n            // Pids.\n            { pubkey: this.stakeProgramId, isWritable: false, isSigner: false },\n            { pubkey: retbufProgramId, isWritable: false, isSigner: false },\n            { pubkey: retbuf, isWritable: true, isSigner: false },\n            // Pool.\n            { pubkey: r.pool, isWritable: true, isSigner: false },\n            { pubkey: pool.poolTokenMint, isWritable: true, isSigner: false },\n            {\n                pubkey: pool.assets[0].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: pool.vaultSigner, isWritable: false, isSigner: false },\n            // Mega pool.\n            { pubkey: r.megaPool, isWritable: true, isSigner: false },\n            { pubkey: megaPool.poolTokenMint, isWritable: true, isSigner: false },\n            {\n                pubkey: megaPool.assets[0].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            {\n                pubkey: megaPool.assets[1].vaultAddress,\n                isWritable: true,\n                isSigner: false,\n            },\n            { pubkey: megaPool.vaultSigner, isWritable: false, isSigner: false },\n        ];\n    }\n    async markGeneration(req) {\n        let { entity, generation } = req;\n        if (generation === undefined) {\n            generation = (await createAccountRentExempt(this.provider, this.programId, accounts.generation.SIZE)).publicKey;\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: generation, isWritable: true, isSigner: false },\n                { pubkey: entity, isWritable: false, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                markGeneration: {},\n            }),\n        }));\n        let txSig = await this.provider.send(tx);\n        return {\n            tx: txSig,\n            generation,\n        };\n    }\n    async startStakeWithdrawal(req) {\n        let { pendingWithdrawal, member, beneficiary, entity, amount, spt, generation, registrar, } = req;\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        if (pendingWithdrawal === undefined) {\n            pendingWithdrawal = new Account();\n        }\n        if (entity === undefined) {\n            let m = await this.accounts.member(member);\n            entity = m.entity;\n        }\n        let vaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const tx = new Transaction();\n        tx.add(SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: pendingWithdrawal.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.pendingWithdrawal.SIZE),\n            space: accounts.pendingWithdrawal.SIZE,\n            programId: this.programId,\n        }));\n        tx.add(new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: pendingWithdrawal.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vaultAuthority, isWritable: false, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n            ]\n                .concat(await this.executePoolAccounts(spt))\n                .concat(generation === undefined\n                ? []\n                : [\n                    {\n                        pubkey: generation,\n                        isWritable: false,\n                        isSigner: false,\n                    },\n                ]),\n            programId: this.programId,\n            data: instruction.encode({\n                startStakeWithdrawal: {\n                    amount,\n                },\n            }),\n        }));\n        let signers = [beneficiary, pendingWithdrawal];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n            pendingWithdrawal: pendingWithdrawal.publicKey,\n        };\n    }\n    async endStakeWithdrawal(req) {\n        let { member, entity, beneficiary, pendingWithdrawal } = req;\n        if (entity === undefined) {\n            entity = (await this.accounts.member(member)).entity;\n        }\n        const beneficiaryPubkey = beneficiary === undefined\n            ? this.provider.wallet.publicKey\n            : beneficiary.publicKey;\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: pendingWithdrawal, isWritable: true, isSigner: false },\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: beneficiaryPubkey, isWritable: false, isSigner: true },\n                { pubkey: entity, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                endStakeWithdrawal: {},\n            }),\n        }));\n        let signers = [beneficiary];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async sendMessage(req) {\n        const { from, ts, content, mqueue } = req;\n        let data = metaEntity.accounts.mqueue.encode({\n            from,\n            ts,\n            content,\n        });\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [{ pubkey: mqueue, isWritable: true, isSigner: false }],\n            programId: this.metaEntityProgramId,\n            data: metaEntity.instruction.encode({\n                sendMessage: {\n                    data,\n                },\n            }),\n        }));\n        let signers = [];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async dropPoolReward(req) {\n        let { pool, srmDepositor, msrmDepositor, srmAmount, msrmAmount, poolSrmVault, poolMsrmVault, } = req;\n        let totals = [srmAmount];\n        if (msrmAmount !== undefined) {\n            totals.push(msrmAmount);\n        }\n        let depositors = [srmDepositor];\n        if (msrmDepositor !== undefined) {\n            depositors.push(msrmDepositor);\n        }\n        let poolVaults = [poolSrmVault];\n        if (poolMsrmVault !== undefined) {\n            poolVaults.push(poolMsrmVault);\n        }\n        const tx = new Transaction();\n        tx.add(new TransactionInstruction({\n            keys: [\n                { pubkey: this.rewardEventQueue, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n            ]\n                .concat(depositors.map(d => {\n                return { pubkey: d, isWritable: true, isSigner: false };\n            }))\n                .concat([\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: true,\n                },\n                { pubkey: pool, isWritable: false, isSigner: false },\n            ])\n                .concat(poolVaults.map(pv => {\n                return { pubkey: pv, isWritable: true, isSigner: false };\n            }))\n                .concat([\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n            ]),\n            programId: this.programId,\n            data: instruction.encode({\n                dropPoolReward: {\n                    totals,\n                },\n            }),\n        }));\n        let signers = [];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async dropLockedReward(req) {\n        let { total, endTs, expiryTs, expiryReceiver, depositor, depositorMint, pool, poolTokenMint, periodCount, } = req;\n        const lockedVendor = new Account();\n        const lockedVendorVault = new Account();\n        const [lockedVendorVaultAuthority, nonce,] = await PublicKey.findProgramAddress([this.registrar.toBuffer(), lockedVendor.publicKey.toBuffer()], this.programId);\n        const createLockedVendorVaultInstrs = await createTokenAccountInstrs(this.provider, lockedVendorVault.publicKey, depositorMint, lockedVendorVaultAuthority);\n        const tx = new Transaction();\n        tx.add(\n        // Create LockedRewardVendor token vault.\n        ...createLockedVendorVaultInstrs, \n        // Create LockedRewardVendor account.\n        SystemProgram.createAccount({\n            fromPubkey: this.provider.wallet.publicKey,\n            newAccountPubkey: lockedVendor.publicKey,\n            lamports: await this.provider.connection.getMinimumBalanceForRentExemption(accounts.lockedRewardVendor.SIZE),\n            space: accounts.lockedRewardVendor.SIZE,\n            programId: this.programId,\n        }), new TransactionInstruction({\n            keys: [\n                { pubkey: this.rewardEventQueue, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: depositor, isWritable: true, isSigner: false },\n                {\n                    pubkey: this.provider.wallet.publicKey,\n                    isWritable: false,\n                    isSigner: false,\n                },\n                { pubkey: pool, isWritable: false, isSigner: false },\n                { pubkey: poolTokenMint, isWritable: false, isSigner: false },\n                { pubkey: lockedVendor.publicKey, isWritable: true, isSigner: false },\n                {\n                    pubkey: lockedVendorVault.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                dropLockedReward: {\n                    total,\n                    endTs,\n                    expiryTs,\n                    expiryReceiver,\n                    periodCount,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [lockedVendor, lockedVendorVault];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async claimLockedReward(req) {\n        let { cursor, member, vendor, vendorVault, vendorSigner, safe, lockupProgramId, mint, } = req;\n        const vesting = new Account();\n        const vestingVault = new Account();\n        const { nonce, ixs } = await lockupTxIx.allocVestingIxs(this.provider, lockupProgramId, safe, vesting.publicKey, vestingVault.publicKey, mint, this.provider.wallet.publicKey);\n        const tx = new Transaction();\n        tx.add(...ixs, new TransactionInstruction({\n            keys: [\n                { pubkey: member, isWritable: true, isSigner: false },\n                { pubkey: this.registrar, isWritable: false, isSigner: false },\n                { pubkey: vendor, isWritable: false, isSigner: false },\n                { pubkey: vendorVault, isWritable: true, isSigner: false },\n                { pubkey: vendorSigner, isWritable: false, isSigner: false },\n                { pubkey: safe, isWritable: false, isSigner: false },\n                { pubkey: lockupProgramId, isWritable: false, isSigner: false },\n                { pubkey: vesting.publicKey, isWritable: true, isSigner: false },\n                { pubkey: vestingVault.publicKey, isWritable: true, isSigner: false },\n                { pubkey: TOKEN_PROGRAM_ID, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_RENT_PUBKEY, isWritable: false, isSigner: false },\n                { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n            ],\n            programId: this.programId,\n            data: instruction.encode({\n                claimLockedReward: {\n                    cursor,\n                    nonce,\n                },\n            }),\n        }));\n        let signers = [vesting, vestingVault];\n        let txSig = await this.provider.send(tx, signers);\n        return {\n            tx: txSig,\n        };\n    }\n    async depositLocked(req) {\n        const { amount, vesting, safe, lockupClient, registrar, entity, member, vault, } = req;\n        const registryVaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const instructionData = instruction.encode({\n            deposit: {\n                amount,\n            },\n        });\n        const relayAccounts = [\n            { pubkey: member, isWritable: true, isSigner: false },\n            {\n                pubkey: this.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            { pubkey: entity, isWritable: true, isSigner: false },\n            { pubkey: this.registrar, isWritable: false, isSigner: false },\n            { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n        ].concat(await this.poolAccounts(registrar));\n        const relaySigners = [];\n        const { tx } = await lockupClient.whitelistWithdraw({\n            amount,\n            instructionData,\n            vesting,\n            whitelistProgram: this.programId,\n            whitelistProgramVault: vault,\n            whitelistProgramVaultAuthority: registryVaultAuthority,\n            relayAccounts,\n            relaySigners,\n            safe,\n        });\n        return { tx };\n    }\n    async withdrawLocked(req) {\n        const { amount, vesting, safe, lockupClient, registrar, member, entity, vault, } = req;\n        const registryVaultAuthority = await this.accounts.vaultAuthority(this.programId, this.registrar, registrar);\n        const instructionData = instruction.encode({\n            withdraw: {\n                amount,\n            },\n        });\n        const relayAccounts = [\n            { pubkey: member, isWritable: true, isSigner: false },\n            {\n                pubkey: this.provider.wallet.publicKey,\n                isWritable: false,\n                isSigner: true,\n            },\n            { pubkey: entity, isWritable: true, isSigner: false },\n            { pubkey: this.registrar, isWritable: false, isSigner: false },\n            { pubkey: SYSVAR_CLOCK_PUBKEY, isWritable: false, isSigner: false },\n        ].concat(await this.poolAccounts(registrar));\n        const relaySigners = [];\n        const { tx } = await lockupClient.whitelistDeposit({\n            instructionData,\n            vesting,\n            whitelistProgram: this.programId,\n            whitelistProgramVault: vault,\n            whitelistProgramVaultAuthority: registryVaultAuthority,\n            relayAccounts,\n            relaySigners,\n            safe,\n        });\n        return { tx };\n    }\n}\nClient._retbuf = null;\nClient._retbufProgramId = null;\nclass Accounts {\n    constructor(provider, registrarAddress, programId, metaEntityProgramId) {\n        this.provider = provider;\n        this.registrarAddress = registrarAddress;\n        this.programId = programId;\n        this.metaEntityProgramId = metaEntityProgramId;\n    }\n    async registrar(address) {\n        if (address === undefined) {\n            address = this.registrarAddress;\n        }\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Registrar does not exist ${address}`);\n        }\n        return accounts.registrar.decode(accountInfo.data);\n    }\n    async entity(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Entity does not exist ${address}`);\n        }\n        return accounts.entity.decode(accountInfo.data);\n    }\n    async metadata(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Entity does not exist ${address}`);\n        }\n        return metaEntity.accounts.metadata.decode(accountInfo.data);\n    }\n    async member(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Member does not exist ${address}`);\n        }\n        return accounts.member.decode(accountInfo.data);\n    }\n    async pendingWithdrawal(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`PendingWithdrawal does not exist ${address}`);\n        }\n        return accounts.pendingWithdrawal.decode(accountInfo.data);\n    }\n    async depositVault(registrarAddr) {\n        let r = await this.registrar(registrarAddr);\n        return getTokenAccount(this.provider, r.vault);\n    }\n    async depositMegaVault(registrarAddr) {\n        let r = await this.registrar(registrarAddr);\n        return getTokenAccount(this.provider, r.megaVault);\n    }\n    async pool(registrar) {\n        if (registrar instanceof PublicKey) {\n            registrar = await this.registrar(registrar);\n        }\n        let acc = await this.provider.connection.getAccountInfo(registrar.pool);\n        if (acc === null) {\n            throw new Error('Failed to find staking pool');\n        }\n        return decodePoolState(acc.data);\n    }\n    async poolTokenMint(pool, registrar) {\n        if (pool === undefined) {\n            pool = await this.pool(registrar || this.registrarAddress);\n        }\n        return await getMintInfo(this.provider, pool.poolTokenMint);\n    }\n    async poolVault(registrar) {\n        const p = await this.pool(registrar);\n        return getTokenAccount(this.provider, p.assets[0].vaultAddress);\n    }\n    async megaPoolVaults(registrar) {\n        const p = await this.megaPool(registrar);\n        return Promise.all([\n            getTokenAccount(this.provider, p.assets[0].vaultAddress),\n            getTokenAccount(this.provider, p.assets[1].vaultAddress),\n        ]);\n    }\n    async megaPool(registrar) {\n        if (registrar instanceof PublicKey) {\n            registrar = await this.registrar(registrar);\n        }\n        let acc = await this.provider.connection.getAccountInfo(registrar.megaPool);\n        if (acc === null) {\n            throw new Error('Failed to find staking pool');\n        }\n        return decodePoolState(acc.data);\n    }\n    async megaPoolTokenMint(pool, registrar) {\n        if (pool === undefined) {\n            pool = await this.megaPool(registrar || this.registrarAddress);\n        }\n        return await getMintInfo(this.provider, pool.poolTokenMint);\n    }\n    async vaultAuthority(programId, registrarAddr, registrar) {\n        if (registrar === undefined) {\n            registrar = await this.registrar(registrarAddr);\n        }\n        return PublicKey.createProgramAddress([registrarAddr.toBuffer(), Buffer.from([registrar.nonce])], programId);\n    }\n    async allEntities() {\n        const entityBytes = accounts.entity\n            .encode({\n            ...accounts.entity.defaultEntity(),\n            initialized: true,\n            registrar: this.registrarAddress,\n        })\n            .slice(0, 33);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(entityBytes),\n                },\n            },\n            {\n                dataSize: accounts.entity.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get entity accounts');\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.entity.decode(data),\n            };\n        }));\n    }\n    async membersWithBeneficiary(publicKey) {\n        const memberBytes = accounts.member\n            .encode({\n            ...accounts.member.defaultMember(),\n            initialized: true,\n            registrar: this.registrarAddress,\n            beneficiary: publicKey,\n        })\n            .slice(0, 65);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(memberBytes),\n                },\n            },\n            {\n                dataSize: accounts.member.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get member accounts owned by ' +\n                publicKey.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.member.decode(data),\n            };\n        }));\n    }\n    async pendingWithdrawalsForMember(member) {\n        const pendingWithdrawalBytes = accounts.pendingWithdrawal\n            .encode({\n            ...accounts.pendingWithdrawal.defaultPendingWithdrawal(),\n            initialized: true,\n            member,\n        })\n            .slice(0, 33);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(pendingWithdrawalBytes),\n                },\n            },\n            {\n                dataSize: accounts.pendingWithdrawal.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get pending withdrawals for ' +\n                member.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.pendingWithdrawal.decode(data),\n            };\n        }));\n    }\n    async generationsForEntity(entity) {\n        const pendingWithdrawalBytes = accounts.generation\n            .encode({\n            ...accounts.generation.defaultGeneration(),\n            initialized: true,\n            entity,\n        })\n            .slice(0, 33);\n        let filters = [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: bs58.encode(pendingWithdrawalBytes),\n                },\n            },\n            {\n                dataSize: accounts.member.SIZE,\n            },\n        ];\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.programId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters,\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get generations for ' +\n                entity.toBase58() +\n                ': ' +\n                resp.error.message);\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: accounts.generation.decode(data),\n            };\n        }));\n    }\n    async allMetadata() {\n        const metadataBytes = metaEntity.accounts.metadata\n            .encode({\n            ...metaEntity.accounts.metadata.defaultMetadata(),\n            initialized: true,\n        })\n            .slice(0, 1);\n        // @ts-ignore\n        let resp = await this.provider.connection._rpcRequest('getProgramAccounts', [\n            this.metaEntityProgramId.toBase58(),\n            {\n                commitment: this.provider.connection.commitment,\n                filters: [\n                    {\n                        memcmp: {\n                            offset: 0,\n                            bytes: bs58.encode(metadataBytes),\n                        },\n                    },\n                    {\n                        dataSize: metaEntity.accounts.metadata.SIZE,\n                    },\n                ],\n            },\n        ]);\n        if (resp.error) {\n            throw new Error('failed to get metadata accounts');\n        }\n        return (resp.result\n            // @ts-ignore\n            .map(({ pubkey, account: { data } }) => {\n            data = bs58.decode(data);\n            return {\n                publicKey: new PublicKey(pubkey),\n                account: metaEntity.accounts.metadata.decode(data),\n            };\n        }));\n    }\n    rewardEventQueueConnect(address) {\n        const ee = new EventEmitter();\n        let rewardEventQueue = null;\n        REWARD_Q_LISTENER = this.provider.connection.onAccountChange(address, acc => {\n            rewardEventQueue = new RewardEventQueue(acc.data);\n            ee.emit('change', {\n                publicKey: this.rewardEventQueue,\n                account: rewardEventQueue,\n            });\n        }, 'recent');\n        this.rewardEventQueue(address).then(rewardEventQueue => {\n            ee.emit('connected', rewardEventQueue);\n        });\n        return ee;\n    }\n    rewardEventQueueDisconnect() {\n        if (REWARD_Q_LISTENER !== -1) {\n            this.provider.connection\n                .removeAccountChangeListener(REWARD_Q_LISTENER)\n                .catch(console.error);\n        }\n    }\n    async rewardEventQueue(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Reward event queue dopes not exit ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: new RewardEventQueue(accountInfo.data),\n        };\n    }\n    mqueueConnect(address) {\n        const ee = new EventEmitter();\n        let mqueue = null;\n        this.provider.connection.onAccountChange(address, acc => {\n            // todo: emit message by message instead of the entire queue.\n            mqueue = new metaEntity.accounts.mqueue.MQueue(acc.data);\n            ee.emit('mqueue', mqueue);\n        }, 'recent');\n        this.mqueue(address).then(mq => {\n            ee.emit('connected', mq.account.messages());\n        });\n        return ee;\n    }\n    async mqueue(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`MQueue does not exist ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: new metaEntity.accounts.mqueue.MQueue(accountInfo.data),\n        };\n    }\n    async lockedRewardVendor(address) {\n        const accountInfo = await this.provider.connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error(`Vendor does not exist ${address}`);\n        }\n        return {\n            publicKey: address,\n            account: accounts.lockedRewardVendor.decode(accountInfo.data),\n        };\n    }\n    lockedRewardVendorAuthority(lockedVendor, nonce) {\n        return PublicKey.createProgramAddress([\n            this.registrarAddress.toBuffer(),\n            lockedVendor.toBuffer(),\n            Buffer.from([nonce]),\n        ], this.programId);\n    }\n}\n// The maximum basket size. Used to create the \"retbuf\" shared memory account\n// data to pass data back from the staking pool to the registry via CPI.\n//\n// The SRM pool has a basket with a single asset quantitiy. The MSRM pool,\n// however, has two assets (SRM and MSRM) and so has a larger size.\nconst MAX_BASKET_SIZE = maxBasketSize();\nconst POOL_STATE_SIZE = poolStateSize(1);\nconst MEGA_POOL_STATE_SIZE = poolStateSize(2);\nfunction maxBasketSize() {\n    const b = {\n        quantities: [new BN(0), new BN(0)],\n    };\n    const buffer = Buffer.alloc(1000);\n    const len = Basket.encode(b, buffer);\n    return len;\n}\nfunction poolStateSize(assetLen) {\n    return encodePoolState({\n        poolTokenMint: new PublicKey(Buffer.alloc(32)),\n        assets: [...Array(assetLen)].map(() => {\n            return {\n                mint: new PublicKey(Buffer.alloc(32)),\n                vaultAddress: new PublicKey(Buffer.alloc(32)),\n            };\n        }),\n        vaultSigner: new PublicKey(Buffer.alloc(32)),\n        vaultSignerNonce: 0,\n        accountParams: [...Array(assetLen)].map(() => {\n            return {\n                address: new PublicKey(Buffer.alloc(32)),\n                writable: false,\n            };\n        }),\n        name: STAKE_POOL_NAME,\n        adminKey: new PublicKey(Buffer.alloc(32)),\n        customState: Buffer.from([]),\n    }).length;\n}\n//# sourceMappingURL=client.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PoolTransactions = void 0;\nconst instructions_1 = require(\"./instructions\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst token_instructions_1 = require(\"@project-serum/serum/lib/token-instructions\");\nclass PoolTransactions {\n    /**\n     * Transaction to initialize a simple pool.\n     *\n     * This will:\n     * - initialize a new pool token mint\n     * - initialize a pool token account for the creator and mint some tokens to it\n     * - initialize vault accounts for each of the pool assets\n     * - transfer assets from the pool creator to the vault accounts\n     * - initialize the pool\n     */\n    static async initializeSimplePool(params) {\n        const { connection, programId, poolStateSpace, poolMintDecimals = 6, poolName, assetMints, initialPoolMintSupply = new bn_js_1.default('1' + '0'.repeat(poolMintDecimals)), initialAssetQuantities, creator, creatorAssets, additionalAccounts = [], } = params;\n        if (assetMints.length !== initialAssetQuantities.length) {\n            throw new Error('assetMints and initialAssetQuantities must have the same length');\n        }\n        if (assetMints.length !== creatorAssets.length) {\n            throw new Error('assetMints and creatorAssets must have the same length');\n        }\n        const poolStateAccount = new web3_js_1.Account();\n        const [vaultSigner, vaultSignerNonce] = await web3_js_1.PublicKey.findProgramAddress([poolStateAccount.publicKey.toBuffer()], programId);\n        const poolTokenMint = new web3_js_1.Account();\n        const creatorPoolTokenAccount = new web3_js_1.Account();\n        const vaultAccounts = assetMints.map(() => new web3_js_1.Account());\n        // Split into two transactions to stay under the size limit.\n        // Ideally all instructions that transfer tokens happen in the second transaction,\n        // so they get reverted if the pool creation fails.\n        const setup = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolTokenMint, creatorPoolTokenAccount, ...vaultAccounts],\n        };\n        const finalize = {\n            transaction: new web3_js_1.Transaction(),\n            signers: [poolStateAccount],\n        };\n        const mintAccountSpace = 82;\n        const mintAccountLamports = await connection.getMinimumBalanceForRentExemption(mintAccountSpace);\n        const tokenAccountSpace = 165;\n        const tokenAccountLamports = await connection.getMinimumBalanceForRentExemption(tokenAccountSpace);\n        // Initialize pool token.\n        setup.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolTokenMint.publicKey,\n            space: mintAccountSpace,\n            lamports: mintAccountLamports,\n            programId: token_instructions_1.TOKEN_PROGRAM_ID,\n        }), serum_1.TokenInstructions.initializeMint({\n            mint: poolTokenMint.publicKey,\n            decimals: poolMintDecimals,\n            mintAuthority: creator,\n        }), web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: creatorPoolTokenAccount.publicKey,\n            space: tokenAccountSpace,\n            lamports: tokenAccountLamports,\n            programId: token_instructions_1.TOKEN_PROGRAM_ID,\n        }), serum_1.TokenInstructions.initializeAccount({\n            account: creatorPoolTokenAccount.publicKey,\n            mint: poolTokenMint.publicKey,\n            owner: creator,\n        }));\n        finalize.transaction.add(serum_1.TokenInstructions.mintTo({\n            mint: poolTokenMint.publicKey,\n            destination: creatorPoolTokenAccount.publicKey,\n            amount: initialPoolMintSupply,\n            mintAuthority: creator,\n        }), serum_1.TokenInstructions.setAuthority({\n            target: poolTokenMint.publicKey,\n            currentAuthority: creator,\n            newAuthority: vaultSigner,\n            authorityType: 0,\n        }));\n        // Initialize vault accounts.\n        assetMints.forEach((mint, index) => {\n            const vault = vaultAccounts[index];\n            setup.transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: creator,\n                newAccountPubkey: vault.publicKey,\n                space: tokenAccountSpace,\n                lamports: tokenAccountLamports,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }), serum_1.TokenInstructions.initializeAccount({\n                account: vault.publicKey,\n                mint,\n                owner: vaultSigner,\n            }));\n            finalize.transaction.add(serum_1.TokenInstructions.transfer({\n                source: creatorAssets[index],\n                destination: vault.publicKey,\n                amount: initialAssetQuantities[index],\n                owner: creator,\n            }));\n        });\n        // Initialize pool account.\n        finalize.transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: creator,\n            newAccountPubkey: poolStateAccount.publicKey,\n            space: poolStateSpace,\n            lamports: await connection.getMinimumBalanceForRentExemption(poolStateSpace),\n            programId: programId,\n        }), instructions_1.PoolInstructions.initialize(programId, poolStateAccount.publicKey, poolTokenMint.publicKey, poolName, vaultAccounts.map(vault => vault.publicKey), vaultSigner, vaultSignerNonce, additionalAccounts));\n        return [poolStateAccount.publicKey, [setup, finalize]];\n    }\n    /**\n     * Transaction to get a pool basket, for use with simulateTransaction.\n     *\n     * This is a wrapper around {@link PoolInstructions.getBasket} that handles\n     * initializing the retbuf account.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param payer Payer for fees. Must have nonzero SOL but will not be charged\n     * if the transaction is only simulated.\n     */\n    static getBasket(pool, action, payer) {\n        const transaction = new web3_js_1.Transaction();\n        const retbufAccount = new web3_js_1.Account();\n        transaction.add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: payer,\n            newAccountPubkey: retbufAccount.publicKey,\n            lamports: 0,\n            space: 1024,\n            programId: instructions_1.RETBUF_PROGRAM_ID,\n        }));\n        transaction.add(instructions_1.PoolInstructions.getBasket(pool, action, retbufAccount.publicKey));\n        transaction.feePayer = payer;\n        return { transaction, signers: [retbufAccount] };\n    }\n    /**\n     * Transaction to execute a creation, redemption, or swap.\n     *\n     * This is a wrapper around {@link PoolInstructions.execute} that handles\n     * token delegation.\n     *\n     * The transaction will create a temporary account, delegate tokens to it,\n     * and use it in place of the actual owner, to limit the quantity of tokens\n     * that the pool can pull from the user's accounts.\n     *\n     * @param pool Pool to interact with.\n     * @param action Creation, redemption, or swap.\n     * @param user Token accounts to pull funds from or send funds to.\n     * @param expectedBasket Expected basket. Used to determine the quantity of\n     * tokens to approve.\n     */\n    static execute(pool, action, user, expectedBasket) {\n        if (expectedBasket.quantities.length !== pool.state.assets.length) {\n            throw new Error('expectedBasket must have the same number of components as the pool');\n        }\n        const transaction = new web3_js_1.Transaction();\n        const delegate = new web3_js_1.Account();\n        if ('create' in action) {\n            expectedBasket.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        else if ('redeem' in action) {\n            transaction.add(serum_1.TokenInstructions.approve({\n                owner: user.owner,\n                source: user.poolTokenAccount,\n                delegate: delegate.publicKey,\n                amount: action.redeem,\n            }));\n            expectedBasket.quantities.forEach((amount, index) => {\n                if (amount.isNeg()) {\n                    transaction.add(serum_1.TokenInstructions.approve({\n                        owner: user.owner,\n                        source: user.assetAccounts[index],\n                        delegate: delegate.publicKey,\n                        amount: amount.abs(),\n                    }));\n                }\n            });\n        }\n        else if ('swap' in action) {\n            action.swap.quantities.forEach((amount, index) => {\n                transaction.add(serum_1.TokenInstructions.approve({\n                    owner: user.owner,\n                    source: user.assetAccounts[index],\n                    delegate: delegate.publicKey,\n                    amount,\n                }));\n            });\n        }\n        transaction.add(instructions_1.PoolInstructions.execute(pool, action, {\n            ...user,\n            owner: delegate.publicKey,\n        }));\n        return { transaction, signers: [delegate] };\n    }\n}\nexports.PoolTransactions = PoolTransactions;\n//# sourceMappingURL=transactions.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, rustEnum, u64 as borshU64, } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst BALANCES_LAYOUT = struct([\n    borshU64('sptAmount'),\n    borshU64('sptMegaAmount'),\n    borshU64('currentDeposit'),\n    borshU64('currentMegaDeposit'),\n]);\nconst ENTITY_STATE_LAYOUT = rustEnum([\n    struct([], 'inactive'),\n    struct([i64('deactivationStartTs'), i64('timelock')], 'pendingDeactivation'),\n    struct([], 'active'),\n]);\nconst ENTITY_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('leader'),\n    BALANCES_LAYOUT.replicate('balances'),\n    borshU64('generation'),\n    ENTITY_STATE_LAYOUT.replicate('state'),\n    publicKey('metadata'),\n]);\nexport function decode(data) {\n    return ENTITY_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = ENTITY_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultEntity() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        leader: new PublicKey(Buffer.alloc(32)),\n        balances: {\n            sptAmount: new u64(0),\n            sptMegaAmount: new u64(0),\n            currentDeposit: new u64(0),\n            currentMegaDeposit: new u64(0),\n        },\n        generation: new u64(0),\n        state: {\n            pendingDeactivation: {\n                deactivationStartTs: new u64(0),\n                timelock: new u64(0),\n            },\n        },\n        metadata: new PublicKey(Buffer.alloc(32)),\n    };\n}\nexport const SIZE = encode(defaultEntity()).length;\n//# sourceMappingURL=entity.js.map","import { struct, u32 } from 'buffer-layout';\nimport { bool, publicKey, u64 as borshU64, i64 as borshI64, } from '@project-serum/borsh';\nimport { u64 } from '@solana/spl-token';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { POOL_PRICES_LAYOUT } from './generation';\nconst ORIGINAL_DEPOSIT_LAYOUT = struct([\n    publicKey('owner'),\n    borshU64('deposit'),\n    borshU64('megaDeposit'),\n]);\nconst MEMBER_BALANCES_LAYOUT = struct([\n    borshU64('sptAmount'),\n    borshU64('sptMegaAmount'),\n    borshU64('currentDeposit'),\n    borshU64('currentMegaDeposit'),\n    ORIGINAL_DEPOSIT_LAYOUT.replicate('main'),\n    ORIGINAL_DEPOSIT_LAYOUT.replicate('delegate'),\n]);\nexport const MEMBER_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('registrar'),\n    publicKey('beneficiary'),\n    publicKey('entity'),\n    borshU64('generation'),\n    MEMBER_BALANCES_LAYOUT.replicate('balances'),\n    POOL_PRICES_LAYOUT.replicate('lastActivePrices'),\n    publicKey('metadata'),\n    publicKey('spt'),\n    publicKey('sptMega'),\n    u32('rewardsCursor'),\n    borshI64('lastStakeTs'),\n]);\nexport function decode(data) {\n    return MEMBER_LAYOUT.decode(data);\n}\nexport function encode(m) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = MEMBER_LAYOUT.encode(m, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultMember() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        beneficiary: new PublicKey(Buffer.alloc(32)),\n        entity: new PublicKey(Buffer.alloc(32)),\n        generation: new u64(0),\n        balances: {\n            sptAmount: new u64(0),\n            sptMegaAmount: new u64(0),\n            currentDeposit: new u64(0),\n            currentMegaDeposit: new u64(0),\n            main: {\n                owner: new PublicKey(Buffer.alloc(32)),\n                deposit: new u64(0),\n                megaDeposit: new u64(0),\n            },\n            delegate: {\n                owner: new PublicKey(Buffer.alloc(32)),\n                deposit: new u64(0),\n                megaDeposit: new u64(0),\n            },\n        },\n        lastActivePrices: {\n            basket: {\n                quantities: [new u64(0)],\n            },\n            megaBasket: {\n                quantities: [new u64(0), new u64(0)],\n            },\n        },\n        metadata: new PublicKey(Buffer.alloc(32)),\n        spt: new PublicKey(Buffer.alloc(32)),\n        sptMega: new PublicKey(Buffer.alloc(32)),\n        rewardsCursor: 0,\n        lastStakeTs: new BN(0),\n    };\n}\nexport const SIZE = encode(defaultMember()).length;\n//# sourceMappingURL=member.js.map","import { struct } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 as borshU64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst PENDING_PAYMENT_LAYOUT = struct([\n    borshU64('assetAmount'),\n    borshU64('megaAssetAmount'),\n]);\nconst PENDING_WITHDRAWAL_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('member'),\n    bool('burned'),\n    publicKey('pool'),\n    i64('startTs'),\n    i64('endTs'),\n    borshU64('sptAmount'),\n    PENDING_PAYMENT_LAYOUT.replicate('payment'),\n]);\nexport function decode(data) {\n    return PENDING_WITHDRAWAL_LAYOUT.decode(data);\n}\nexport function encode(pw) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = PENDING_WITHDRAWAL_LAYOUT.encode(pw, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultPendingWithdrawal() {\n    return {\n        initialized: false,\n        member: new PublicKey(Buffer.alloc(32)),\n        burned: false,\n        pool: new PublicKey(Buffer.alloc(32)),\n        startTs: new u64(0),\n        endTs: new u64(0),\n        sptAmount: new u64(0),\n        payment: {\n            assetAmount: new u64(0),\n            megaAssetAmount: new u64(0),\n        },\n    };\n}\nexport const SIZE = encode(defaultPendingWithdrawal()).length;\n//# sourceMappingURL=pending-withdrawal.js.map","import * as borsh from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nconst LOCKED_REWARD_VENDOR_LAYOUT = borsh.struct([\n    borsh.bool('initialized'),\n    borsh.publicKey('registrar'),\n    borsh.publicKey('vault'),\n    borsh.u8('nonce'),\n    borsh.u64('poolTokenSupply'),\n    borsh.u32('rewardEventQueueCursor'),\n    borsh.i64('startTs'),\n    borsh.i64('endTs'),\n    borsh.i64('expiryTs'),\n    borsh.publicKey('expiryReceiver'),\n    borsh.u64('total'),\n    borsh.u64('periodCount'),\n]);\nexport function decode(data) {\n    return LOCKED_REWARD_VENDOR_LAYOUT.decode(data);\n}\nexport function encode(v) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKED_REWARD_VENDOR_LAYOUT.encode(v, buffer);\n    return buffer.slice(0, len);\n}\nexport function defaultLockedRewardVendor() {\n    return {\n        initialized: false,\n        registrar: new PublicKey(Buffer.alloc(32)),\n        vault: new PublicKey(Buffer.alloc(32)),\n        nonce: 0,\n        poolTokenSupply: new BN(0),\n        rewardEventQueueCursor: 0,\n        startTs: new BN(0),\n        endTs: new BN(0),\n        expiryTs: new BN(0),\n        expiryReceiver: new PublicKey(Buffer.alloc(32)),\n        total: new BN(0),\n        periodCount: new BN(0),\n    };\n}\nexport const SIZE = encode(defaultLockedRewardVendor()).length;\n//# sourceMappingURL=locked-vendor.js.map","import { struct } from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { bool, publicKey, str } from '@project-serum/borsh';\nconst METADATA_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('entity'),\n    publicKey('authority'),\n    str('name'),\n    str('about'),\n    str('imageUrl'),\n    publicKey('chat'),\n]);\nexport function decode(data) {\n    return METADATA_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = METADATA_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = 280 * 2 + 32;\nexport function defaultMetadata() {\n    return {\n        initialized: true,\n        entity: new PublicKey(Buffer.alloc(32)),\n        authority: new PublicKey(Buffer.alloc(32)),\n        name: '',\n        about: '',\n        imageUrl: '',\n        chat: new PublicKey(Buffer.alloc(32)),\n    };\n}\n//# sourceMappingURL=metadata.js.map","import { struct, u32 } from 'buffer-layout';\nimport { publicKey, u64, str } from '@project-serum/borsh';\nconst MESSAGE_SIZE = 320;\nconst MAX_MESSAGES = 500;\nconst MESSAGE_START = 8;\nexport const SIZE = MAX_MESSAGES * MESSAGE_SIZE + MESSAGE_START;\nexport class MQueue {\n    constructor(data) {\n        this.data = data;\n    }\n    messages() {\n        let messages = [];\n        let idx = this.tail();\n        let head = this.head();\n        while (idx % MAX_MESSAGES !== head) {\n            messages.push(this.message_at(idx));\n            idx += 1;\n        }\n        return messages;\n    }\n    message_at(idx) {\n        let start = idx * MESSAGE_SIZE + MESSAGE_START;\n        let end = start + MESSAGE_SIZE;\n        let bytes = this.data.slice(start, end);\n        return decode(bytes);\n    }\n    head() {\n        let bytes = this.data.slice(0, 4);\n        return u32().decode(bytes);\n    }\n    tail() {\n        let bytes = this.data.slice(4, 8);\n        return u32().decode(bytes);\n    }\n}\nconst MESSAGE_LAYOUT = struct([\n    publicKey('from'),\n    u64('ts'),\n    str('content'),\n]);\nexport function decode(data) {\n    return MESSAGE_LAYOUT.decode(data);\n}\nexport function encode(e) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = MESSAGE_LAYOUT.encode(e, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=mqueue.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMintDecimals = exports.Orderbook = exports.ORDERBOOK_LAYOUT = exports.OpenOrders = exports._OPEN_ORDERS_LAYOUT_V2 = exports._OPEN_ORDERS_LAYOUT_V1 = exports.Market = exports._MARKET_STATE_LAYOUT_V2 = exports._MARKET_STAT_LAYOUT_V1 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst slab_1 = require(\"./slab\");\nconst instructions_1 = require(\"./instructions\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst queue_1 = require(\"./queue\");\nconst buffer_1 = require(\"buffer\");\nconst fees_1 = require(\"./fees\");\nconst token_instructions_1 = require(\"./token-instructions\");\nconst tokens_and_markets_1 = require(\"./tokens_and_markets\");\nexports._MARKET_STAT_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    buffer_layout_1.blob(7),\n]);\nexports._MARKET_STATE_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('ownAddress'),\n    layout_1.u64('vaultSignerNonce'),\n    layout_1.publicKeyLayout('baseMint'),\n    layout_1.publicKeyLayout('quoteMint'),\n    layout_1.publicKeyLayout('baseVault'),\n    layout_1.u64('baseDepositsTotal'),\n    layout_1.u64('baseFeesAccrued'),\n    layout_1.publicKeyLayout('quoteVault'),\n    layout_1.u64('quoteDepositsTotal'),\n    layout_1.u64('quoteFeesAccrued'),\n    layout_1.u64('quoteDustThreshold'),\n    layout_1.publicKeyLayout('requestQueue'),\n    layout_1.publicKeyLayout('eventQueue'),\n    layout_1.publicKeyLayout('bids'),\n    layout_1.publicKeyLayout('asks'),\n    layout_1.u64('baseLotSize'),\n    layout_1.u64('quoteLotSize'),\n    layout_1.u64('feeRateBps'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass Market {\n    constructor(decoded, baseMintDecimals, quoteMintDecimals, options = {}, programId) {\n        const { skipPreflight = false, commitment = 'recent' } = options;\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.market) {\n            throw new Error('Invalid market state');\n        }\n        this._decoded = decoded;\n        this._baseSplTokenDecimals = baseMintDecimals;\n        this._quoteSplTokenDecimals = quoteMintDecimals;\n        this._skipPreflight = skipPreflight;\n        this._commitment = commitment;\n        this._programId = programId;\n        this._openOrdersAccountsCache = {};\n        this._feeDiscountKeysCache = {};\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._MARKET_STAT_LAYOUT_V1;\n        }\n        return exports._MARKET_STATE_LAYOUT_V2;\n    }\n    static async load(connection, address, options = {}, programId) {\n        const { owner, data } = throwIfNull(await connection.getAccountInfo(address), 'Market not found');\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program: ' + owner.toBase58());\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized ||\n            !decoded.accountFlags.market ||\n            !decoded.ownAddress.equals(address)) {\n            throw new Error('Invalid market');\n        }\n        const [baseMintDecimals, quoteMintDecimals] = await Promise.all([\n            getMintDecimals(connection, decoded.baseMint),\n            getMintDecimals(connection, decoded.quoteMint),\n        ]);\n        return new Market(decoded, baseMintDecimals, quoteMintDecimals, options, programId);\n    }\n    get programId() {\n        return this._programId;\n    }\n    get address() {\n        return this._decoded.ownAddress;\n    }\n    get publicKey() {\n        return this.address;\n    }\n    get baseMintAddress() {\n        return this._decoded.baseMint;\n    }\n    get quoteMintAddress() {\n        return this._decoded.quoteMint;\n    }\n    get bidsAddress() {\n        return this._decoded.bids;\n    }\n    get asksAddress() {\n        return this._decoded.asks;\n    }\n    async loadBids(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.bids));\n        return Orderbook.decode(this, data);\n    }\n    async loadAsks(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.asks));\n        return Orderbook.decode(this, data);\n    }\n    async loadOrdersForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const [bids, asks, openOrdersAccounts] = await Promise.all([\n            this.loadBids(connection),\n            this.loadAsks(connection),\n            this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs),\n        ]);\n        return this.filterForOpenOrders(bids, asks, openOrdersAccounts);\n    }\n    filterForOpenOrders(bids, asks, openOrdersAccounts) {\n        return [...bids, ...asks].filter((order) => openOrdersAccounts.some((openOrders) => order.openOrdersAddress.equals(openOrders.address)));\n    }\n    async findBaseTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findBaseTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.baseMintAddress);\n    }\n    async getTokenAccountsByOwnerForMint(connection, ownerAddress, mintAddress) {\n        return (await connection.getTokenAccountsByOwner(ownerAddress, {\n            mint: mintAddress,\n        })).value;\n    }\n    async findQuoteTokenAccountsForOwner(connection, ownerAddress, includeUnwrappedSol = false) {\n        if (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) && includeUnwrappedSol) {\n            const [wrapped, unwrapped] = await Promise.all([\n                this.findQuoteTokenAccountsForOwner(connection, ownerAddress, false),\n                connection.getAccountInfo(ownerAddress),\n            ]);\n            if (unwrapped !== null) {\n                return [{ pubkey: ownerAddress, account: unwrapped }, ...wrapped];\n            }\n            return wrapped;\n        }\n        return await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, this.quoteMintAddress);\n    }\n    async findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs = 0) {\n        const strOwner = ownerAddress.toBase58();\n        const now = new Date().getTime();\n        if (strOwner in this._openOrdersAccountsCache &&\n            now - this._openOrdersAccountsCache[strOwner].ts < cacheDurationMs) {\n            return this._openOrdersAccountsCache[strOwner].accounts;\n        }\n        const openOrdersAccountsForOwner = await OpenOrders.findForMarketAndOwner(connection, this.address, ownerAddress, this._programId);\n        this._openOrdersAccountsCache[strOwner] = {\n            accounts: openOrdersAccountsForOwner,\n            ts: now,\n        };\n        return openOrdersAccountsForOwner;\n    }\n    async placeOrder(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey, }) {\n        const { transaction, signers } = await this.makePlaceOrderTransaction(connection, {\n            owner,\n            payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey,\n            feeDiscountPubkey,\n        });\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    getSplTokenBalanceFromAccountInfo(accountInfo, decimals) {\n        return divideBnToNumber(new bn_js_1.default(accountInfo.data.slice(64, 72), 10, 'le'), new bn_js_1.default(10).pow(new bn_js_1.default(decimals)));\n    }\n    get supportsSrmFeeDiscounts() {\n        return fees_1.supportsSrmFeeDiscounts(this._programId);\n    }\n    get supportsReferralFees() {\n        return tokens_and_markets_1.getLayoutVersion(this._programId) > 1;\n    }\n    async findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs = 0) {\n        let sortedAccounts = [];\n        const now = new Date().getTime();\n        const strOwner = ownerAddress.toBase58();\n        if (strOwner in this._feeDiscountKeysCache &&\n            now - this._feeDiscountKeysCache[strOwner].ts < cacheDurationMs) {\n            return this._feeDiscountKeysCache[strOwner].accounts;\n        }\n        if (this.supportsSrmFeeDiscounts) {\n            // Fee discounts based on (M)SRM holdings supported in newer versions\n            const msrmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.MSRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.MSRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.MSRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(balance, 0),\n                };\n            });\n            const srmAccounts = (await this.getTokenAccountsByOwnerForMint(connection, ownerAddress, token_instructions_1.SRM_MINT)).map(({ pubkey, account }) => {\n                const balance = this.getSplTokenBalanceFromAccountInfo(account, token_instructions_1.SRM_DECIMALS);\n                return {\n                    pubkey,\n                    mint: token_instructions_1.SRM_MINT,\n                    balance,\n                    feeTier: fees_1.getFeeTier(0, balance),\n                };\n            });\n            sortedAccounts = msrmAccounts.concat(srmAccounts).sort((a, b) => {\n                if (a.feeTier > b.feeTier) {\n                    return -1;\n                }\n                else if (a.feeTier < b.feeTier) {\n                    return 1;\n                }\n                else {\n                    if (a.balance > b.balance) {\n                        return -1;\n                    }\n                    else if (a.balance < b.balance) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n            });\n        }\n        this._feeDiscountKeysCache[strOwner] = {\n            accounts: sortedAccounts,\n            ts: now,\n        };\n        return sortedAccounts;\n    }\n    async findBestFeeDiscountKey(connection, ownerAddress, cacheDurationMs = 0) {\n        const accounts = await this.findFeeDiscountKeys(connection, ownerAddress, cacheDurationMs);\n        if (accounts.length > 0) {\n            return {\n                pubkey: accounts[0].pubkey,\n                feeTier: accounts[0].feeTier,\n            };\n        }\n        return {\n            pubkey: null,\n            feeTier: 0,\n        };\n    }\n    async makePlaceOrderTransaction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }, cacheDurationMs = 0, feeDiscountPubkeyCacheDurationMs = 0) {\n        var _a, _b;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        const openOrdersAccounts = await this.findOpenOrdersAccountsForOwner(connection, ownerAddress, cacheDurationMs);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        // Fetch an SRM fee discount key if the market supports discounts and it is not supplied\n        feeDiscountPubkey =\n            feeDiscountPubkey ||\n                (this.supportsSrmFeeDiscounts\n                    ? (await this.findBestFeeDiscountKey(connection, ownerAddress, feeDiscountPubkeyCacheDurationMs)).pubkey\n                    : null);\n        let openOrdersAddress;\n        if (openOrdersAccounts.length === 0) {\n            const newOpenOrdersAccount = new web3_js_1.Account();\n            transaction.add(await OpenOrders.makeCreateAccountTransaction(connection, this.address, ownerAddress, newOpenOrdersAccount.publicKey, this._programId));\n            openOrdersAddress = newOpenOrdersAccount.publicKey;\n            signers.push(newOpenOrdersAccount);\n            // refresh the cache of open order accounts on next fetch\n            this._openOrdersAccountsCache[ownerAddress.toBase58()].ts = 0;\n        }\n        else if (openOrdersAddressKey) {\n            openOrdersAddress = openOrdersAddressKey;\n        }\n        else {\n            openOrdersAddress = openOrdersAccounts[0].address;\n        }\n        let wrappedSolAccount = null;\n        if (payer.equals(ownerAddress)) {\n            if ((side === 'buy' && this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT)) ||\n                (side === 'sell' && this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT))) {\n                wrappedSolAccount = new web3_js_1.Account();\n                let lamports;\n                if (side === 'buy') {\n                    lamports = Math.round(price * size * 1.01 * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].quoteTokenFree.toNumber();\n                    }\n                }\n                else {\n                    lamports = Math.round(size * web3_js_1.LAMPORTS_PER_SOL);\n                    if (openOrdersAccounts.length > 0) {\n                        lamports -= openOrdersAccounts[0].baseTokenFree.toNumber();\n                    }\n                }\n                lamports = Math.max(lamports, 0) + 1e7;\n                transaction.add(web3_js_1.SystemProgram.createAccount({\n                    fromPubkey: ownerAddress,\n                    newAccountPubkey: wrappedSolAccount.publicKey,\n                    lamports,\n                    space: 165,\n                    programId: token_instructions_1.TOKEN_PROGRAM_ID,\n                }));\n                transaction.add(token_instructions_1.initializeAccount({\n                    account: wrappedSolAccount.publicKey,\n                    mint: token_instructions_1.WRAPPED_SOL_MINT,\n                    owner: ownerAddress,\n                }));\n                signers.push(wrappedSolAccount);\n            }\n            else {\n                throw new Error('Invalid payer account');\n            }\n        }\n        const placeOrderInstruction = this.makePlaceOrderInstruction(connection, {\n            owner,\n            payer: (_b = wrappedSolAccount === null || wrappedSolAccount === void 0 ? void 0 : wrappedSolAccount.publicKey) !== null && _b !== void 0 ? _b : payer,\n            side,\n            price,\n            size,\n            orderType,\n            clientId,\n            openOrdersAddressKey: openOrdersAddress,\n            feeDiscountPubkey,\n        });\n        transaction.add(placeOrderInstruction);\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: ownerAddress,\n                owner: ownerAddress,\n            }));\n        }\n        return { transaction, signers, payer: owner };\n    }\n    makePlaceOrderInstruction(connection, { owner, payer, side, price, size, orderType = 'limit', clientId, openOrdersAddressKey, feeDiscountPubkey = null, }) {\n        var _a;\n        // @ts-ignore\n        const ownerAddress = (_a = owner.publicKey) !== null && _a !== void 0 ? _a : owner;\n        if (this.baseSizeNumberToLots(size).lte(new bn_js_1.default(0))) {\n            throw new Error('size too small');\n        }\n        if (this.priceNumberToLots(price).lte(new bn_js_1.default(0))) {\n            throw new Error('invalid price');\n        }\n        if (!this.supportsSrmFeeDiscounts) {\n            feeDiscountPubkey = null;\n        }\n        return instructions_1.DexInstructions.newOrder({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            openOrders: openOrdersAddressKey,\n            owner: ownerAddress,\n            payer,\n            side,\n            limitPrice: this.priceNumberToLots(price),\n            maxQuantity: this.baseSizeNumberToLots(size),\n            orderType,\n            clientId,\n            programId: this._programId,\n            feeDiscountPubkey,\n        });\n    }\n    async _sendTransaction(connection, transaction, signers) {\n        const signature = await connection.sendTransaction(transaction, signers, {\n            skipPreflight: this._skipPreflight,\n        });\n        const { value } = await connection.confirmTransaction(signature, this._commitment);\n        if (value === null || value === void 0 ? void 0 : value.err) {\n            throw new Error(JSON.stringify(value.err));\n        }\n        return signature;\n    }\n    async cancelOrderByClientId(connection, owner, openOrders, clientId) {\n        const transaction = await this.makeCancelOrderByClientIdTransaction(connection, owner.publicKey, openOrders, clientId);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderByClientIdTransaction(connection, owner, openOrders, clientId) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(instructions_1.DexInstructions.cancelOrderByClientId({\n            market: this.address,\n            owner,\n            openOrders,\n            requestQueue: this._decoded.requestQueue,\n            clientId,\n            programId: this._programId,\n        }));\n        return transaction;\n    }\n    async cancelOrder(connection, owner, order) {\n        const transaction = await this.makeCancelOrderTransaction(connection, owner.publicKey, order);\n        return await this._sendTransaction(connection, transaction, [owner]);\n    }\n    async makeCancelOrderTransaction(connection, owner, order) {\n        const transaction = new web3_js_1.Transaction();\n        transaction.add(this.makeCancelOrderInstruction(connection, owner, order));\n        return transaction;\n    }\n    makeCancelOrderInstruction(connection, owner, order) {\n        return instructions_1.DexInstructions.cancelOrder({\n            market: this.address,\n            owner,\n            openOrders: order.openOrdersAddress,\n            requestQueue: this._decoded.requestQueue,\n            side: order.side,\n            orderId: order.orderId,\n            openOrdersSlot: order.openOrdersSlot,\n            programId: this._programId,\n        });\n    }\n    async settleFunds(connection, owner, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        if (!openOrders.owner.equals(owner.publicKey)) {\n            throw new Error('Invalid open orders account');\n        }\n        if (referrerQuoteWallet && !this.supportsReferralFees) {\n            throw new Error('This program ID does not support referrerQuoteWallet');\n        }\n        const { transaction, signers } = await this.makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet);\n        return await this._sendTransaction(connection, transaction, [\n            owner,\n            ...signers,\n        ]);\n    }\n    async makeSettleFundsTransaction(connection, openOrders, baseWallet, quoteWallet, referrerQuoteWallet = null) {\n        // @ts-ignore\n        const vaultSigner = await web3_js_1.PublicKey.createProgramAddress([\n            this.address.toBuffer(),\n            this._decoded.vaultSignerNonce.toArrayLike(buffer_1.Buffer, 'le', 8),\n        ], this._programId);\n        const transaction = new web3_js_1.Transaction();\n        const signers = [];\n        let wrappedSolAccount = null;\n        if ((this.baseMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n            baseWallet.equals(openOrders.owner)) ||\n            (this.quoteMintAddress.equals(token_instructions_1.WRAPPED_SOL_MINT) &&\n                quoteWallet.equals(openOrders.owner))) {\n            wrappedSolAccount = new web3_js_1.Account();\n            transaction.add(web3_js_1.SystemProgram.createAccount({\n                fromPubkey: openOrders.owner,\n                newAccountPubkey: wrappedSolAccount.publicKey,\n                lamports: await connection.getMinimumBalanceForRentExemption(165),\n                space: 165,\n                programId: token_instructions_1.TOKEN_PROGRAM_ID,\n            }));\n            transaction.add(token_instructions_1.initializeAccount({\n                account: wrappedSolAccount.publicKey,\n                mint: token_instructions_1.WRAPPED_SOL_MINT,\n                owner: openOrders.owner,\n            }));\n            signers.push(wrappedSolAccount);\n        }\n        transaction.add(instructions_1.DexInstructions.settleFunds({\n            market: this.address,\n            openOrders: openOrders.address,\n            owner: openOrders.owner,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            baseWallet: baseWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : baseWallet,\n            quoteWallet: quoteWallet.equals(openOrders.owner) && wrappedSolAccount\n                ? wrappedSolAccount.publicKey\n                : quoteWallet,\n            vaultSigner,\n            programId: this._programId,\n            referrerQuoteWallet,\n        }));\n        if (wrappedSolAccount) {\n            transaction.add(token_instructions_1.closeAccount({\n                source: wrappedSolAccount.publicKey,\n                destination: openOrders.owner,\n                owner: openOrders.owner,\n            }));\n        }\n        return { transaction, signers, payer: openOrders.owner };\n    }\n    async matchOrders(connection, feePayer, limit) {\n        const tx = this.makeMatchOrdersTransaction(limit);\n        return await this._sendTransaction(connection, tx, [feePayer]);\n    }\n    makeMatchOrdersTransaction(limit) {\n        const tx = new web3_js_1.Transaction();\n        tx.add(instructions_1.DexInstructions.matchOrders({\n            market: this.address,\n            requestQueue: this._decoded.requestQueue,\n            eventQueue: this._decoded.eventQueue,\n            bids: this._decoded.bids,\n            asks: this._decoded.asks,\n            baseVault: this._decoded.baseVault,\n            quoteVault: this._decoded.quoteVault,\n            limit,\n            programId: this._programId,\n        }));\n        return tx;\n    }\n    async loadRequestQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.requestQueue));\n        return queue_1.decodeRequestQueue(data);\n    }\n    async loadEventQueue(connection) {\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        return queue_1.decodeEventQueue(data);\n    }\n    async loadFills(connection, limit = 100) {\n        // TODO: once there's a separate source of fills use that instead\n        const { data } = throwIfNull(await connection.getAccountInfo(this._decoded.eventQueue));\n        const events = queue_1.decodeEventQueue(data, limit);\n        return events\n            .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n            .map(this.parseFillEvent.bind(this));\n    }\n    parseFillEvent(event) {\n        let size, price, side, priceBeforeFees;\n        if (event.eventFlags.bid) {\n            side = 'buy';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityPaid.add(event.nativeFeeOrRebate)\n                : event.nativeQuantityPaid.sub(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityReleased));\n            size = divideBnToNumber(event.nativeQuantityReleased, this._baseSplTokenMultiplier);\n        }\n        else {\n            side = 'sell';\n            priceBeforeFees = event.eventFlags.maker\n                ? event.nativeQuantityReleased.sub(event.nativeFeeOrRebate)\n                : event.nativeQuantityReleased.add(event.nativeFeeOrRebate);\n            price = divideBnToNumber(priceBeforeFees.mul(this._baseSplTokenMultiplier), this._quoteSplTokenMultiplier.mul(event.nativeQuantityPaid));\n            size = divideBnToNumber(event.nativeQuantityPaid, this._baseSplTokenMultiplier);\n        }\n        return {\n            ...event,\n            side,\n            price,\n            feeCost: this.quoteSplSizeToNumber(event.nativeFeeOrRebate) *\n                (event.eventFlags.maker ? -1 : 1),\n            size,\n        };\n    }\n    get _baseSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._baseSplTokenDecimals));\n    }\n    get _quoteSplTokenMultiplier() {\n        return new bn_js_1.default(10).pow(new bn_js_1.default(this._quoteSplTokenDecimals));\n    }\n    priceLotsToNumber(price) {\n        return divideBnToNumber(price.mul(this._decoded.quoteLotSize).mul(this._baseSplTokenMultiplier), this._decoded.baseLotSize.mul(this._quoteSplTokenMultiplier));\n    }\n    priceNumberToLots(price) {\n        return new bn_js_1.default(Math.round((price *\n            Math.pow(10, this._quoteSplTokenDecimals) *\n            this._decoded.baseLotSize.toNumber()) /\n            (Math.pow(10, this._baseSplTokenDecimals) *\n                this._decoded.quoteLotSize.toNumber())));\n    }\n    baseSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._baseSplTokenMultiplier);\n    }\n    quoteSplSizeToNumber(size) {\n        return divideBnToNumber(size, this._quoteSplTokenMultiplier);\n    }\n    baseSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.baseLotSize), this._baseSplTokenMultiplier);\n    }\n    baseSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._baseSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.baseLotSize);\n    }\n    quoteSizeLotsToNumber(size) {\n        return divideBnToNumber(size.mul(this._decoded.quoteLotSize), this._quoteSplTokenMultiplier);\n    }\n    quoteSizeNumberToLots(size) {\n        const native = new bn_js_1.default(Math.round(size * Math.pow(10, this._quoteSplTokenDecimals)));\n        // rounds down to the nearest lot size\n        return native.div(this._decoded.quoteLotSize);\n    }\n    get minOrderSize() {\n        return this.baseSizeLotsToNumber(new bn_js_1.default(1));\n    }\n    get tickSize() {\n        return this.priceLotsToNumber(new bn_js_1.default(1));\n    }\n}\nexports.Market = Market;\nexports._OPEN_ORDERS_LAYOUT_V1 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    buffer_layout_1.blob(7),\n]);\nexports._OPEN_ORDERS_LAYOUT_V2 = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    layout_1.publicKeyLayout('market'),\n    layout_1.publicKeyLayout('owner'),\n    // These are in spl-token (i.e. not lot) units\n    layout_1.u64('baseTokenFree'),\n    layout_1.u64('baseTokenTotal'),\n    layout_1.u64('quoteTokenFree'),\n    layout_1.u64('quoteTokenTotal'),\n    layout_1.u128('freeSlotBits'),\n    layout_1.u128('isBidBits'),\n    buffer_layout_1.seq(layout_1.u128(), 128, 'orders'),\n    buffer_layout_1.seq(layout_1.u64(), 128, 'clientIds'),\n    layout_1.u64('referrerRebatesAccrued'),\n    buffer_layout_1.blob(7),\n]);\nclass OpenOrders {\n    constructor(address, decoded, programId) {\n        this.address = address;\n        this._programId = programId;\n        Object.assign(this, decoded);\n    }\n    static getLayout(programId) {\n        if (tokens_and_markets_1.getLayoutVersion(programId) === 1) {\n            return exports._OPEN_ORDERS_LAYOUT_V1;\n        }\n        return exports._OPEN_ORDERS_LAYOUT_V2;\n    }\n    static async findForOwner(connection, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async findForMarketAndOwner(connection, marketAddress, ownerAddress, programId) {\n        const filters = [\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('market'),\n                    bytes: marketAddress.toBase58(),\n                },\n            },\n            {\n                memcmp: {\n                    offset: this.getLayout(programId).offsetOf('owner'),\n                    bytes: ownerAddress.toBase58(),\n                },\n            },\n            {\n                dataSize: this.getLayout(programId).span,\n            },\n        ];\n        const accounts = await getFilteredProgramAccounts(connection, programId, filters);\n        return accounts.map(({ publicKey, accountInfo }) => OpenOrders.fromAccountInfo(publicKey, accountInfo, programId));\n    }\n    static async load(connection, address, programId) {\n        const accountInfo = await connection.getAccountInfo(address);\n        if (accountInfo === null) {\n            throw new Error('Open orders account not found');\n        }\n        return OpenOrders.fromAccountInfo(address, accountInfo, programId);\n    }\n    static fromAccountInfo(address, accountInfo, programId) {\n        const { owner, data } = accountInfo;\n        if (!owner.equals(programId)) {\n            throw new Error('Address not owned by program');\n        }\n        const decoded = this.getLayout(programId).decode(data);\n        if (!decoded.accountFlags.initialized || !decoded.accountFlags.openOrders) {\n            throw new Error('Invalid open orders account');\n        }\n        return new OpenOrders(address, decoded, programId);\n    }\n    static async makeCreateAccountTransaction(connection, marketAddress, ownerAddress, newAccountAddress, programId) {\n        return web3_js_1.SystemProgram.createAccount({\n            fromPubkey: ownerAddress,\n            newAccountPubkey: newAccountAddress,\n            lamports: await connection.getMinimumBalanceForRentExemption(this.getLayout(programId).span),\n            space: this.getLayout(programId).span,\n            programId,\n        });\n    }\n    get publicKey() {\n        return this.address;\n    }\n}\nexports.OpenOrders = OpenOrders;\nexports.ORDERBOOK_LAYOUT = buffer_layout_1.struct([\n    buffer_layout_1.blob(5),\n    layout_1.accountFlagsLayout('accountFlags'),\n    slab_1.SLAB_LAYOUT.replicate('slab'),\n    buffer_layout_1.blob(7),\n]);\nclass Orderbook {\n    constructor(market, accountFlags, slab) {\n        if (!accountFlags.initialized || !(accountFlags.bids ^ accountFlags.asks)) {\n            throw new Error('Invalid orderbook');\n        }\n        this.market = market;\n        this.isBids = accountFlags.bids;\n        this.slab = slab;\n    }\n    static get LAYOUT() {\n        return exports.ORDERBOOK_LAYOUT;\n    }\n    static decode(market, buffer) {\n        const { accountFlags, slab } = exports.ORDERBOOK_LAYOUT.decode(buffer);\n        return new Orderbook(market, accountFlags, slab);\n    }\n    getL2(depth) {\n        const descending = this.isBids;\n        const levels = []; // (price, size)\n        for (const { key, quantity } of this.slab.items(descending)) {\n            const price = getPriceFromKey(key);\n            if (levels.length > 0 && levels[levels.length - 1][0].eq(price)) {\n                levels[levels.length - 1][1].iadd(quantity);\n            }\n            else if (levels.length === depth) {\n                break;\n            }\n            else {\n                levels.push([price, quantity]);\n            }\n        }\n        return levels.map(([priceLots, sizeLots]) => [\n            this.market.priceLotsToNumber(priceLots),\n            this.market.baseSizeLotsToNumber(sizeLots),\n            priceLots,\n            sizeLots,\n        ]);\n    }\n    *[Symbol.iterator]() {\n        for (const { key, ownerSlot, owner, quantity, feeTier, clientOrderId, } of this.slab) {\n            const price = getPriceFromKey(key);\n            yield {\n                orderId: key,\n                clientId: clientOrderId,\n                openOrdersAddress: owner,\n                openOrdersSlot: ownerSlot,\n                feeTier,\n                price: this.market.priceLotsToNumber(price),\n                priceLots: price,\n                size: this.market.baseSizeLotsToNumber(quantity),\n                sizeLots: quantity,\n                side: (this.isBids ? 'buy' : 'sell'),\n            };\n        }\n    }\n}\nexports.Orderbook = Orderbook;\nfunction getPriceFromKey(key) {\n    return key.ushrn(64);\n}\nfunction divideBnToNumber(numerator, denominator) {\n    const quotient = numerator.div(denominator).toNumber();\n    const rem = numerator.umod(denominator);\n    const gcd = rem.gcd(denominator);\n    return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\nconst MINT_LAYOUT = buffer_layout_1.struct([buffer_layout_1.blob(44), buffer_layout_1.u8('decimals'), buffer_layout_1.blob(37)]);\nasync function getMintDecimals(connection, mint) {\n    if (mint.equals(token_instructions_1.WRAPPED_SOL_MINT)) {\n        return 9;\n    }\n    const { data } = throwIfNull(await connection.getAccountInfo(mint), 'mint not found');\n    const { decimals } = MINT_LAYOUT.decode(data);\n    return decimals;\n}\nexports.getMintDecimals = getMintDecimals;\nasync function getFilteredProgramAccounts(connection, programId, filters) {\n    // @ts-ignore\n    const resp = await connection._rpcRequest('getProgramAccounts', [\n        programId.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n            encoding: 'base64',\n        },\n    ]);\n    if (resp.error) {\n        throw new Error(resp.error.message);\n    }\n    return resp.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new web3_js_1.PublicKey(pubkey),\n        accountInfo: {\n            data: buffer_1.Buffer.from(data[0], 'base64'),\n            executable,\n            owner: new web3_js_1.PublicKey(owner),\n            lamports,\n        },\n    }));\n}\nfunction throwIfNull(value, message = 'account not found') {\n    if (value === null) {\n        throw new Error(message);\n    }\n    return value;\n}\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slab = exports.SLAB_LAYOUT = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst layout_1 = require(\"./layout\");\nconst SLAB_HEADER_LAYOUT = buffer_layout_1.struct([\n    // Number of modified slab nodes\n    buffer_layout_1.u32('bumpIndex'),\n    layout_1.zeros(4),\n    // Linked list of unused nodes\n    buffer_layout_1.u32('freeListLen'),\n    layout_1.zeros(4),\n    buffer_layout_1.u32('freeListHead'),\n    buffer_layout_1.u32('root'),\n    buffer_layout_1.u32('leafCount'),\n    layout_1.zeros(4),\n], 'header');\nconst SLAB_NODE_LAYOUT = buffer_layout_1.union(buffer_layout_1.u32('tag'), buffer_layout_1.blob(68), 'node');\nSLAB_NODE_LAYOUT.addVariant(0, buffer_layout_1.struct([]), 'uninitialized');\nSLAB_NODE_LAYOUT.addVariant(1, buffer_layout_1.struct([\n    // Only the first prefixLen high-order bits of key are meaningful\n    buffer_layout_1.u32('prefixLen'),\n    layout_1.u128('key'),\n    buffer_layout_1.seq(buffer_layout_1.u32(), 2, 'children'),\n]), 'innerNode');\nSLAB_NODE_LAYOUT.addVariant(2, buffer_layout_1.struct([\n    buffer_layout_1.u8('ownerSlot'),\n    buffer_layout_1.u8('feeTier'),\n    buffer_layout_1.blob(2),\n    layout_1.u128('key'),\n    layout_1.publicKeyLayout('owner'),\n    layout_1.u64('quantity'),\n    layout_1.u64('clientOrderId'),\n]), 'leafNode');\nSLAB_NODE_LAYOUT.addVariant(3, buffer_layout_1.struct([buffer_layout_1.u32('next')]), 'freeNode');\nSLAB_NODE_LAYOUT.addVariant(4, buffer_layout_1.struct([]), 'lastFreeNode');\nexports.SLAB_LAYOUT = buffer_layout_1.struct([\n    SLAB_HEADER_LAYOUT,\n    buffer_layout_1.seq(SLAB_NODE_LAYOUT, buffer_layout_1.offset(SLAB_HEADER_LAYOUT.layoutFor('bumpIndex'), SLAB_HEADER_LAYOUT.offsetOf('bumpIndex') - SLAB_HEADER_LAYOUT.span), 'nodes'),\n]);\nclass Slab {\n    constructor(header, nodes) {\n        this.header = header;\n        this.nodes = nodes;\n    }\n    static decode(buffer) {\n        return exports.SLAB_LAYOUT.decode(buffer);\n    }\n    get(searchKey) {\n        if (this.header.leafCount === 0) {\n            return null;\n        }\n        if (!(searchKey instanceof bn_js_1.default)) {\n            searchKey = new bn_js_1.default(searchKey);\n        }\n        let index = this.header.root;\n        while (true) {\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                if (leafNode.key.eq(searchKey)) {\n                    return leafNode;\n                }\n                return null;\n            }\n            else if (innerNode) {\n                if (!innerNode.key\n                    .xor(searchKey)\n                    .iushrn(128 - innerNode.prefixLen)\n                    .isZero()) {\n                    return null;\n                }\n                index =\n                    innerNode.children[searchKey.testn(128 - innerNode.prefixLen - 1) ? 1 : 0];\n            }\n            else {\n                throw new Error('Invalid slab');\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this.items(false);\n    }\n    *items(descending = false) {\n        if (this.header.leafCount === 0) {\n            return;\n        }\n        const stack = [this.header.root];\n        while (stack.length > 0) {\n            const index = stack.pop();\n            const { leafNode, innerNode } = this.nodes[index];\n            if (leafNode) {\n                yield leafNode;\n            }\n            else if (innerNode) {\n                if (descending) {\n                    stack.push(innerNode.children[0], innerNode.children[1]);\n                }\n                else {\n                    stack.push(innerNode.children[1], innerNode.children[0]);\n                }\n            }\n        }\n    }\n}\nexports.Slab = Slab;\nlayout_1.setLayoutDecoder(exports.SLAB_LAYOUT, ({ header, nodes }) => new Slab(header, nodes));\n//# sourceMappingURL=slab.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWallet = exports.Provider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nclass Provider {\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: 'max',\n        };\n    }\n    static local(url, opts) {\n        opts = opts || Provider.defaultOptions();\n        const connection = new web3_js_1.Connection(url || 'http://localhost:8899', opts.preflightCommitment);\n        const wallet = NodeWallet.local();\n        return new Provider(connection, wallet, opts);\n    }\n    async send(tx, signers, opts) {\n        if (signers === undefined) {\n            signers = [];\n        }\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const signerKps = signers.filter(s => s !== undefined);\n        const signerPubkeys = [this.wallet.publicKey].concat(signerKps.map(s => s.publicKey));\n        tx.setSigners(...signerPubkeys);\n        tx.recentBlockhash = (await this.connection.getRecentBlockhash(opts.preflightCommitment)).blockhash;\n        await this.wallet.signTransaction(tx);\n        signerKps.forEach(kp => {\n            tx.partialSign(kp);\n        });\n        const rawTx = tx.serialize();\n        const txId = await this.connection.sendRawTransaction(rawTx, opts);\n        await this.connection.confirmTransaction(txId, this.opts.preflightCommitment);\n        return txId;\n    }\n}\nexports.Provider = Provider;\nclass NodeWallet {\n    constructor(payer) {\n        this.payer = payer;\n    }\n    static local() {\n        const payer = new web3_js_1.Account(Buffer.from(JSON.parse(require('fs').readFileSync(require('os').homedir() + '/.config/solana/id.json', {\n            encoding: 'utf-8',\n        }))));\n        return new NodeWallet(payer);\n    }\n    async signTransaction(tx) {\n        tx.partialSign(this.payer);\n        return tx;\n    }\n    get publicKey() {\n        return this.payer.publicKey;\n    }\n}\nexports.NodeWallet = NodeWallet;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOwnedAccountsFilters = exports.parseMintData = exports.parseTokenAccountData = exports.MINT_LAYOUT = exports.ACCOUNT_LAYOUT = exports.getOwnedTokenAccounts = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst serum_1 = require(\"@project-serum/serum\");\nconst bs58 = __importStar(require(\"bs58\"));\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nasync function getOwnedTokenAccounts(connection, publicKey) {\n    let filters = getOwnedAccountsFilters(publicKey);\n    // @ts-ignore\n    let resp = await connection._rpcRequest('getProgramAccounts', [\n        serum_1.TokenInstructions.TOKEN_PROGRAM_ID.toBase58(),\n        {\n            commitment: connection.commitment,\n            filters,\n        },\n    ]);\n    if (resp.error) {\n        throw new Error('failed to get token accounts owned by ' +\n            publicKey.toBase58() +\n            ': ' +\n            resp.error.message);\n    }\n    return (resp.result\n        // @ts-ignore\n        .map(({ pubkey, account: { data } }) => {\n        data = bs58.decode(data);\n        return {\n            publicKey: new web3_js_1.PublicKey(pubkey),\n            account: parseTokenAccountData(data),\n        };\n    }));\n}\nexports.getOwnedTokenAccounts = getOwnedTokenAccounts;\n// todo: remove\nexports.ACCOUNT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(32, 'mint'),\n    BufferLayout.blob(32, 'owner'),\n    BufferLayout.nu64('amount'),\n    BufferLayout.blob(93),\n]);\nexports.MINT_LAYOUT = BufferLayout.struct([\n    BufferLayout.blob(44),\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(37),\n]);\nfunction parseTokenAccountData(data) {\n    // @ts-ignore\n    let { mint, owner, amount } = exports.ACCOUNT_LAYOUT.decode(data);\n    return {\n        mint: new web3_js_1.PublicKey(mint),\n        owner: new web3_js_1.PublicKey(owner),\n        amount,\n    };\n}\nexports.parseTokenAccountData = parseTokenAccountData;\n// @ts-ignore\nfunction parseMintData(data) {\n    // @ts-ignore\n    let { decimals } = exports.MINT_LAYOUT.decode(data);\n    return { decimals };\n}\nexports.parseMintData = parseMintData;\n// @ts-ignore\nfunction getOwnedAccountsFilters(publicKey) {\n    return [\n        {\n            memcmp: {\n                // @ts-ignore\n                offset: exports.ACCOUNT_LAYOUT.offsetOf('owner'),\n                bytes: publicKey.toBase58(),\n            },\n        },\n        {\n            dataSize: exports.ACCOUNT_LAYOUT.span,\n        },\n    ];\n}\nexports.getOwnedAccountsFilters = getOwnedAccountsFilters;\n//# sourceMappingURL=token.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.networks = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nexports.networks = {\n    devnet: {\n        // Cluster.\n        label: 'Devnet',\n        url: 'https://devnet.solana.com',\n        explorerClusterSuffix: 'devnet',\n        srm: new web3_js_1.PublicKey('DLRk8GWo1YF4Kc5DrVQkaMDQti27VVGzR3Y1Tm8Frpyj'), msrm: new web3_js_1.PublicKey('CrtnNeZg3tnRKnxxYxjsnkYNk1xRjhEci8ZJhuRAU7WX'), god: new web3_js_1.PublicKey('HtbxQ8ZfenVhw5G8GSVK5nymbNXXo37fwwp9sjAjaBEx'), megaGod: new web3_js_1.PublicKey('DKmDLZUUkfaFEQ3PWYezmoL3BwaEt1QHHYrLGPWuCMiV'), registryProgramId: new web3_js_1.PublicKey('G5W9X8gjf2v8QH3D7aQrFhHSxMK7sxB1wQQpKPue2Nnv'), stakeProgramId: new web3_js_1.PublicKey('APU8W2tEUhiAAeaiEtYKdaMtB3KrBQXqyiinvjGurvBf'), lockupProgramId: new web3_js_1.PublicKey('Bk9M7yycNZiKkFtKDzzLQAhvQjWMqxYSFJzxFspL9uJ'), retbufProgramId: new web3_js_1.PublicKey('3w2Q6XjS2BDpxHVRzs8oWbNuH7ivZp1mVo3mbq318oyG'), metaEntityProgramId: new web3_js_1.PublicKey('H6PGzjRWMBd2dajxL5ZjDc9LU4onSB5PbrqHS94Hgoed'), registrar: new web3_js_1.PublicKey('2w6i8FLi7DJ2UrTTGeKwkotgvM2k9FtfcP7vLfzT5pnx'), rewardEventQueue: new web3_js_1.PublicKey('ozD1sY1rdizmPkr29PCyrWVrUC73HLQurTnvtsFmC6P'), safe: new web3_js_1.PublicKey('2u8tjVJuz8P7EYa4WL3x2oHndjZLZNfA4vkWaa3SP75f'), retbuf: new web3_js_1.PublicKey('8PUeeTe22fHJqTVB5wahQmqZjaHzDPC7arYhWSnTLqZA'), defaultEntity: new web3_js_1.PublicKey('GQmf9Ag2EHC6RyJuxyEkUMMRzB8zhhSEq8Bmae7Wxyhi'),\n    },\n    // Fill in with your local cluster addresses.\n    localhost: {\n        // Cluster.\n        label: 'Localhost',\n        url: 'http://localhost:8899',\n        explorerClusterSuffix: 'localhost',\n        srm: new web3_js_1.PublicKey('H5wLXfiqtmGi4ev26tUdRZX72aCBMDV3Pvrhs8Y1kqAB'),\n        msrm: new web3_js_1.PublicKey('3Lik4QqQcVWxdbWMPq2TwkZtdJ6q2b8Leq3oJtJ7Kdvc'),\n        god: new web3_js_1.PublicKey('3kPUU1rNv2mgF2eHiQ9ASXW3h3oGLU2gd6Vko24zDGV8'),\n        megaGod: new web3_js_1.PublicKey('2FXpbTjXL19xR1wgTAYkbzezmaVBb8Nq36mEU4hLbei1'),\n        registryProgramId: new web3_js_1.PublicKey('8cWE1kMSSsPARK8HDKPKn3CwiQNLY5BnMgeLkf9a7cf7'),\n        stakeProgramId: new web3_js_1.PublicKey('6SRAkzPewufqaksdyoi2Bm11fsdfEKQEUhqt39jP1xAH'),\n        lockupProgramId: new web3_js_1.PublicKey('Dpn2ocEBcw7Egq9zPqHs4KaoNSQ2hkp3Z17944i3JVVq'),\n        retbufProgramId: new web3_js_1.PublicKey('shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL'),\n        metaEntityProgramId: new web3_js_1.PublicKey('HukhW7vi1qNtmUdwPpsMFxa4fcwDBKfChUyq6yVoB39f'),\n        registrar: new web3_js_1.PublicKey('HkHT338nBQn9ykYsmUVhwBnoJqwJAcV5cKWHRJWRwRiF'),\n        rewardEventQueue: new web3_js_1.PublicKey('A7esEQBbmZwCHZmPMecRS66UpvFFBzkcQyHkiZHYYQin'),\n        safe: new web3_js_1.PublicKey('ERXnUzAfWdTAEsLh8nbJmr1CaBsJJZSGe7t9q3fShy49'),\n        retbuf: new web3_js_1.PublicKey('J3oASzmAYnGaFgkpj4w5wXxn82jX67YwnFJtarhTHy72'),\n        defaultEntity: new web3_js_1.PublicKey('76uKR9Xw1Foert1EEhurdsTbYKWJ8GCTVBJyFUjN8okn'),\n    },\n};\n//# sourceMappingURL=networks.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateTransaction = void 0;\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(connection, transaction, commitment) {\n    // @ts-ignore\n    transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching);\n    const signData = transaction.serializeMessage();\n    // @ts-ignore\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = { encoding: 'base64', commitment };\n    const args = [encodedTransaction, config];\n    // @ts-ignore\n    const res = await connection._rpcRequest('simulateTransaction', args);\n    if (res.error) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n    }\n    return res.result;\n}\nexports.simulateTransaction = simulateTransaction;\n//# sourceMappingURL=simulate-transaction.js.map","export type Action = {\n  type: ActionType;\n  item: any;\n};\n\nexport enum ActionType {\n  // Common.\n  CommonTriggerBootstrap,\n  CommonAppWillBootstrap,\n  CommonAppDidBootstrap,\n  CommonTriggerShutdown,\n  CommonDidShutdown,\n  CommonWalletDidConnect,\n  CommonWalletDidDisconnect,\n  CommonWalletSetProvider,\n  CommonSetNetwork,\n  CommonOwnedTokenAccountsSet,\n  CommonWalletReset,\n\n  // Lockup.\n  LockupSetSafe,\n  LockupSetVestings,\n  LockupCreateVesting,\n\n  // Registry.\n  RegistryCreateEntity,\n  RegistrySetEntities,\n  RegistryUpdateEntity,\n  RegistrySetMember,\n  RegistrySetMetadata,\n  RegistrySetRewardEventQueue,\n  RegistryCreateMetadata,\n  RegistrySetPools,\n  RegistrySetRegistrar,\n  RegistrySetPendingWithdrawals,\n  RegistryCreatePendingWithdrawal,\n  RegistryUpdatePendingWithdrawal,\n  RegistryCreateRewardVendor,\n}\n","import { AccountInfo as TokenAccount, MintInfo } from '@solana/spl-token';\nimport * as lockup from '@project-serum/lockup';\nimport * as registry from '@project-serum/registry';\nimport { PoolState } from '@project-serum/pool';\nimport {\n  ProgramAccount as CommonProgramAccount,\n  networks,\n  Network,\n} from '@project-serum/common';\nimport { Action, ActionType } from './actions';\n\nexport enum BootstrapState {\n  NeedsBootstrap,\n  IsBootstrapping,\n  Bootstrapped,\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n): State {\n  let newState = {\n    common: { ...state.common },\n    lockup: { ...state.lockup },\n    registry: { ...state.registry },\n  };\n  switch (action.type) {\n    // Common.\n    case ActionType.CommonAppWillBootstrap:\n      newState.common.bootstrapState = BootstrapState.IsBootstrapping;\n      newState.common.bootstrapTrigger = false;\n      return newState;\n    case ActionType.CommonAppDidBootstrap:\n      newState.common.bootstrapState = BootstrapState.Bootstrapped;\n      return newState;\n    case ActionType.CommonWalletSetProvider:\n      newState.common.walletProvider = action.item.walletProvider;\n      return newState;\n    case ActionType.CommonWalletDidConnect:\n      newState.common.isWalletConnected = true;\n      return newState;\n    case ActionType.CommonWalletDidDisconnect:\n      newState.common.isWalletConnected = false;\n      return newState;\n    case ActionType.CommonSetNetwork:\n      if (newState.common.network.label !== action.item.network.label) {\n        newState.common.network = action.item.network;\n        newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n        newState.common.shutdownTrigger = true;\n      }\n      return newState;\n    case ActionType.CommonTriggerBootstrap:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.bootstrapTrigger = true;\n      return newState;\n    case ActionType.CommonTriggerShutdown:\n      newState.common.bootstrapState = BootstrapState.NeedsBootstrap;\n      newState.common.shutdownTrigger = true;\n      return newState;\n    case ActionType.CommonDidShutdown:\n      // Reset everything except network.\n      let s = {\n        ...initialState,\n      };\n      s.common.network = newState.common.network;\n      return s;\n    case ActionType.CommonOwnedTokenAccountsSet:\n      newState.common.ownedTokenAccounts = action.item.ownedTokenAccounts;\n      return newState;\n\n    // Lockup.\n    case ActionType.LockupSetVestings:\n      newState.lockup.vestings = action.item.vestingAccounts;\n      return newState;\n    case ActionType.LockupCreateVesting:\n      newState.lockup.vestings.unshift(action.item.vesting);\n      return newState;\n    case ActionType.LockupSetSafe:\n      newState.lockup.safe = action.item.safe;\n      return newState;\n\n    // Registry.\n    case ActionType.RegistryCreateEntity:\n      newState.registry.entities.unshift(action.item.entity);\n      return newState;\n    case ActionType.RegistrySetEntities:\n      newState.registry.entities = action.item.entities;\n      return newState;\n    case ActionType.RegistryUpdateEntity:\n      newState.registry.entities = newState.registry.entities.map(e => {\n        if (\n          e.publicKey.toString() === action.item.entity.publicKey.toString()\n        ) {\n          e = action.item.entity;\n        }\n        return { ...e };\n      });\n      return newState;\n    case ActionType.RegistrySetMember:\n      newState.registry.member = action.item.member;\n      return newState;\n    case ActionType.RegistrySetPools:\n      newState.registry.pool = action.item.pool;\n      newState.registry.poolTokenMint = action.item.poolTokenMint;\n      newState.registry.poolVault = action.item.poolVault;\n      newState.registry.megaPool = action.item.megaPool;\n      newState.registry.megaPoolTokenMint = action.item.megaPoolTokenMint;\n      newState.registry.megaPoolVaults = action.item.megaPoolVaults;\n      return newState;\n    case ActionType.RegistrySetRegistrar:\n      newState.registry.registrar = action.item.registrar;\n      return newState;\n    case ActionType.RegistrySetPendingWithdrawals:\n      newState.registry.pendingWithdrawals = new Map(\n        newState.registry.pendingWithdrawals,\n      ).set(\n        action.item.memberPublicKey.toString(),\n        action.item.pendingWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistryCreatePendingWithdrawal:\n      const oldPw = newState.registry.pendingWithdrawals;\n      const memberWithdrawals = oldPw.has(\n        action.item.memberPublicKey.toString(),\n      )\n        ? [\n            ...(oldPw.get(\n              action.item.memberPublicKey.toString(),\n            ) as ProgramAccount<registry.accounts.PendingWithdrawal>[]),\n          ]\n        : [];\n      memberWithdrawals.unshift(action.item.pendingWithdrawal);\n      newState.registry.pendingWithdrawals = new Map(oldPw).set(\n        action.item.memberPublicKey.toString(),\n        memberWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistryUpdatePendingWithdrawal:\n      const allPendingWithdrawals = new Map(\n        newState.registry.pendingWithdrawals,\n      );\n      const memberPendingWithdrawals = allPendingWithdrawals\n        .get(action.item.memberPublicKey.toString())!\n        .map(pw => {\n          if (\n            pw.publicKey.toString() ===\n            action.item.pendingWithdrawal.publicKey.toString()\n          ) {\n            return action.item.pendingWithdrawal;\n          }\n          return pw;\n        });\n\n      newState.registry.pendingWithdrawals.set(\n        action.item.memberPublicKey.toString(),\n        memberPendingWithdrawals,\n      );\n      return newState;\n    case ActionType.RegistrySetMetadata:\n      const entityMetadata = new Map();\n      action.item.entityMetadata.forEach(\n        (\n          emd: ProgramAccount<registry.metaEntity.accounts.metadata.Metadata>,\n        ) => {\n          entityMetadata.set(emd.account.entity.toString(), emd);\n        },\n      );\n      newState.registry.entityMetadata = entityMetadata;\n      return newState;\n    case ActionType.RegistryCreateMetadata:\n      const emd = new Map(newState.registry.entityMetadata);\n      emd.set(action.item.entityPublicKey.toString(), action.item.metadata);\n      newState.registry.entityMetadata = emd;\n      return newState;\n    case ActionType.RegistrySetRewardEventQueue:\n      newState.registry.rewardEventQueue = action.item.rewardEventQueue;\n      return newState;\n    case ActionType.RegistryCreateRewardVendor:\n      const vendors = new Map(newState.registry.vendors);\n      vendors.set(action.item.vendor.publicKey.toString(), action.item.vendor);\n      newState.registry.vendors = vendors;\n      return newState;\n    // Misc.\n    default:\n      return newState;\n  }\n}\n\nexport type State = {\n  common: CommonState;\n  lockup: LockupState;\n  registry: RegistryState;\n};\n\nexport type CommonState = {\n  walletProvider?: string;\n  isWalletConnected: boolean;\n  bootstrapTrigger: boolean;\n  bootstrapState: BootstrapState;\n  shutdownTrigger: boolean;\n  network: Network;\n  ownedTokenAccounts: ProgramAccount<TokenAccount>[];\n};\n\nexport type LockupState = {\n  safe?: ProgramAccount<lockup.accounts.Safe>;\n  vestings: ProgramAccount<lockup.accounts.Vesting>[];\n};\n\nexport type RegistryState = {\n  entities: ProgramAccount<registry.accounts.Entity>[];\n  entityMetadata: Map<\n    string,\n    ProgramAccount<registry.metaEntity.accounts.metadata.Metadata>\n  >;\n  member?: ProgramAccount<registry.accounts.Member>;\n  pool?: ProgramAccount<PoolState>;\n  poolTokenMint?: ProgramAccount<MintInfo>;\n  poolVault?: ProgramAccount<TokenAccount>;\n  megaPool?: ProgramAccount<PoolState>;\n  megaPoolTokenMint?: ProgramAccount<MintInfo>;\n  megaPoolVaults?: ProgramAccount<TokenAccount>[];\n  registrar?: ProgramAccount<registry.accounts.Registrar>;\n  pendingWithdrawals: Map<\n    string,\n    Array<ProgramAccount<registry.accounts.PendingWithdrawal>>\n  >;\n  rewardEventQueue?: ProgramAccount<registry.accounts.RewardEventQueue>;\n  vendors: Map<string, ProgramAccount<registry.accounts.LockedRewardVendor>>;\n};\n\nexport const initialState: State = {\n  common: {\n    bootstrapTrigger: false,\n    shutdownTrigger: false,\n    isWalletConnected: false,\n    walletProvider: 'https://www.sollet.io',\n    bootstrapState: BootstrapState.NeedsBootstrap,\n    network: networks.devnet,\n    ownedTokenAccounts: [],\n  },\n  lockup: {\n    vestings: [],\n  },\n  registry: {\n    entities: [],\n    entityMetadata: new Map(),\n    pendingWithdrawals: new Map(),\n    vendors: new Map(),\n  },\n};\n\n// Re-export.\nexport type ProgramAccount<T> = CommonProgramAccount<T>;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(reducer);\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useContext,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { Connection } from '@solana/web3.js';\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { Provider } from '@project-serum/common';\nimport { Client as LockupClient } from '@project-serum/lockup';\nimport { Client as RegistryClient } from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error('Missing wallet context');\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  lockupClient: LockupClient;\n  registryClient: RegistryClient;\n};\n\nexport default function WalletProvider(\n  props: PropsWithChildren<ReactNode>,\n): ReactElement {\n  const { walletProvider, network } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      network: state.common.network,\n    };\n  });\n\n  const { wallet, lockupClient, registryClient } = useMemo(() => {\n    const preflightCommitment = 'recent';\n    const opts: { preflightCommitment: 'recent' } = {\n      preflightCommitment,\n    };\n    const connection = new Connection(network.url, preflightCommitment);\n    const wallet = new Wallet(walletProvider, network.url);\n    const provider = new Provider(connection, wallet, opts);\n    RegistryClient.setRetbuf(network.retbuf, network.retbufProgramId);\n\n    return {\n      wallet,\n      lockupClient: new LockupClient({\n        provider,\n        programId: network.lockupProgramId,\n        safe: network.safe,\n      }),\n      registryClient: new RegistryClient({\n        provider,\n        programId: network.registryProgramId,\n        stakeProgramId: network.stakeProgramId,\n        metaEntityProgramId: network.metaEntityProgramId,\n        registrar: network.registrar,\n        rewardEventQueue: network.rewardEventQueue,\n      }),\n    };\n  }, [walletProvider, network]);\n\n  return (\n    <WalletContext.Provider value={{ wallet, lockupClient, registryClient }}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n","import React, {\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { sleep, token, ProgramAccount } from '@project-serum/common';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from './WalletProvider';\n\n// BootstrapProvider performs data fetching on application startup.\nexport default function BootstrapProvider(props: PropsWithChildren<ReactNode>) {\n  const { bootstrapTrigger, shutdownTrigger, network } = useSelector(\n    (state: StoreState) => {\n      return {\n        bootstrapTrigger: state.common.bootstrapTrigger,\n        shutdownTrigger: state.common.shutdownTrigger,\n        network: state.common.network,\n      };\n    },\n  );\n  const dispatch = useDispatch();\n  const { wallet, lockupClient, registryClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Entry point for bootstrapping all the data for the app.\n  const bootstrap = useCallback(async () => {\n    // Websocket subscriptions.\n    const startSubscriptions = () => {\n      // Reward event queue subscription.\n      const conn = registryClient.accounts.rewardEventQueueConnect(\n        registryClient.rewardEventQueue,\n      );\n      conn.on(\n        'connected',\n        (\n          rewardEventQueue: ProgramAccount<registry.accounts.RewardEventQueue>,\n        ) => {\n          dispatch({\n            type: ActionType.RegistrySetRewardEventQueue,\n            item: {\n              rewardEventQueue,\n            },\n          });\n        },\n      );\n      conn.on(\n        'change',\n        (\n          rewardEventQueue: ProgramAccount<registry.accounts.RewardEventQueue>,\n        ) => {\n          dispatch({\n            type: ActionType.RegistrySetRewardEventQueue,\n            item: {\n              rewardEventQueue,\n            },\n          });\n        },\n      );\n    };\n    const fetchEntityAccounts = async () => {\n      const entityAccounts = await registryClient.accounts.allEntities();\n      dispatch({\n        type: ActionType.RegistrySetEntities,\n        item: {\n          entities: entityAccounts,\n        },\n      });\n      // TODO: fetching all the metadata like this is dumb as shit. Need to either\n      //       create an offchain index for the join, lazily fetch it on\n      //       demand, or denormalize and throw all the metadata into the Entity\n      //       struct.\n      const entityMetadata = await registryClient.accounts.allMetadata();\n      // TODO: don't special case this.\n      const defaultEntity = entityAccounts\n        .filter(\n          e => e.publicKey.toString() === network.defaultEntity.toString(),\n        )\n        .pop();\n      const defaultMetadata = {\n        publicKey: defaultEntity!.account.metadata,\n        account: await registryClient.accounts.metadata(\n          defaultEntity!.account.metadata,\n        ),\n      };\n      entityMetadata.push(defaultMetadata);\n      dispatch({\n        type: ActionType.RegistrySetMetadata,\n        item: {\n          entityMetadata,\n        },\n      });\n    };\n\n    // Getting rate limited so break up RPC requests and sleep.\n    const fetchPoolData = async () => {\n      const registrar = await registryClient.accounts.registrar();\n      await sleep(1000 * 2);\n      const pool = await registryClient.accounts.pool(registrar);\n      await sleep(1000 * 2);\n      const poolVault = await registryClient.accounts.poolVault(registrar);\n      await sleep(1000 * 2);\n      const megaPool = await registryClient.accounts.megaPool(registrar);\n      await sleep(1000 * 2);\n      const megaPoolVaults = await registryClient.accounts.megaPoolVaults(\n        registrar,\n      );\n      await sleep(1000 * 2);\n      const poolTokenMint = await registryClient.accounts.poolTokenMint(\n        pool,\n        registrar,\n      );\n      await sleep(1000 * 2);\n      const megaPoolTokenMint = await registryClient.accounts.megaPoolTokenMint(\n        megaPool,\n        registrar,\n      );\n\n      dispatch({\n        type: ActionType.RegistrySetPools,\n        item: {\n          pool: {\n            publicKey: registrar.pool,\n            account: pool,\n          },\n          poolTokenMint: {\n            publicKey: pool.poolTokenMint,\n            account: poolTokenMint,\n          },\n          poolVault: {\n            publicKey: pool.assets[0].vaultAddress,\n            account: poolVault,\n          },\n          megaPool: {\n            publicKey: registrar.megaPool,\n            account: megaPool,\n          },\n          megaPoolTokenMint: {\n            publicKey: megaPool.poolTokenMint,\n            account: megaPoolTokenMint,\n          },\n          megaPoolVaults: megaPoolVaults.map((v, idx) => {\n            return {\n              publicKey: megaPool.assets[idx].vaultAddress,\n              account: v,\n            };\n          }),\n        },\n      });\n    };\n\n    const fetchRegistrar = async () => {\n      const registrar = await registryClient.accounts.registrar();\n      dispatch({\n        type: ActionType.RegistrySetRegistrar,\n        item: {\n          registrar: {\n            publicKey: registryClient.registrar,\n            account: registrar,\n          },\n        },\n      });\n    };\n\n    const fetchSafe = async () => {\n      const lockup = await lockupClient.accounts.safe();\n      dispatch({\n        type: ActionType.LockupSetSafe,\n        item: {\n          safe: {\n            publicKey: lockupClient.safe,\n            account: lockup,\n          },\n        },\n      });\n    };\n\n    // Connections.\n\n    const fetchOwnedTokenAccounts = async () => {\n      const ownedTokenAccounts = await token.getOwnedTokenAccounts(\n        lockupClient.provider.connection,\n        wallet.publicKey,\n      );\n      dispatch({\n        type: ActionType.CommonOwnedTokenAccountsSet,\n        item: {\n          ownedTokenAccounts,\n        },\n      });\n    };\n\n    const fetchVestingAccounts = async () => {\n      const vestingAccounts = await lockupClient.accounts.allVestings(\n        wallet.publicKey,\n      );\n      dispatch({\n        type: ActionType.LockupSetVestings,\n        item: {\n          vestingAccounts,\n        },\n      });\n    };\n\n    const fetchMemberAccount = async () => {\n      const members = await registryClient.accounts.membersWithBeneficiary(\n        wallet.publicKey,\n      );\n\n      if (members.length > 0) {\n        const member = members[0];\n        const pendingWithdrawals = await registryClient.accounts.pendingWithdrawalsForMember(\n          member.publicKey,\n        );\n        // TODO: probably want a UI to handle multiple member accounts and\n        //       choosing between them.\n        dispatch({\n          type: ActionType.RegistrySetMember,\n          item: {\n            member,\n          },\n        });\n        dispatch({\n          type: ActionType.RegistrySetPendingWithdrawals,\n          item: {\n            memberPublicKey: member.publicKey,\n            pendingWithdrawals,\n          },\n        });\n      }\n    };\n\n    enqueueSnackbar(`Connecting to ${network.label}`, {\n      variant: 'info',\n      autoHideDuration: 2500,\n    });\n\n    dispatch({\n      type: ActionType.CommonAppWillBootstrap,\n      item: {},\n    });\n\n    // Break up to avoid rate limits.\n    startSubscriptions();\n    await fetchRegistrar();\n    await fetchSafe();\n    await fetchEntityAccounts();\n    await fetchPoolData();\n    await fetchOwnedTokenAccounts();\n    await fetchVestingAccounts();\n    await fetchMemberAccount();\n\n    dispatch({\n      type: ActionType.CommonAppDidBootstrap,\n      item: {},\n    });\n\n    enqueueSnackbar(`Connection established`, {\n      variant: 'success',\n      autoHideDuration: 2500,\n    });\n  }, [\n    lockupClient.safe,\n    lockupClient.accounts,\n    dispatch,\n    enqueueSnackbar,\n    network.label,\n    registryClient.accounts,\n    registryClient.registrar,\n    registryClient.rewardEventQueue,\n    wallet.publicKey,\n    network.defaultEntity,\n    lockupClient.provider.connection,\n  ]);\n\n  const shutdown = useCallback(async () => {\n    wallet.disconnect();\n    try {\n      registryClient.accounts.rewardEventQueueDisconnect();\n    } catch (err) {\n      console.error('Error disconnecting listeners', err);\n    }\n    dispatch({\n      type: ActionType.CommonDidShutdown,\n      item: {},\n    });\n  }, [registryClient.accounts, dispatch, wallet]);\n\n  useEffect(() => {\n    if (bootstrapTrigger) {\n      bootstrap().catch(err => {\n        enqueueSnackbar(`Error bootstrapping application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n    if (shutdownTrigger) {\n      shutdown().catch(err => {\n        enqueueSnackbar(`Error shutting down application: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  }, [bootstrapTrigger, bootstrap, shutdownTrigger, shutdown, enqueueSnackbar]);\n\n  return <>{props.children}</>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { TransactionSignature } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  signature: string;\n};\n\nexport async function withTx(\n  snack: any,\n  beforeLabel: string,\n  afterLabel: string,\n  execTx: () => Promise<TransactionSignature>,\n) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info',\n  });\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error',\n    });\n  }\n}\n\nexport function ViewTransactionOnExplorerButton(props: Props) {\n  const { signature } = props;\n  const { explorerClusterSuffix } = useSelector((state: StoreState) => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix,\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n","import React, { useState, useEffect, ReactElement } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Select from '@material-ui/core/Select';\nimport Menu from '@material-ui/core/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport * as registry from '@project-serum/registry';\nimport { networks } from '@project-serum/common';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { ViewTransactionOnExplorerButton } from './Notification';\nimport { useWallet } from './WalletProvider';\n\ntype HeaderProps = {\n  isAppReady: boolean;\n  member?: ProgramAccount<registry.accounts.Member>;\n};\n\nexport default function Header(props: HeaderProps) {\n  const { isAppReady } = props;\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        background: '#172026',\n        color: 'white',\n      }}\n    >\n      <Toolbar>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <SerumLogoButton />\n            <BarButton label=\"Stake\" hrefClient=\"/\" />\n            <BarButton label=\"Trade\" href=\"https://dex.projectserum.com\" />\n            <BarButton label=\"Swap\" href=\"https://swap.projectserum.com\" />\n            <BarButton\n              label=\"Learn\"\n              href=\"https://serum-academy.com/en/serum-dex/\"\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <NetworkSelector />\n            <WalletConnectButton\n              style={{\n                display: isAppReady ? 'none' : '',\n              }}\n            />\n            {isAppReady && <UserSelector />}\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction SerumLogoButton() {\n  const history = useHistory();\n  return (\n    <div style={{ display: 'flex' }} onClick={() => history.push('/')}>\n      <Button color=\"inherit\">\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <img\n            style={{\n              display: 'block',\n              height: '35px',\n            }}\n            alt=\"Logo\"\n            src=\"http://dex.projectserum.com/static/media/logo.49174c73.svg\"\n          />\n        </div>\n      </Button>\n    </div>\n  );\n}\n\ntype BarButtonProps = {\n  label: string;\n  hrefClient?: string;\n  href?: string;\n};\n\nfunction BarButton(props: BarButtonProps) {\n  const history = useHistory();\n  const { label, href, hrefClient } = props;\n  return (\n    <div\n      style={{ display: 'flex' }}\n      onClick={() => hrefClient && history.push(hrefClient)}\n    >\n      <Button color=\"inherit\" href={href}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography style={{ fontSize: '15px' }}>{label}</Typography>\n        </div>\n      </Button>\n    </div>\n  );\n}\n\nfunction NetworkSelector() {\n  const network = useSelector((state: StoreState) => {\n    return state.common.network;\n  });\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: '10px',\n        fontSize: '15px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        onClick={e =>\n          setAnchorEl(\n            // @ts-ignore\n            e.currentTarget,\n          )\n        }\n      >\n        <BubbleChartIcon />\n        <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n          {network.label}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        style={{\n          marginLeft: '12px',\n          color: 'white',\n        }}\n      >\n        {Object.keys(networks).map((n: string) => (\n          <MenuItem\n            onClick={() => {\n              handleClose();\n              dispatch({\n                type: ActionType.CommonSetNetwork,\n                item: {\n                  network: networks[n],\n                },\n              });\n            }}\n          >\n            <Typography>{networks[n].label}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nfunction UserSelector() {\n  const { wallet } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { lockupClient, registryClient } = useWallet();\n  const { network, member } = useSelector((state: StoreState) => {\n    return {\n      member: state.registry.member,\n      network: state.common.network,\n    };\n  });\n\n  const createStakeAccount = async () => {\n    enqueueSnackbar('Creating stake account', {\n      variant: 'info',\n    });\n\n    // TODO: separate member creation from entity joining (i.e., make it so that\n    //       entity doesn't need to be specified here).\n    const entity = network.defaultEntity;\n    const { tx, member } = await registryClient.createMember({\n      entity,\n      delegate: await lockupClient.accounts.vaultAuthority(\n        lockupClient.programId,\n        lockupClient.safe,\n        wallet.publicKey,\n      ),\n    });\n    const memberAcc = await registryClient.accounts.member(member);\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member: {\n          publicKey: member,\n          account: memberAcc,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Stake account created ${member}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n  return (\n    <Select\n      displayEmpty\n      renderValue={() => {\n        return (\n          <Typography style={{ overflow: 'hidden' }}>\n            {wallet.publicKey.toString()}\n          </Typography>\n        );\n      }}\n      style={{\n        marginLeft: '12px',\n        width: '150px',\n        color: 'white',\n      }}\n      onChange={e => {\n        if (e.target.value === 'disconnect') {\n          wallet.disconnect();\n        }\n      }}\n    >\n      {member === undefined && (\n        <MenuItem value=\"create-member\">\n          <div\n            onClick={() =>\n              createStakeAccount().catch(err => {\n                enqueueSnackbar(\n                  `Error creating stake account: ${err.toString()}`,\n                  {\n                    variant: 'error',\n                  },\n                );\n              })\n            }\n          >\n            <IconButton color=\"inherit\">\n              <PersonAddIcon />\n              <Typography style={{ marginLeft: '15px' }}>\n                Create stake account\n              </Typography>\n            </IconButton>\n          </div>\n        </MenuItem>\n      )}\n      <MenuItem value=\"disconnect\">\n        <IconButton color=\"inherit\">\n          <ExitToAppIcon />\n          <Typography style={{ marginLeft: '15px' }}>Disconnect</Typography>\n        </IconButton>\n      </MenuItem>\n    </Select>\n  );\n}\n\ntype WalletConnectButtonProps = {\n  style?: any;\n};\n\nexport function WalletConnectButton(\n  props: WalletConnectButtonProps,\n): ReactElement {\n  const { showDisconnect } = useSelector((state: StoreState) => {\n    return {\n      showDisconnect: state.common.isWalletConnected,\n    };\n  });\n  const dispatch = useDispatch();\n  const { wallet, lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on('disconnect', () => {\n      enqueueSnackbar('Disconnected from wallet', {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n      dispatch({\n        type: ActionType.CommonWalletDidDisconnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerShutdown,\n        item: {},\n      });\n    });\n    wallet.on('connect', async () => {\n      dispatch({\n        type: ActionType.CommonWalletDidConnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerBootstrap,\n        item: {},\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, lockupClient.provider.connection]);\n\n  return showDisconnect ? (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.disconnect()}\n    >\n      <ExitToAppIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Disconnect\n      </Typography>\n    </Button>\n  ) : (\n    <Button\n      style={props.style}\n      color=\"inherit\"\n      onClick={() => wallet.connect()}\n    >\n      <PersonIcon />\n      <Typography style={{ marginLeft: '5px', fontSize: '15px' }}>\n        Connect wallet\n      </Typography>\n    </Button>\n  );\n}\n","type Skin = {\n  active: string;\n  ready: string;\n  inactive: string;\n  notReady: string;\n  deactivating: string;\n};\n\nconst _skin: Skin = {\n  active: '#43a047',\n  ready: '#3f51b5',\n  notReady: '#ccc',\n  inactive: 'red',\n  deactivating: 'rgb(255, 121, 42)',\n};\n\nexport function instance(): Skin {\n  return _skin;\n}\n","import React from 'react';\n\nexport default function Scroll(props: any) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        overflowY: 'scroll',\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          right: '0',\n          maxHeight: '100%',\n          minHeight: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport BN from 'bn.js';\nimport { useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState } from '../../store/reducer';\nimport { useWallet } from './WalletProvider';\nimport Scroll from './Scroll';\n\nexport default function Messages() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient } = useWallet();\n  const [messages, setMessages] = useState<null | Array<\n    registry.metaEntity.accounts.mqueue.Message\n  >>(null);\n  const [message, setMessage] = useState('');\n  let { metadata, member } = useSelector((state: StoreState) => {\n    const member = state.registry.member!;\n    const entity = state.registry.entities.filter(\n      e => e.publicKey.toString() === member.account.entity.toString(),\n    )[0];\n    return {\n      metadata: state.registry.entityMetadata.get(entity.publicKey.toString()),\n      member,\n    };\n  });\n  const divRef = useRef(null);\n  useEffect(() => {\n    async function fetchMessages() {\n      if (metadata) {\n        const mqueue = registryClient.accounts.mqueueConnect(\n          metadata!.account.chat,\n        );\n        mqueue.on('connected', messages => {\n          setMessages(messages);\n        });\n        mqueue.on('message', message => {\n          // todo\n        });\n        mqueue.on('mqueue', mqueue => {\n          setMessages(mqueue.messages());\n          if (divRef) {\n            // @ts-ignore\n            divRef.current.scrollIntoView({ behavior: 'smooth' });\n          }\n        });\n      }\n    }\n    fetchMessages();\n  }, [registryClient.accounts, metadata]);\n\n  const sendMessage = async () => {\n    enqueueSnackbar('Sending message...', {\n      variant: 'info',\n    });\n    await registryClient.sendMessage({\n      from: member.publicKey,\n      ts: new BN(Date.now()),\n      content: message,\n      mqueue: metadata!.account.chat,\n    });\n    closeSnackbar();\n  };\n  const handleKeyPress = async (e: any) => {\n    if (e.key === 'Enter') {\n      try {\n        await sendMessage();\n        setMessage('');\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  return (\n    <div style={{ background: 'white', height: '100%' }}>\n      {messages == null ? (\n        <CircularProgress />\n      ) : (\n        <div\n          style={{ display: 'flex', flexDirection: 'column', height: '100%' }}\n        >\n          <div\n            style={{\n              textAlign: 'left',\n              borderBottom: 'solid 1pt #ccc',\n              padding: '10px',\n            }}\n          >\n            <Typography style={{ fontWeight: 'bold', fontSize: '14px' }}>\n              {metadata!.account.name} Chat\n            </Typography>\n          </div>\n          <Scroll>\n            <div style={{ flex: 1 }}>\n              <ul style={{ paddingLeft: '10px' }}>\n                {messages.map(m => {\n                  return (\n                    <li\n                      style={{\n                        display: 'flex',\n                      }}\n                    >\n                      <Typography\n                        style={{\n                          fontSize: '14px',\n                          width: '75px',\n                          overflow: 'hidden',\n                        }}\n                        color=\"textSecondary\"\n                      >\n                        {m.from.toString()}\n                      </Typography>\n                      <Typography\n                        style={{\n                          textAlign: 'left',\n                          marginLeft: '10px',\n                          fontSize: '14px',\n                        }}\n                      >\n                        {m.content}\n                      </Typography>\n                    </li>\n                  );\n                })}\n                <div ref={divRef} />\n              </ul>\n            </div>\n          </Scroll>\n          <div style={{ marginTop: '10px', display: 'flex' }}>\n            <TextField\n              onKeyPress={handleKeyPress}\n              size=\"small\"\n              variant=\"outlined\"\n              value={message}\n              onChange={e => setMessage(e.target.value as string)}\n              style={{\n                width: '100%',\n                marginBottom: '10px',\n                marginLeft: '10px',\n                marginRight: '10px',\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport * as skin from '../../skin';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Messaging from './Messaging';\n\nexport default function Footer() {\n  const [chatDisplay, setChatDisplay] = useState(false);\n  const [envDisplay, setEnvDisplay] = useState(false);\n  const { isAppReady, isDisconnected, network, hasMember } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        isAppReady:\n          state.common.isWalletConnected &&\n          state.common.bootstrapState === BootstrapState.Bootstrapped,\n        isDisconnected: !state.common.isWalletConnected,\n        hasMember: state.registry.member,\n      };\n    },\n  );\n  return (\n    <div\n      style={{\n        zIndex: 99,\n        position: 'fixed',\n        width: '100%',\n        bottom: 0,\n        textAlign: 'center',\n        height: '30px',\n        backgroundColor: '#fbfbfb',\n        borderTop: 'solid 1pt #ccc',\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            marginRight: '10px',\n          }}\n        >\n          <Brightness1Icon\n            style={{\n              color: isAppReady\n                ? skin.instance().active\n                : isDisconnected\n                ? '#ccc'\n                : skin.instance().ready,\n              fontSize: '12px',\n            }}\n          />\n        </div>\n        <IconButton\n          style={{\n            color: 'inherit',\n            padding: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n          onClick={() => {\n            setEnvDisplay(!envDisplay);\n          }}\n        >\n          <Typography style={{ fontSize: '14px', fontWeight: 'bold' }}>\n            {network.label}\n          </Typography>\n        </IconButton>\n      </div>\n      <div style={{ display: 'flex' }}>\n        {hasMember && isAppReady && (\n          <div\n            style={{ display: 'flex' }}\n            onClick={() => {\n              setChatDisplay(!chatDisplay);\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <Button style={{ padding: 0 }}>\n                <Typography style={{ fontSize: '14px', fontWeight: 'bold' }}>\n                  Chat\n                </Typography>\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n      {envDisplay && (\n        <div\n          style={{\n            overflowY: 'scroll',\n            position: 'fixed',\n            bottom: '30px',\n            left: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <NetworkEnvironment />\n        </div>\n      )}\n      {hasMember && chatDisplay && (\n        <div\n          style={{\n            position: 'fixed',\n            bottom: '30px',\n            right: 0,\n            width: '500px',\n            height: '400px',\n            borderTopLeftRadius: '4px',\n            boxShadow: 'rgba(0, 0, 0, 0.05) 0px 0px 25px 0px',\n            background: '#fff',\n          }}\n        >\n          <Messaging />\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction NetworkEnvironment() {\n  let { network, registrar, safe } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: state.registry.registrar,\n      safe: state.lockup.safe,\n    };\n  });\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Typography\n        style={{\n          paddingLeft: '10px',\n          marginTop: '20px',\n          fontSize: '14px',\n          fontWeight: 'bold',\n        }}\n      >\n        Programs and Global Accounts\n      </Typography>\n      <ul>\n        <li>Registry Program: {network.registryProgramId.toString()}</li>\n        <li>Stake Pool Program: {network.stakeProgramId.toString()}</li>\n        <li>Lockup Program: {network.lockupProgramId.toString()}</li>\n        <li>Meta Entity Program: {network.lockupProgramId.toString()}</li>\n        <li>Registrar Account: {network.registrar.toString()}</li>\n        <li>Safe Account: {network.safe.toString()}</li>\n        <li>SRM Mint: {network.srm.toString()}</li>\n        <li>MSRM Mint: {network.msrm.toString()}</li>\n      </ul>\n      {registrar && safe && (\n        <>\n          <Typography\n            style={{\n              paddingLeft: '10px',\n              fontSize: '14px',\n              fontWeight: 'bold',\n            }}\n          >\n            Registrar\n          </Typography>\n          <ul>\n            <li>Authority: {registrar.account.authority.toString()}</li>\n            <li>\n              Max stake per entity:{' '}\n              {registrar.account.maxStakePerEntity.toString()}\n            </li>\n            <li>\n              Withdrawal timelocK:{' '}\n              {registrar.account.withdrawalTimelock.toString()}\n            </li>\n            <li>\n              Deactivation timelock:{' '}\n              {registrar.account.deactivationTimelock.toString()}\n            </li>\n            <li>Vault: {registrar.account.vault.toString()}</li>\n            <li>Mega vault: {registrar.account.megaVault.toString()}</li>\n            <li>Pool: {registrar.account.pool.toString()}</li>\n            <li>Mega pool: {registrar.account.megaPool.toString()}</li>\n            <li>\n              Pool program id: {registrar.account.poolProgramId.toString()}\n            </li>\n          </ul>\n          <Typography\n            style={{\n              paddingLeft: '10px',\n              fontSize: '14px',\n              fontWeight: 'bold',\n            }}\n          >\n            Safe\n          </Typography>\n          <ul>\n            <li>Authority: {safe.account.authority.toString()}</li>\n            <li>Whitelist: {safe.account.whitelist.toString()}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { State as StoreState, BootstrapState } from '../../store/reducer';\nimport Header from './Header';\nimport Footer from './Footer';\n\ntype Props = {};\n\nexport default function Layout(props: PropsWithChildren<Props>) {\n  const { isAppReady } = useSelector((state: StoreState) => {\n    return {\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  return (\n    <div\n      style={{\n        display: 'flex',\n        minHeight: '100vh',\n        flexDirection: 'column',\n        backgroundColor: 'rgb(251, 251, 251)',\n      }}\n    >\n      <RiskBar />\n      <Header isAppReady={isAppReady} />\n      <div\n        style={{\n          flex: 1,\n          display: 'flex',\n          marginBottom: '30px', // Compensates for the fixed position footer.\n        }}\n      >\n        {!isAppReady ? (\n          <DisconnectedSplash />\n        ) : (\n          <div style={{ width: '100%' }}>{props.children}</div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction RiskBar() {\n  return (\n    <div\n      style={{\n        color: '#fff',\n        backgroundColor: '#f50057',\n        height: '30px',\n        textAlign: 'center',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <Typography style={{ fontSize: '14px', fontWeight: 'bold' }}>\n          This is unaudited software. Use at your own risk.\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction DisconnectedSplash() {\n  const classes = useStyles();\n  const { network, isDisconnected } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isDisconnected: !state.common.isWalletConnected,\n    };\n  });\n  return (\n    <div\n      style={{\n        flex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n      }}\n    >\n      <div style={{ width: '100%', display: 'flex' }}>\n        {isDisconnected ? (\n          <div\n            style={{ display: 'flex', marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            <Typography\n              style={{ marginLeft: '24px' }}\n              color=\"textSecondary\"\n              variant=\"h4\"\n            >\n              Disconnected\n            </Typography>\n          </div>\n        ) : (\n          <div style={{ width: '100%' }}>\n            <div style={{ width: '100%' }} className={classes.root}>\n              <div>\n                <Typography variant=\"h5\">\n                  {`Connecting to ${network.label}...`}\n                </Typography>\n              </div>\n              <div\n                style={{\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  width: '300px',\n                }}\n              >\n                <LinearProgress style={{ width: '100%' }} />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n};\n\nexport default function OwnedTokenAccountsSelect(p: Props) {\n  const { mint, variant, onChange, style } = p;\n  const ownedTokenAccounts = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.common.ownedTokenAccounts.filter(\n      ota => ota.account.mint.toString() === mint.toString(),\n    );\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const token = ownedTokenAccounts\n          .filter(ota => ota.publicKey.equals(pubkey))\n          .pop();\n        onChange(pubkey, new BN(token!.account.amount));\n      }}\n    >\n      {ownedTokenAccounts.length === 0 ? (\n        <MenuItem value={''}>No token accounts found</MenuItem>\n      ) : (\n        ownedTokenAccounts.map(ownedTokenAccount => {\n          return (\n            <MenuItem value={ownedTokenAccount.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${ownedTokenAccount.publicKey}`}</div>\n                <div\n                  style={{ float: 'right', color: '#ccc' }}\n                >{`${ownedTokenAccount.account.amount}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport * as registry from '@project-serum/registry';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { EntityActivityLabel } from './EntityGallery';\n\ntype Props = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n};\n\nexport default function Entity(props: Props) {\n  const { entity } = props;\n  let { isWalletConnected, member } = useSelector((state: StoreState) => {\n    return {\n      isWalletConnected: state.common.isWalletConnected,\n      member: state.registry.member,\n    };\n  });\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor: '#fbfbfb',\n        }}\n      >\n        <div\n          style={{\n            paddingTop: 50,\n            paddingRight: 50,\n            paddingLeft: 50,\n          }}\n        >\n          <div\n            style={{\n              paddingBottom: '10px',\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderBottom: 'solid #fbfbfb',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n              }}\n            >\n              <div>\n                <Typography\n                  variant=\"h1\"\n                  style={{\n                    fontSize: 25,\n                    fontWeight: 700,\n                    textAlign: 'center',\n                  }}\n                >\n                  {entity.publicKey.toString()}\n                </Typography>\n              </div>\n              <div>\n                <Typography\n                  color=\"textSecondary\"\n                  style={{\n                    paddingBottom: 10,\n                  }}\n                >\n                  Leader - {entity.account.leader.toString()}\n                </Typography>\n              </div>\n              <div>\n                <EntityActivityLabel entity={entity} />\n              </div>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <div style={{ flex: 1 }}></div>\n              {isWalletConnected && member !== undefined && (\n                <>\n                  {member.account.entity.toString() !==\n                  entity.publicKey.toString() ? (\n                    <JoinButton entity={entity} member={member} />\n                  ) : (\n                    <Button\n                      disableElevation\n                      disableFocusRipple\n                      disableRipple\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <Typography>My Node</Typography>\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            paddingTop: 50,\n            paddingBottom: 50,\n            paddingLeft: 50,\n            paddingRight: 50,\n          }}\n        >\n          <StakeContent entity={entity} />\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype StakeContentProps = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n};\n\nfunction StakeContent(props: StakeContentProps) {\n  const { entity } = props;\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <BalanceGridItem\n          label=\"Stake Pool Shares\"\n          amount={entity.account.balances.sptAmount.toString()}\n        />\n        <BalanceGridItem\n          label=\"Mega Stake Pool Shares\"\n          amount={entity.account.balances.sptMegaAmount.toString()}\n        />\n        <BalanceGridItem\n          label=\"Free SRM Balance\"\n          amount={entity.account.balances.currentDeposit.toString()}\n        />\n        <BalanceGridItem\n          label=\"Free MSRM Balance\"\n          amount={entity.account.balances.currentMegaDeposit.toString()}\n        />\n      </Grid>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row-reverse',\n          marginTop: '50px',\n        }}\n      >\n        <Typography color=\"textSecondary\">\n          Generation {entity.account.generation.toString()}\n        </Typography>\n      </div>\n    </div>\n  );\n}\ntype BalanceGridItemProps = {\n  label: string;\n  amount: string;\n};\n\nfunction BalanceGridItem(props: BalanceGridItemProps) {\n  const { label, amount } = props;\n  return (\n    <Grid\n      item\n      xs={6}\n      style={{\n        height: '250px',\n      }}\n    >\n      <Card\n        style={{\n          boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n          width: '100%',\n          height: '100%',\n          paddingTop: '24px',\n          paddingBottom: '24px',\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textSecondary\"\n              style={{\n                fontSize: '20px',\n                textAlign: 'center',\n              }}\n            >\n              {label}\n            </Typography>\n          </div>\n          <div\n            style={{\n              height: '100%',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              display: 'flex',\n              textAlign: 'center',\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              style={{\n                fontSize: '40px',\n              }}\n            >\n              {amount}\n            </Typography>\n          </div>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n\ntype JoinButtonProps = {\n  entity: ProgramAccount<registry.accounts.Entity>;\n  member: ProgramAccount<registry.accounts.Member>;\n};\n\nfunction JoinButton(props: JoinButtonProps) {\n  const { entity, member } = props;\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const joinEntity = async () => {\n    enqueueSnackbar(`Joining ${entity.publicKey}`, {\n      variant: 'info',\n    });\n\n    const oldEntity = member.account.entity;\n    const newEntity = entity.publicKey;\n\n    const { tx } = await registryClient.switchEntity({\n      member: member.publicKey,\n      entity: oldEntity,\n      newEntity,\n    });\n\n    const memberAccount = await registryClient.accounts.member(\n      member.publicKey,\n    );\n    const updatedOldEntity = await registryClient.accounts.entity(oldEntity);\n    const updatedNewEntity = await registryClient.accounts.entity(newEntity);\n\n    // TODO: instead of updating here, we should stream in all updates by following\n    //       the blockchain and updating the store asynchronously.\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member: {\n          publicKey: member.publicKey,\n          account: memberAccount,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: oldEntity,\n          account: updatedOldEntity,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: newEntity,\n          account: updatedNewEntity,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Joined entity ${entity.publicKey}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() =>\n          joinEntity().catch(err => {\n            enqueueSnackbar(`Error joining entity: ${err.toString()}`, {\n              variant: 'error',\n            });\n          })\n        }\n      >\n        Join\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { Img } from 'react-image';\nimport { PublicKey } from '@solana/web3.js';\nimport { accounts, metaEntity } from '@project-serum/registry';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { ProgramAccount, State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport Entity from './Entity';\nimport * as skin from '../../skin';\n\nexport default function EntityGallery() {\n  const [entityAddress, setEntityAddress] = useState<null | PublicKey>(null);\n  let { entities, metadata, isWalletConnected } = useSelector(\n    (state: StoreState) => {\n      return {\n        entities: state.registry.entities,\n        metadata: state.registry.entityMetadata,\n        isWalletConnected: state.common.isWalletConnected,\n        member: state.registry.member,\n      };\n    },\n  );\n  // Sort entities by activation.\n  entities = entities\n    .filter(e => e.account.state.active !== undefined)\n    .concat(\n      entities.filter(e => e.account.state.pendingDeactivation !== undefined),\n    )\n    .concat(entities.filter(e => e.account.state.inactive !== undefined));\n\n  let entity =\n    entityAddress &&\n    entities\n      .filter(e => e.publicKey.toString() === entityAddress.toString())\n      .pop();\n  return (\n    <>\n      <EntityDialog\n        open={entity !== null}\n        onClose={() => setEntityAddress(null)}\n        entity={entity}\n      />\n      <div style={{ flex: 1 }}>\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '10px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography\n                  style={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Nodes\n                </Typography>\n              </div>\n              <NewButton\n                style={{\n                  visibility: !isWalletConnected /* || !member*/\n                    ? 'hidden'\n                    : '',\n                }}\n              />\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n              }}\n            >\n              {entities.map((entity, idx) => (\n                <EntityCard\n                  idx={idx}\n                  metadata={metadata.get(entity.publicKey.toString())}\n                  entity={entity}\n                  onClick={() => setEntityAddress(entity.publicKey)}\n                />\n              ))}\n            </div>\n            <style>\n              {`\n.entity-card-container {\n  transition: box-shadow .2s ease-out,-webkit-box-shadow .2s ease-out,-moz-box-shadow .2s ease-out;\n}\n.entity-card-container:hover {\n  cursor: pointer;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -moz-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  -webkit-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n}\n.entity-card-container-inner {\n  transition: transform .2s ease-out,-webkit-transform .2s ease-out;\n}\n.entity-card-container-inner:hover {\n  transform: scale(1.025);\n  -webkit-transform: scalee(1.025);\n}\n\t\t\t\t\t`}\n            </style>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype EntityCardProps = {\n  entity: ProgramAccount<accounts.Entity>;\n  metadata?: ProgramAccount<metaEntity.accounts.metadata.Metadata>;\n  onClick: () => void;\n  idx: number; // TODO: Remove once we have a real default url.\n};\n\nfunction EntityCard(props: EntityCardProps) {\n  const { entity, metadata, onClick, idx } = props;\n  const imageUrl = metadata?.account.imageUrl;\n\n  const height = idx + 361;\n\n  // TODO: use a different default url.\n  const defaultUrl = `https://source.unsplash.com/random/361x${height}`;\n  return (\n    <>\n      <div\n        style={{\n          width: '304px',\n          padding: '5px',\n        }}\n      >\n        <div\n          className=\"entity-card-container\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <Card\n            onClick={onClick}\n            style={{\n              borderRadius: 10,\n              height: '361px',\n              boxShadow: '0px 0px 25px 0px rgba(0,0,0,0.05)',\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              className=\"entity-card-container-inner\"\n              style={{\n                display: 'flex',\n                height: '100%',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n              }}\n            >\n              <div style={{ height: '144px', overflow: 'hidden' }}>\n                <Img\n                  style={{ width: '100%' }}\n                  src={[`${imageUrl}`, defaultUrl]}\n                />\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: '16px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>\n                  <Typography\n                    style={{\n                      fontWeight: 'bold',\n                      fontSize: '16px',\n                    }}\n                  >\n                    {metadata?.account.name}\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    style={{\n                      fontSize: '12px',\n                      overflow: 'hidden',\n                    }}\n                  >\n                    {entity.publicKey.toString()}\n                  </Typography>\n                  <Typography\n                    style={{\n                      marginTop: '10px',\n                      fontSize: '14px',\n                    }}\n                  >\n                    {metadata?.account.about}\n                  </Typography>\n                </div>\n                <div\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                  <EntityActivityLabel entity={entity} />\n                  <Typography\n                    style={{ fontSize: '14px' }}\n                    color=\"textSecondary\"\n                  >\n                    {`${entity.account.balances.sptAmount.toString()} | ${entity.account.balances.sptMegaAmount.toString()}`}\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </>\n  );\n}\n\ntype EntityActivityLabelProps = {\n  entity: ProgramAccount<accounts.Entity>;\n  noBubble?: boolean;\n  textStyle?: any;\n};\n\nexport function EntityActivityLabel(props: EntityActivityLabelProps) {\n  const { entity, noBubble, textStyle } = props;\n  return (\n    <>\n      {entity.account.state.active !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().active}\n          text=\"Active\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n      {entity.account.state.pendingDeactivation !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().deactivating}\n          text=\"Deactivating\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n      {entity.account.state.inactive !== undefined && (\n        <ActivityLabel\n          noBubble={noBubble}\n          color={skin.instance().inactive}\n          text=\"Inactive\"\n          textStyle={textStyle || { fontSize: '14px' }}\n        />\n      )}\n    </>\n  );\n}\n\ntype ActivityLabelProps = {\n  color: string;\n  text: string;\n  textStyle?: any;\n  noBubble?: boolean;\n};\n\nfunction ActivityLabel(props: ActivityLabelProps) {\n  const { color, text, noBubble, textStyle } = props;\n  const tStyle = Object.assign(textStyle || {}, noBubble ? { color } : {});\n  return (\n    <div style={{ display: 'flex' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          marginRight: '10px',\n        }}\n      >\n        <Brightness1Icon\n          style={{\n            display: noBubble ? 'none' : '',\n            color,\n            fontSize: '14px',\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          fontSize: '10px',\n        }}\n      >\n        <Typography color=\"textSecondary\" style={tStyle}>\n          {text}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\ntype NewButtonProps = {\n  style?: any;\n};\n\nfunction NewButton(props?: NewButtonProps) {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <CreateEntityDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n      <div style={props && props.style} onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n    </>\n  );\n}\n\ntype EntityDialogProps = {\n  entity?: ProgramAccount<accounts.Entity> | null;\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction EntityDialog(props: EntityDialogProps) {\n  const { entity, open, onClose } = props;\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"md\">\n      <DialogContent\n        style={{\n          backgroundColor: '#fbfbfb',\n          padding: 0,\n          minHeight: '797px',\n        }}\n      >\n        {entity && <Entity entity={entity} />}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction CreateEntityDialog(props: EntityDialogProps) {\n  const { open, onClose } = props;\n\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const isCreateEnabled = name.length > 0;\n\n  const createEntity = async () => {\n    enqueueSnackbar('Creating entity...', {\n      variant: 'info',\n    });\n    const { entity, metadata } = await registryClient.createEntity({\n      name,\n      about,\n      imageUrl,\n    });\n    const entityAccount = await registryClient.accounts.entity(entity);\n    dispatch({\n      type: ActionType.RegistryCreateEntity,\n      item: {\n        entity: {\n          publicKey: entity,\n          account: entityAccount,\n        },\n      },\n    });\n    const newMetadata = await registryClient.accounts.metadata(metadata);\n    dispatch({\n      type: ActionType.RegistryCreateMetadata,\n      item: {\n        entityPublicKey: entity,\n        metadata: {\n          publicKey: metadata,\n          account: newMetadata,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Entity created ${entity}`, {\n      variant: 'success',\n    });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth={true} maxWidth=\"md\">\n      <DialogTitle>Create Entity</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <TextField\n          label=\"About\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={about}\n          onChange={e => setAbout(e.target.value)}\n        />\n        <TextField\n          label=\"Image URL\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={imageUrl}\n          onChange={e => setImageUrl(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          onClick={() =>\n            createEntity()\n              .then(() => onClose())\n              .catch(err => {\n                enqueueSnackbar(`Error creating entity: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              })\n          }\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isCreateEnabled}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport FormControl from '@material-ui/core/FormControl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { MintInfo, AccountInfo as TokenAccount, u64 } from '@solana/spl-token';\nimport { PublicKey } from '@solana/web3.js';\nimport { PoolState, Basket } from '@project-serum/pool';\nimport { accounts } from '@project-serum/registry';\nimport { useWallet } from '../components/common/WalletProvider';\nimport { ViewTransactionOnExplorerButton } from '../components/common/Notification';\nimport { State as StoreState, ProgramAccount } from '../store/reducer';\nimport { ActionType } from '../store/actions';\nimport * as skin from '../skin';\n\nexport default function Me() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const {\n    pool,\n    poolTokenMint,\n    poolVault,\n    megaPool,\n    megaPoolTokenMint,\n    megaPoolVaults,\n    member,\n    registrar,\n    entity,\n  } = useSelector((state: StoreState) => {\n    return {\n      pool: state.registry.pool,\n      poolTokenMint: state.registry.poolTokenMint,\n      poolVault: state.registry.poolVault,\n      megaPool: state.registry.megaPool,\n      megaPoolTokenMint: state.registry.megaPoolTokenMint,\n      megaPoolVaults: state.registry.megaPoolVaults,\n      member: state.registry.member,\n      registrar: state.registry.registrar,\n      entity: state.registry.entities\n        .filter(\n          e =>\n            state.registry.member &&\n            e.publicKey.toString() ===\n              state.registry.member!.account.entity.toString(),\n        )\n        .pop(),\n    };\n  });\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const prices = new PoolPrices({\n    poolVault: poolVault!.account,\n    poolTokenMint: poolTokenMint!.account,\n    megaPoolVaults: megaPoolVaults!.map(\n      (v: ProgramAccount<TokenAccount>) => v.account,\n    ),\n    megaPoolTokenMint: megaPoolTokenMint!.account,\n  });\n  const poolSharePrice = prices.basket(new BN(1), true).quantities[0] + ' SRM';\n  const megaPoolSharePrice = (() => {\n    const b = prices.megaBasket(new BN(1), true).quantities;\n    return `${b[0]} SRM, ${b[1]} MSRM`;\n  })();\n\n  const createPoolTokens = async (\n    amount: number,\n    spt: PublicKey,\n    label: string,\n  ) => {\n    enqueueSnackbar(`Creating ${spt} ${label} Pool tokens`, {\n      variant: 'info',\n    });\n    const { tx } = await registryClient.stake({\n      member: member!.publicKey,\n      amount: new u64(amount),\n      entity: entity?.publicKey,\n      spt: spt,\n    });\n    const updatedMember = await registryClient.accounts.member(\n      member!.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member: {\n          publicKey: member!.publicKey,\n          account: updatedMember,\n        },\n      },\n    });\n    const updatedEntity = await registryClient.accounts.entity(\n      entity!.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: entity!.publicKey,\n          account: updatedEntity,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Creation complete`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const redeemPoolTokens = async (\n    amount: number,\n    spt: PublicKey,\n    label: string,\n  ) => {\n    enqueueSnackbar(\n      `Initiating redemption for ${amount} ${label} Pool tokens`,\n      {\n        variant: 'info',\n      },\n    );\n    const { tx, pendingWithdrawal } = await registryClient.startStakeWithdrawal(\n      {\n        member: member!.publicKey,\n        amount: new u64(amount),\n        entity: entity?.publicKey,\n        registrar: registrar!.account,\n        spt: spt,\n      },\n    );\n    const updatedMember = await registryClient.accounts.member(\n      member!.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member: {\n          publicKey: member!.publicKey,\n          account: updatedMember,\n        },\n      },\n    });\n    const updatedEntity = await registryClient.accounts.entity(\n      entity!.publicKey,\n    );\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: entity!.publicKey,\n          account: updatedEntity,\n        },\n      },\n    });\n    const pwAccount = await registryClient.accounts.pendingWithdrawal(\n      pendingWithdrawal,\n    );\n    dispatch({\n      type: ActionType.RegistryCreatePendingWithdrawal,\n      item: {\n        memberPublicKey: member!.publicKey,\n        pendingWithdrawal: {\n          publicKey: pendingWithdrawal,\n          account: pwAccount,\n        },\n      },\n    });\n    closeSnackbar();\n    enqueueSnackbar(`Pending redemption ${pendingWithdrawal.toString()}`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  const createSrmPool = async (shares: number) => {\n    if (shares > 0) {\n      createPoolTokens(shares, member!.account.spt, 'SRM').catch(err => {\n        enqueueSnackbar(`Error creating srm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemSrmPool = async (shares: number) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, member!.account.spt, 'SRM').catch(err => {\n        enqueueSnackbar(`Error redeeming srm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  const createMsrmPool = async (shares: number) => {\n    if (shares > 0) {\n      createPoolTokens(shares, member!.account.sptMega, 'MSRM').catch(err => {\n        enqueueSnackbar(`Error creating msrm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n  const redeemMsrmPool = async (shares: number) => {\n    if (shares > 0) {\n      redeemPoolTokens(shares, member!.account.sptMega, 'MSRM').catch(err => {\n        enqueueSnackbar(`Error redeeming msrm pool: ${err.toString()}`, {\n          variant: 'error',\n        });\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      <div style={{ flex: 1, marginTop: '24px', marginBottom: '24px' }}>\n        {member && <MemberBalancesCard prices={prices} member={member} />}\n        <PoolCard\n          title={'Stake Pool'}\n          pool={pool!}\n          poolSharePrice={poolSharePrice}\n          poolTokenMint={poolTokenMint!}\n          assetsLabel={`${poolVault!.account.amount} SRM`}\n          disabled={member === undefined}\n          create={createSrmPool}\n          redeem={redeemSrmPool}\n        />\n        <PoolCard\n          title={'Mega Stake Pool'}\n          pool={megaPool!}\n          poolSharePrice={megaPoolSharePrice}\n          poolTokenMint={megaPoolTokenMint!}\n          assetsLabel={`${megaPoolVaults![0].account.amount} SRM, ${\n            megaPoolVaults![1].account.amount\n          } MSRM`}\n          disabled={member === undefined}\n          create={createMsrmPool}\n          redeem={redeemMsrmPool}\n        />\n      </div>\n      <RedemptionList\n        style={{\n          marginBottom: '24px',\n        }}\n      />\n    </div>\n  );\n}\n\ntype MemberBalancesCardProps = {\n  member: ProgramAccount<accounts.Member>;\n  prices: PoolPrices;\n};\n\nfunction MemberBalancesCard(props: MemberBalancesCardProps) {\n  const { member, prices } = props;\n  const rows = [\n    {\n      token: 'SRM',\n      balance: member.account.balances.currentDeposit.toString(),\n    },\n    {\n      token: 'MSRM',\n      balance: member.account.balances.currentMegaDeposit.toString(),\n    },\n  ];\n  const lockedRows = [\n    {\n      token: 'SRM',\n      balance: member.account.balances.delegate.deposit.toString(),\n    },\n    {\n      token: 'MSRM',\n      balance: member.account.balances.delegate.megaDeposit.toString(),\n    },\n  ];\n  let value = prices.basket(member.account.balances.sptAmount, false)\n    .quantities;\n  let megaValue = prices.megaBasket(\n    member.account.balances.sptMegaAmount,\n    false,\n  ).quantities;\n  const poolRows = [\n    {\n      pool: 'Stake Pool',\n      account: member.account.spt.toString(),\n      shares: member.account.balances.sptAmount.toString(),\n      value: `${value} SRM`,\n    },\n    {\n      pool: 'Mega Stake Pool',\n      account: member.account.sptMega.toString(),\n      shares: member.account.balances.sptMegaAmount.toString(),\n      value: `${megaValue[0]} SRM, ${megaValue[1]} MSRM`,\n    },\n  ];\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <CardHeader\n        title={'My Membership'}\n        subheader={member.publicKey.toString()}\n      />\n      <CardContent\n        style={{\n          position: 'relative',\n          paddingTop: 0,\n          paddingBottom: '16px',\n        }}\n      >\n        <div>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Stake Pool Shares\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Pool</TableCell>\n                  <TableCell align=\"left\">Account</TableCell>\n                  <TableCell align=\"right\">Shares</TableCell>\n                  <TableCell align=\"right\">Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {poolRows.map(row => (\n                  <TableRow key={row.pool}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.pool}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <div style={{ width: '180px', overflowX: 'hidden' }}>\n                        {row.account}\n                      </div>\n                    </TableCell>\n                    <TableCell align=\"right\">{row.shares}</TableCell>\n                    <TableCell align=\"right\">{row.value}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <div style={{ marginTop: '16px', marginBottom: '40px' }}>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Available Balances\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n            Total balances available for staking and withdrawal.\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Token</TableCell>\n                  <TableCell align=\"right\">Balance</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.token}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.token}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.balance}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <div style={{ marginTop: '16px', marginBottom: '40px' }}>\n          <Typography style={{ fontWeight: 'bold' }}>\n            Locked Deposits\n          </Typography>\n          <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n            Locked deposits are funds transferred from the lockup program. These\n            funds cannot be withdrawn directly, but instead, must be withdrawn\n            back to a locked account.\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Token</TableCell>\n                  <TableCell align=\"right\">Balance</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {lockedRows.map(row => (\n                  <TableRow key={row.token}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.token}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.balance}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            right: '16px',\n            bottom: '16px',\n            display: 'flex',\n            flexDirection: 'row-reverse',\n          }}\n        >\n          <Typography color=\"textSecondary\">\n            Generation {member.account.generation.toString()}\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype PoolCardProps = {\n  title: string;\n  pool: ProgramAccount<PoolState>;\n  poolSharePrice: string;\n  poolTokenMint: ProgramAccount<MintInfo>;\n  assetsLabel: string;\n  disabled: boolean;\n  create: (shares: number) => void;\n  redeem: (shares: number) => void;\n};\n\nfunction PoolCard(props: PoolCardProps) {\n  const {\n    title,\n    create,\n    redeem,\n    pool,\n    poolSharePrice,\n    poolTokenMint,\n    assetsLabel,\n    disabled,\n  } = props;\n  const [srmPoolAmount, setSrmPoolAmount] = useState<null | number>(null);\n\n  return (\n    <Card\n      style={{\n        marginBottom: '24px',\n      }}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <CardHeader title={title} subheader={pool.publicKey.toString()} />\n        <div\n          style={{\n            paddingRight: '16px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          <Typography color=\"textSecondary\"></Typography>\n        </div>\n      </div>\n      <CardContent>\n        <div\n          style={{\n            marginBottom: '16px',\n          }}\n        >\n          <Typography style={{ fontWeight: 'bold' }}>Pool Token</Typography>\n          <Typography>Mint: {poolTokenMint.publicKey.toString()}</Typography>\n          <Typography>\n            Outstanding: {poolTokenMint.account.supply.toString()}\n          </Typography>\n          <Typography style={{ marginTop: '10px', fontWeight: 'bold' }}>\n            Pool Assets\n          </Typography>\n          <Typography>Total basket: {assetsLabel}</Typography>\n          <Typography>Price per share: {poolSharePrice}</Typography>\n        </div>\n        <div style={{ width: '190px' }}>\n          <div style={{ marginBottom: '10px' }}>\n            <FormControl>\n              <TextField\n                style={{ width: '100%' }}\n                label=\"Shares\"\n                type=\"number\"\n                variant=\"outlined\"\n                onChange={e => setSrmPoolAmount(parseInt(e.target.value))}\n              />\n            </FormControl>\n          </div>\n          <div>\n            <Button\n              disabled={disabled || srmPoolAmount === null || srmPoolAmount < 1}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => create(srmPoolAmount as number)}\n            >\n              Create\n            </Button>\n            <Button\n              disabled={disabled || srmPoolAmount === null || srmPoolAmount < 1}\n              color=\"secondary\"\n              variant=\"contained\"\n              style={{ marginLeft: '10px' }}\n              onClick={() => redeem(srmPoolAmount as number)}\n            >\n              Redeem\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype RedemptionListProps = {\n  style: any;\n};\n\nfunction RedemptionList(props: RedemptionListProps) {\n  const { pendingWithdrawals, member } = useSelector((state: StoreState) => {\n    const member = state.registry.member;\n    return {\n      member,\n      pendingWithdrawals: member\n        ? state.registry.pendingWithdrawals.get(member.publicKey.toString())\n        : [],\n    };\n  });\n  return (\n    <div style={props.style}>\n      <Card\n        style={{\n          marginLeft: '20px',\n          marginTop: '24px',\n          width: '294px',\n        }}\n      >\n        <CardContent\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            paddingTop: 0,\n          }}\n        >\n          <div\n            style={{\n              marginLeft: '24px',\n              marginTop: '24px',\n              marginRight: '24px',\n              borderBottom: 'solid 1pt #ccc',\n              paddingBottom: '12px',\n            }}\n          >\n            <Typography style={{}}>Redemptions</Typography>\n          </div>\n          <div style={{ paddingLeft: '24px', paddingRight: '24px' }}>\n            {pendingWithdrawals && pendingWithdrawals.length > 0 ? (\n              pendingWithdrawals.map((pw, idx) => {\n                return (\n                  <div\n                    style={{\n                      paddingBottom:\n                        idx !== pendingWithdrawals!.length - 1\n                          ? '12px'\n                          : '24px',\n                      paddingTop: '12px',\n                      borderBottom: 'solid 1pt #ccc',\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                      }}\n                    >\n                      <div>\n                        <Typography\n                          style={{ fontWeight: 'bold', fontSize: '14px' }}\n                        >\n                          {`${pw.account.sptAmount}`} shares\n                        </Typography>\n                      </div>\n                      <div>\n                        <PendingWithdrawalButton\n                          member={member!}\n                          pendingWithdrawal={pw}\n                        />\n                      </div>\n                    </div>\n                    <Typography style={{ fontSize: '14px' }}>\n                      {`${pw.account.payment.assetAmount} SRM, ${pw.account.payment.megaAssetAmount} MSRM`}\n                    </Typography>\n                    <Typography style={{ fontSize: '14px' }}>\n                      {`Start: ${new Date(\n                        pw.account.startTs.toNumber() * 1000,\n                      ).toLocaleString()}`}\n                    </Typography>\n                    <Typography style={{ fontSize: '14px' }}>\n                      {`End:   ${new Date(\n                        pw.account.endTs.toNumber() * 1000,\n                      ).toLocaleString()}`}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      style={{\n                        fontSize: '14px',\n                        overflow: 'hidden',\n                      }}\n                    >\n                      {pw.account.pool.toString()}\n                    </Typography>\n                  </div>\n                );\n              })\n            ) : (\n              <div\n                style={{\n                  paddingBottom: '24px',\n                  paddingTop: '12px',\n                }}\n              >\n                <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                  None found\n                </Typography>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\ntype PendingWithdrawalButtonProps = {\n  pendingWithdrawal: ProgramAccount<accounts.PendingWithdrawal>;\n  member: ProgramAccount<accounts.Member>;\n};\n\nfunction PendingWithdrawalButton(props: PendingWithdrawalButtonProps) {\n  const { pendingWithdrawal, member } = props;\n  const { registryClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const endPendingWithdrawal = async () => {\n    enqueueSnackbar(`Completing redemption`, {\n      variant: 'info',\n    });\n    const { tx } = await registryClient.endStakeWithdrawal({\n      member: member.publicKey,\n      pendingWithdrawal: pendingWithdrawal.publicKey,\n      entity: member.account.entity,\n    });\n\n    const updatedPendingWithdrawal = {\n      publicKey: pendingWithdrawal.publicKey,\n      account: {\n        ...pendingWithdrawal.account,\n        burned: true,\n      },\n    };\n    const updatedMember = await registryClient.accounts.member(\n      member.publicKey,\n    );\n    const updatedEntity = await registryClient.accounts.entity(\n      member.account.entity,\n    );\n\n    dispatch({\n      type: ActionType.RegistrySetMember,\n      item: {\n        member: {\n          publicKey: member!.publicKey,\n          account: updatedMember,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdateEntity,\n      item: {\n        entity: {\n          publicKey: member.account.entity,\n          account: updatedEntity,\n        },\n      },\n    });\n    dispatch({\n      type: ActionType.RegistryUpdatePendingWithdrawal,\n      item: {\n        memberPublicKey: member!.publicKey,\n        pendingWithdrawal: updatedPendingWithdrawal,\n      },\n    });\n\n    closeSnackbar();\n    enqueueSnackbar(`Redemption completed`, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  };\n\n  let disabled = false;\n  let color = skin.instance().ready;\n  let onClick = async () =>\n    endPendingWithdrawal().catch(err => {\n      enqueueSnackbar(`Error ending pending redemption: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  if (pendingWithdrawal.account.burned) {\n    disabled = true;\n    color = skin.instance().active;\n    onClick = async () => {};\n  }\n\n  if (pendingWithdrawal.account.endTs.toNumber() > Date.now() / 1000) {\n    disabled = true;\n    color = skin.instance().notReady;\n    onClick = async () => {};\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <IconButton disabled={disabled} style={{ width: '25px', height: '25px' }}>\n        <CheckCircleIcon style={{ color, fontSize: '20px' }} />\n      </IconButton>\n    </div>\n  );\n}\n\ntype PoolPricesConfig = {\n  poolVault: TokenAccount;\n  poolTokenMint: MintInfo;\n  megaPoolVaults: TokenAccount[];\n  megaPoolTokenMint: MintInfo;\n};\n\nexport class PoolPrices {\n  private poolVault: TokenAccount;\n  private poolTokenMint: MintInfo;\n  private megaPoolVaults: TokenAccount[];\n  private megaPoolTokenMint: MintInfo;\n\n  constructor(cfg: PoolPricesConfig) {\n    this.poolVault = cfg.poolVault!;\n    this.poolTokenMint = cfg.poolTokenMint!;\n    this.megaPoolVaults = cfg.megaPoolVaults!;\n    this.megaPoolTokenMint = cfg.megaPoolTokenMint!;\n  }\n\n  // TODO: replace these methods with `getPoolBasket` from the pool package.\n  basket(sptAmount: BN, roundUp: boolean): Basket {\n    if (this.poolTokenMint.supply.toNumber() === 0) {\n      return { quantities: [new u64(sptAmount)] };\n    }\n    // TODO: need to more thoughtfully handle the case where the token supply\n    //       resets *and* there exists rewards in the pool.\n    return {\n      quantities: [\n        this.poolVault.amount\n          .mul(sptAmount)\n          .add(roundUp ? this.poolTokenMint.supply.sub(new BN(1)) : new BN(0))\n          .div(this.poolTokenMint.supply),\n      ],\n    };\n  }\n  // TODO: replace these methods with `getPoolBasket` from the pool package.\n  megaBasket(sptAmount: BN, roundUp: boolean): Basket {\n    if (this.megaPoolVaults.length !== 2) {\n      throw new Error('invariant violation');\n    }\n    if (this.megaPoolTokenMint.supply.toNumber() === 0) {\n      return { quantities: [new u64(0), new u64(sptAmount)] };\n    }\n    const quantities = this.megaPoolVaults.map((v, idx) => {\n      if (v.amount.toNumber() === 0) {\n        if (idx === 1) {\n          throw new Error('invariant violation');\n        }\n        return new BN(0);\n      }\n      return v.amount\n        .mul(sptAmount)\n        .add(roundUp ? this.megaPoolTokenMint.supply.sub(new BN(1)) : new BN(0))\n        .div(this.megaPoolTokenMint.supply);\n    });\n    return {\n      quantities,\n    };\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { PublicKey } from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\n\nenum PoolTabViewModel {\n  Srm,\n  Msrm,\n}\n\nenum LockedTabViewModel {\n  Locked,\n  Unlocked,\n}\n\ntype DropRewardsDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nexport default function DropRewardDialog(props: DropRewardsDialogProps) {\n  const { open, onClose } = props;\n\n  const [poolTab, setPoolTab] = useState(PoolTabViewModel.Srm);\n  const [isLockedTab, setIsLockedTab] = useState(LockedTabViewModel.Unlocked);\n  const isLocked = isLockedTab === LockedTabViewModel.Locked;\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h4\" component=\"h2\">\n            {'Drop Rewards'}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Tabs value={isLockedTab} onChange={(_e, t) => setIsLockedTab(t)}>\n          <Tab value={LockedTabViewModel.Unlocked} label=\"Unlocked\" />\n          <Tab value={LockedTabViewModel.Locked} label=\"Locked\" />\n        </Tabs>\n        <Tabs\n          style={{ marginTop: '10px' }}\n          value={poolTab}\n          onChange={(_e, t) => setPoolTab(t)}\n        >\n          <Tab value={PoolTabViewModel.Srm} label=\"Pool\" />\n          <Tab value={PoolTabViewModel.Msrm} label=\"Mega Pool\" />\n        </Tabs>\n        {isLocked ? (\n          <DropLockedForm onClose={onClose} poolTab={poolTab} />\n        ) : (\n          <DropUnlockedForm onClose={onClose} poolTab={poolTab} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ntype DropUnlockedFormProps = {\n  onClose: () => void;\n  poolTab: PoolTabViewModel;\n};\n\nfunction DropLockedForm(props: DropUnlockedFormProps) {\n  const { onClose, poolTab } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const {\n    network,\n    pool,\n    megaPool,\n    poolTokenMint,\n    megaPoolTokenMint,\n  } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      pool: state.registry.pool!,\n      poolTokenMint: state.registry.poolTokenMint!,\n      megaPool: state.registry.megaPool!,\n      megaPoolTokenMint: state.registry.megaPoolTokenMint!,\n    };\n  });\n\n  // Locked reward state.\n  const [lockedRewardAmount, setLockedRewardAmount] = useState<null | number>(\n    null,\n  );\n  const [endTs, setEndTs] = useState<null | number>(null);\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [expiryReceiver, setExpiryReceiver] = useState(\n    registryClient.provider.wallet.publicKey.toString(),\n  );\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mintLabel, setMintLabel] = useState('srm');\n  const [mint, setMint] = useState<null | PublicKey>(network.srm);\n  const [periodCount, setPeriodCount] = useState(7);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    lockedRewardAmount !== null &&\n    expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping locked reward...',\n      'Locked reward dropped',\n      async () => {\n        let { tx } = await registryClient.dropLockedReward({\n          total: new BN(lockedRewardAmount as number),\n          endTs: new BN(endTs as number),\n          expiryTs: new BN(expiryTs as number),\n          expiryReceiver: new PublicKey(expiryReceiver as string),\n          depositor: depositor as PublicKey,\n          depositorMint: mint as PublicKey,\n          pool:\n            poolTab === PoolTabViewModel.Srm\n              ? pool.publicKey\n              : megaPool.publicKey,\n          poolTokenMint:\n            poolTab === PoolTabViewModel.Srm\n              ? poolTokenMint.publicKey\n              : megaPoolTokenMint.publicKey,\n          periodCount: new BN(periodCount),\n        });\n        return tx;\n      },\n    );\n    onClose();\n  };\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginTop: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={mint}\n              onChange={(f: PublicKey) => setDepositor(f)}\n            />\n            <FormHelperText>Account to send from</FormHelperText>\n          </div>\n          <div>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '200px', marginLeft: '10px', marginTop: '10px' }}\n            >\n              <InputLabel>Mint</InputLabel>\n              <Select\n                value={mintLabel}\n                onChange={e => {\n                  const m = e.target.value;\n                  setMintLabel(m as string);\n                  if (m === 'srm') {\n                    setMint(network.srm);\n                  } else if (m === 'msrm') {\n                    setMint(network.msrm);\n                  }\n                }}\n                label=\"Mint\"\n              >\n                <MenuItem value=\"srm\">SRM</MenuItem>\n                <MenuItem value=\"msrm\">MSRM</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setLockedRewardAmount(parseInt(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        </div>\n        <div style={{ marginTop: '37px' }}>\n          <TextField\n            fullWidth\n            label=\"End date\"\n            type=\"datetime-local\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={e => {\n              const d = new Date(e.target.value);\n              setEndTs(d.getTime() / 1000);\n            }}\n          />\n        </div>\n        <TextField\n          style={{ marginTop: '37px', width: '100%' }}\n          label=\"Expiry Receiver\"\n          variant=\"outlined\"\n          value={expiryReceiver}\n          onChange={e => setExpiryReceiver(e.target.value as string)}\n        />\n        <div style={{ display: 'flex' }}>\n          <div\n            style={{\n              flex: 1,\n              height: '100%',\n              marginTop: '10px',\n              marginRight: '10px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"Expiry date\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setExpiryTs(d.getTime() / 1000);\n              }}\n            />\n          </div>\n          <div style={{ marginTop: '26px' }}>\n            <TextField\n              style={{ height: '100%' }}\n              disabled\n              placeholder=\"Expiry Unix timestamp\"\n              fullWidth\n              value={expiryTs}\n            />\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Period Count\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              value={periodCount}\n              onChange={e => setPeriodCount(parseInt(e.target.value) as number)}\n              InputProps={{ inputProps: { min: 1 } }}\n            />\n          </div>\n        </div>\n      </div>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          onClick={() =>\n            sendLockedRewards().catch(err => {\n              snack.enqueueSnackbar(\n                `Error dropping locked reward: ${err.toString()}`,\n                {\n                  variant: 'error',\n                },\n              );\n            })\n          }\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\ntype DropLockedFormProps = {\n  poolTab: PoolTabViewModel;\n  onClose: () => void;\n};\n\nfunction DropUnlockedForm(props: DropLockedFormProps) {\n  const { poolTab, onClose } = props;\n  const snack = useSnackbar();\n  const { network, pool, poolVault, megaPool, megaPoolVaults } = useSelector(\n    (state: StoreState) => {\n      return {\n        network: state.common.network,\n        pool: state.registry.pool!,\n        poolVault: state.registry.poolVault!,\n        megaPool: state.registry.megaPool!,\n        megaPoolVaults: state.registry.megaPoolVaults!,\n      };\n    },\n  );\n  const { registryClient } = useWallet();\n  const [srmFromAccount, setSrmFromAccount] = useState<null | PublicKey>(null);\n  const [msrmFromAccount, setMsrmFromAccount] = useState<null | PublicKey>(\n    null,\n  );\n  const [rewardAmount, setRewardAmount] = useState<null | number>(null);\n  const [rewardMegaAmount, setRewardMegaAmount] = useState<null | number>(null);\n\n  const sendUnlockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping unlocked reward...',\n      'Unlocked reward dropped',\n      async () => {\n        let { tx } = await registryClient.dropPoolReward({\n          pool:\n            poolTab === PoolTabViewModel.Srm\n              ? pool.publicKey\n              : megaPool.publicKey,\n          srmDepositor: srmFromAccount as PublicKey,\n          msrmDepositor:\n            poolTab === PoolTabViewModel.Msrm\n              ? (msrmFromAccount as PublicKey)\n              : undefined,\n          srmAmount: new BN(rewardAmount!),\n          msrmAmount:\n            poolTab === PoolTabViewModel.Msrm\n              ? new BN(rewardMegaAmount!)\n              : undefined,\n          poolSrmVault:\n            poolTab === PoolTabViewModel.Msrm\n              ? megaPoolVaults[0].publicKey\n              : poolVault.publicKey,\n          poolMsrmVault:\n            poolTab === PoolTabViewModel.Msrm\n              ? megaPoolVaults[1].publicKey\n              : undefined,\n        });\n        return tx;\n      },\n    );\n    onClose();\n  };\n\n  const isSendEnabled = (() => {\n    // todo\n    return true;\n  })();\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginBottom: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={network.srm}\n              onChange={(f: PublicKey) => setSrmFromAccount(f)}\n            />\n            <FormHelperText>SRM account to send from</FormHelperText>\n          </div>\n          <TextField\n            style={{ width: '200px', marginLeft: '24px' }}\n            id=\"outlined-number\"\n            label=\"Amount\"\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            onChange={e => setRewardAmount(parseInt(e.target.value) as number)}\n            InputProps={{ inputProps: { min: 0 } }}\n          />\n        </div>\n        {poolTab === PoolTabViewModel.Msrm && (\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <OwnedTokenAccountsSelect\n                style={{ height: '100%' }}\n                mint={network.msrm}\n                onChange={(f: PublicKey) => setMsrmFromAccount(f)}\n              />\n              <FormHelperText>MSRM account to send from</FormHelperText>\n            </div>\n            <TextField\n              style={{ width: '200px', marginLeft: '24px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setRewardMegaAmount(parseInt(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        )}\n      </div>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          onClick={() =>\n            sendUnlockedRewards().catch(err => {\n              snack.enqueueSnackbar(\n                `Error dropping unlocked reward: ${err.toString()}`,\n                {\n                  variant: 'error',\n                },\n              );\n            })\n          }\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LockIcon from '@material-ui/icons/Lock';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport * as registry from '@project-serum/registry';\nimport { Network, ProgramAccount } from '@project-serum/common';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport DropRewardDialog from './DropRewardDialog';\nimport * as notification from '../common/Notification';\nimport { ActionType } from '../../store/actions';\n\nexport default function Rewards() {\n  const { registryClient } = useWallet();\n  const dispatch = useDispatch();\n  const snack = useSnackbar();\n  const { rewardEventQueue, member, network, vendors, pool } = useSelector(\n    (state: StoreState) => {\n      return {\n        rewardEventQueue: state.registry.rewardEventQueue,\n        member: state.registry.member!,\n        network: state.common.network,\n        pool: state.registry.pool!,\n        vendors: state.registry.vendors,\n      };\n    },\n  );\n\n  // Fetch all the reward vendor accounts that we haven't loaded, already.\n  useEffect(() => {\n    rewardEventQueue!.account.messages().forEach(m => {\n      if (m.lockedAlloc !== undefined) {\n        if (vendors.get(m.lockedAlloc.lockedVendor.toString()) === undefined) {\n          registryClient.accounts\n            .lockedRewardVendor(m.lockedAlloc.lockedVendor)\n            .then(vendor =>\n              dispatch({\n                type: ActionType.RegistryCreateRewardVendor,\n                item: {\n                  vendor,\n                },\n              }),\n            )\n            .catch(err =>\n              snack.enqueueSnackbar(\n                `Error fetching locked reward vendor: ${err.toString()}`,\n                {\n                  variant: 'error',\n                },\n              ),\n            );\n        }\n      }\n    });\n  });\n\n  // All rewards to display.\n  const rewards = rewardEventQueue!.account\n    .messages()\n    .map((m, idx) => {\n      let cursor = rewardEventQueue!.account.tailCursor() + idx;\n      let needsClaim = false;\n      let vendor = undefined;\n      if (m.lockedAlloc !== undefined) {\n        vendor = vendors.get(m.lockedAlloc.lockedVendor.toString());\n        if (vendor !== undefined) {\n          // The member must own shares of the reward's target pool.\n          const ownsPoolShares = m.lockedAlloc.pool.equals(pool.publicKey)\n            ? member.account.balances.sptAmount.cmp(new BN(0)) === 1\n            : member.account.balances.sptMegaAmount.cmp(new BN(0)) === 1;\n          const notYetClaimed = cursor >= member.account.rewardsCursor;\n          const isEligible =\n            member.account.lastStakeTs < vendor.account.startTs;\n\n          needsClaim = ownsPoolShares && notYetClaimed && isEligible;\n        }\n      }\n      return {\n        reward: m,\n        cursor,\n        needsClaim,\n        vendor,\n      };\n    })\n    .reverse();\n\n  // On click.\n  const claimBtnClickHandler = async (): Promise<void> => {\n    let r = (() => {\n      for (let k = rewards!.length - 1; k >= 0; k -= 1) {\n        let r = rewards![k];\n        if (r.needsClaim) {\n          return r;\n        }\n      }\n      throw new Error('no reward to claim');\n    })();\n\n    let vendor = await registryClient.accounts.lockedRewardVendor(\n      r.reward.lockedAlloc!.lockedVendor,\n    );\n    let vendorSigner = await registryClient.accounts.lockedRewardVendorAuthority(\n      vendor.publicKey,\n      vendor.account.nonce,\n    );\n    notification.withTx(\n      snack,\n      `Claiming vendor reward ${vendor.publicKey.toString()}`,\n      'Reward claimed',\n      async () => {\n        const { tx } = await registryClient.claimLockedReward({\n          cursor: r.cursor,\n          member: member.publicKey,\n          vendor: vendor.publicKey,\n          vendorVault: vendor.account.vault,\n          vendorSigner,\n          safe: network.safe,\n          lockupProgramId: network.lockupProgramId,\n          mint: r.reward.lockedAlloc!.mint,\n        });\n        return tx;\n      },\n    );\n  };\n\n  return (\n    <div style={{ width: '100%', marginTop: '24px' }}>\n      <div\n        style={{\n          marginBottom: '10px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography style={{ fontWeight: 'bold', fontSize: '20px' }}>\n          Reward History\n        </Typography>\n        <div style={{ display: 'flex' }}>\n          {rewards.filter(r => r.needsClaim).length > 0 && (\n            <ClaimButton\n              onClick={() =>\n                claimBtnClickHandler().catch(err => {\n                  snack.enqueueSnackbar(\n                    `Error ending pending redemption: ${err.toString()}`,\n                    {\n                      variant: 'error',\n                    },\n                  );\n                })\n              }\n            />\n          )}\n          <DropButton />\n        </div>\n      </div>\n      <Paper>\n        <List>\n          {rewards.length > 0 ? (\n            rewards.map(r => {\n              return (\n                <RewardListItem\n                  network={network}\n                  reward={r.reward}\n                  cursor={r.cursor}\n                  needsClaim={r.needsClaim}\n                  vendor={r.vendor}\n                />\n              );\n            })\n          ) : (\n            <ListItem>\n              <ListItemText primary={'No rewards found'} />\n            </ListItem>\n          )}\n        </List>\n      </Paper>\n    </div>\n  );\n}\n\ntype ClaimButtonProps = {\n  onClick: () => void;\n};\n\nfunction ClaimButton(props: ClaimButtonProps) {\n  return (\n    <div style={{ marginRight: '10px' }} onClick={props.onClick}>\n      <Button variant=\"contained\" color=\"primary\">\n        Claim Reward\n      </Button>\n    </div>\n  );\n}\n\nfunction DropButton() {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <div onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Drop Rewards\n        </Button>\n      </div>\n      <DropRewardDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n    </>\n  );\n}\n\ntype RewardListItemProps = {\n  reward: registry.accounts.RewardEvent;\n  cursor: number;\n  network: Network;\n  needsClaim: boolean;\n  vendor?: ProgramAccount<registry.accounts.LockedRewardVendor>;\n};\n\nfunction RewardListItem(props: RewardListItemProps) {\n  const { reward, network, needsClaim, cursor, vendor } = props;\n  if (reward.poolDrop !== undefined) {\n    return <PoolDropReward cursor={cursor} poolDrop={reward.poolDrop} />;\n  } else {\n    return (\n      <LockedReward\n        cursor={cursor}\n        needsClaim={needsClaim}\n        lockedAlloc={reward.lockedAlloc!}\n        network={network}\n        vendor={vendor}\n      />\n    );\n  }\n}\n\ntype PoolDropRewardProps = {\n  poolDrop: registry.accounts.PoolDrop;\n  cursor: number;\n};\n\nfunction PoolDropReward(props: PoolDropRewardProps) {\n  const { poolDrop, cursor } = props;\n\n  let amountLabel = `${poolDrop.totals[0].toString()} SRM`;\n  if (poolDrop.totals.length === 2) {\n    amountLabel += ` ${poolDrop.totals[1].toString()} MSRM`;\n  }\n  let lockedLabel = 'unlocked';\n  let fromLabel = `${poolDrop.pool.toString()} | ${poolDrop.from.toString()} | ${cursor}`;\n  return (\n    <>\n      <ListItem button>\n        <LockIcon style={{ visibility: 'hidden', marginRight: '16px' }} />\n        <ListItemText\n          primary={<>{`${amountLabel} ${lockedLabel}`}</>}\n          secondary={fromLabel}\n        />\n      </ListItem>\n    </>\n  );\n}\n\ntype LockedRewardProps = {\n  lockedAlloc: registry.accounts.LockedAlloc;\n  network: Network;\n  needsClaim: boolean;\n  cursor: number;\n  vendor?: ProgramAccount<registry.accounts.LockedRewardVendor>;\n};\n\nfunction LockedReward(props: LockedRewardProps) {\n  const { vendor, cursor, lockedAlloc, network, needsClaim } = props;\n  const [open, setOpen] = useState(false);\n  let amountLabel = `${lockedAlloc.total.toString()}`;\n  if (lockedAlloc.mint.equals(network.srm)) {\n    amountLabel += ' SRM';\n  } else if (lockedAlloc.mint.equals(network.msrm)) {\n    amountLabel += ' MSRM';\n  } else {\n    amountLabel += ` ${lockedAlloc.mint}`;\n  }\n  let lockedLabel = 'locked';\n  let fromLabel = `${lockedAlloc.pool.toString()} | ${lockedAlloc.from.toString()} | ${cursor}`;\n\n  return (\n    <>\n      <ListItem button onClick={() => setOpen(open => !open)}>\n        {needsClaim === null ? (\n          <CircularProgress style={{ marginRight: '16px' }} />\n        ) : (\n          <LockIcon style={{ marginRight: '16px' }} />\n        )}\n        <ListItemText\n          primary={\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                color: needsClaim ? '#54a15e' : '',\n              }}\n            >\n              <div>{`${amountLabel} ${lockedLabel}`}</div>\n            </div>\n          }\n          secondary={fromLabel}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {vendor === undefined ? (\n          <CircularProgress />\n        ) : (\n          <LockedRewardDetails vendor={vendor} />\n        )}\n      </Collapse>\n    </>\n  );\n}\n\ntype LockedRewardDetailsProps = {\n  vendor: ProgramAccount<registry.accounts.LockedRewardVendor>;\n};\n\nfunction LockedRewardDetails(props: LockedRewardDetailsProps) {\n  let { vendor } = props;\n\n  return (\n    <div\n      style={{\n        marginLeft: '56px',\n      }}\n    >\n      <Typography variant=\"h6\">Vendor</Typography>\n      <Typography>Address: {vendor.publicKey.toString()}</Typography>\n      <Typography>Vault: {vendor.account.vault.toString()}</Typography>\n      <Typography>\n        Pool token supply snapshot: {vendor.account.poolTokenSupply.toString()}\n      </Typography>\n      <Typography>\n        Expiry:{' '}\n        {new Date(\n          vendor.account.expiryTs.toNumber() * 1000,\n        ).toLocaleDateString()}\n      </Typography>\n      <Typography>\n        Expiry receiver: {vendor.account.expiryReceiver.toString()}\n      </Typography>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\n\nexport default function NewVestingButton() {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <div onClick={() => setOpen(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          New\n        </Button>\n      </div>\n      <NewVestingDialog open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n\ntype NewVestingDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction NewVestingDialog(props: NewVestingDialogProps) {\n  const { open, onClose } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n    };\n  });\n\n  const defaultEndDate = '2027-01-01T12:00';\n  const defaultEndTs = new Date(defaultEndDate).getTime() / 1000;\n\n  const [beneficiary, setBeneficiary] = useState('');\n  const isValidBeneficiary = (() => {\n    try {\n      new PublicKey(beneficiary);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  })();\n  const displayBeneficiaryError = !isValidBeneficiary && beneficiary !== '';\n\n  const [fromAccount, setFromAccount] = useState<null | PublicKey>(null);\n  const [timestamp, setTimestamp] = useState(defaultEndTs);\n  const [periodCount, setPeriodCount] = useState(7);\n  const [amountStr, setAmountStr] = useState('');\n  // @ts-ignore\n  const isValidAmountStr = !isNaN(amountStr) && amountStr !== '';\n  const displayAmountError = !isValidAmountStr && amountStr !== '';\n  const amount = parseInt(amountStr);\n\n  const submitBtnEnabled =\n    fromAccount !== null && isValidBeneficiary && isValidAmountStr;\n\n  const { lockupClient } = useWallet();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const [mint, setMint] = useState<null | PublicKey>(null);\n  const [mintLabel, setMintLabel] = useState('');\n\n  const createVestingClickHandler = async () => {\n    setIsLoading(true);\n    enqueueSnackbar('Creating vesting acount...', {\n      variant: 'info',\n    });\n    try {\n      let { vesting } = await lockupClient.createVesting({\n        beneficiary: new PublicKey(beneficiary),\n        endTs: new BN(timestamp),\n        periodCount: new BN(periodCount),\n        depositAmount: new BN(amount),\n        depositor: fromAccount as PublicKey,\n      });\n      const vestingAccount = await lockupClient.accounts.vesting(vesting);\n      dispatch({\n        type: ActionType.LockupCreateVesting,\n        item: {\n          vesting: {\n            publicKey: vesting,\n            account: vestingAccount,\n          },\n        },\n      });\n      enqueueSnackbar(`Vesting account created ${vesting}`, {\n        variant: 'success',\n      });\n      onClose();\n    } catch (err) {\n      enqueueSnackbar(`Error creating vesting account: ${err.toString()}`, {\n        variant: 'error',\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <Typography variant=\"h4\" component=\"h2\">\n          New Vesting Account\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          {isLoading && (\n            <div\n              style={{\n                width: '40px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '24px',\n              }}\n            >\n              <CircularProgress\n                style={{ marginLeft: 'auto', marginRight: 'auto' }}\n              />\n            </div>\n          )}\n          <div>\n            <div style={{ display: 'flex', width: '100%' }}>\n              <div style={{ flex: 1 }}>\n                <FormControl fullWidth>\n                  <InputLabel>From</InputLabel>\n                  <OwnedTokenAccountsSelect\n                    mint={mint}\n                    onChange={(f: PublicKey) => setFromAccount(f)}\n                  />\n                  <FormHelperText>Token account to send from</FormHelperText>\n                </FormControl>\n              </div>\n              <div>\n                <FormControl\n                  variant=\"outlined\"\n                  style={{ width: '200px', marginLeft: '10px' }}\n                >\n                  <InputLabel>Mint</InputLabel>\n                  <Select\n                    value={mintLabel}\n                    onChange={e => {\n                      const m = e.target.value;\n                      setMintLabel(m as string);\n                      if (m === 'srm') {\n                        setMint(network.srm);\n                      } else if (m === 'msrm') {\n                        setMint(network.msrm);\n                      }\n                      // TODO: add a textfield for a custom mint.\n                    }}\n                    label=\"Mint\"\n                  >\n                    <MenuItem value=\"srm\">SRM</MenuItem>\n                    <MenuItem value=\"msrm\">MSRM</MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginTop: '24px' }}>\n            <TextField\n              fullWidth\n              error={displayBeneficiaryError}\n              helperText={displayBeneficiaryError && 'Invalid beneficiary'}\n              label=\"Beneficiary\"\n              value={beneficiary}\n              onChange={e => setBeneficiary(e.target.value)}\n            />\n            <FormHelperText>Owner of the new vesting account</FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <TextField\n              error={displayAmountError}\n              helperText={displayAmountError && 'Invalid amount'}\n              fullWidth\n              label=\"Amount\"\n              value={amountStr}\n              onChange={e => setAmountStr(e.target.value)}\n            />\n            <FormHelperText>\n              Amount to deposit into the vesting account\n            </FormHelperText>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n              display: 'flex',\n            }}\n          >\n            <div style={{ flex: 1, marginRight: '10px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                defaultValue={defaultEndDate}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setTimestamp(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>Date when all tokens are vested</FormHelperText>\n            </div>\n            <div>\n              <TextField\n                disabled\n                fullWidth\n                label=\"Unix Timestamp\"\n                value={timestamp}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              marginTop: '24px',\n            }}\n          >\n            <FormControl fullWidth>\n              <TextField\n                id=\"outlined-number\"\n                label=\"Period Count\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={periodCount}\n                onChange={e =>\n                  setPeriodCount(parseInt(e.target.value) as number)\n                }\n                InputProps={{ inputProps: { min: 1 } }}\n              />\n              <FormHelperText>Number of vesting periods</FormHelperText>\n            </FormControl>\n          </div>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!submitBtnEnabled || isLoading}\n          onClick={() => createVestingClickHandler()}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport BN from 'bn.js';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slide from '@material-ui/core/Slide';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { PublicKey } from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { ViewTransactionOnExplorerButton } from '../../components/common/Notification';\nimport { State as StoreState } from '../../store/reducer';\nimport { ActionType } from '../../store/actions';\nimport EntityGallery, { EntityActivityLabel } from '../nodes/EntityGallery';\nimport Me from '../Me';\nimport Rewards from '../rewards/Rewards';\nimport Vestings from '../lockups/Vestings';\nimport VestingAccountsSelect from './VestingAccountsSelect';\n\nenum TabModel {\n  Me,\n  EntityGallery,\n  Rewards,\n  Lockup,\n}\n\nexport default function Stake() {\n  const [tab, setTab] = useState(TabModel.Me);\n  return (\n    <div>\n      <MyNodeBanner setTab={setTab} />\n      <Container fixed maxWidth=\"md\" style={{ flex: 1, display: 'flex' }}>\n        {tab === TabModel.Me && <Me />}\n        {tab === TabModel.EntityGallery && <EntityGallery />}\n        {tab === TabModel.Rewards && <Rewards />}\n        {tab === TabModel.Lockup && <Vestings />}\n      </Container>\n    </div>\n  );\n}\n\ntype MyNodeBannerProps = {\n  setTab: (t: TabModel) => void;\n};\n\nfunction MyNodeBanner(props: MyNodeBannerProps) {\n  const [tab, setTab] = useState(TabModel.Me);\n  const { member, entity } = useSelector((state: StoreState) => {\n    const member = state.registry.member;\n    return {\n      registrar: state.registry.registrar,\n      member: state.registry.member,\n      entity: state.registry.entities\n        .filter(\n          e =>\n            state.registry.member &&\n            e.publicKey.toString() ===\n              state.registry.member!.account.entity.toString(),\n        )\n        .pop(),\n      pendingWithdrawals: member\n        ? state.registry.pendingWithdrawals.get(member.publicKey.toString())\n        : [],\n    };\n  });\n  const [showDepositDialog, setShowDepositDialog] = useState(false);\n  const [showWithdrawDialog, setShowWithdrawDialog] = useState(false);\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: '#fff',\n          paddingTop: '24px',\n          borderBottom: 'solid 1pt #ccc',\n        }}\n      >\n        <Container\n          fixed\n          maxWidth=\"md\"\n          style={{\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <div>\n              <Typography variant=\"h4\" style={{ marginBottom: '10px' }}>\n                My Node\n              </Typography>\n            </div>\n            {entity && (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <EntityActivityLabel\n                  noBubble={true}\n                  textStyle={{ fontSize: '16px' }}\n                  entity={entity}\n                />\n              </div>\n            )}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div>\n              <Typography>\n                {member\n                  ? member?.account.entity.toString()\n                  : 'Account not found. Please create a stake account.'}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                Generation {member ? entity?.account.generation.toString() : 0}\n              </Typography>\n            </div>\n            <div>\n              <div>\n                <Button\n                  disabled={member === undefined}\n                  onClick={() => setShowDepositDialog(true)}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  style={{ marginRight: '10px' }}\n                >\n                  <ArrowDownwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Deposit\n                  </Typography>\n                </Button>\n                <Button\n                  disabled={member === undefined}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => setShowWithdrawDialog(true)}\n                >\n                  <ArrowUpwardIcon style={{ fontSize: '20px' }} />\n                  <Typography style={{ marginLeft: '5px', marginRight: '5px' }}>\n                    Withdraw\n                  </Typography>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            maxWidth: '960px',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            paddingLeft: '24px',\n            paddingRight: '24px',\n            marginTop: '10px',\n          }}\n        >\n          <Tabs\n            value={tab}\n            onChange={(_e, t) => {\n              setTab(t);\n              props.setTab(t);\n            }}\n          >\n            <Tab value={TabModel.Me} label=\"Me\" />\n            <Tab value={TabModel.EntityGallery} label=\"Nodes\" />\n            <Tab value={TabModel.Rewards} label=\"Rewards\" />\n            <Tab value={TabModel.Lockup} label=\"Lockups\" />\n          </Tabs>\n        </div>\n      </div>\n      {member !== undefined && (\n        <>\n          <DepositDialog\n            open={showDepositDialog}\n            onClose={() => setShowDepositDialog(false)}\n          />\n          <WithdrawDialog\n            open={showWithdrawDialog}\n            onClose={() => setShowWithdrawDialog(false)}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\ntype DepositDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\ntype Coin = 'srm' | 'lsrm' | 'msrm' | 'lmsrm';\n\nfunction DepositDialog(props: DepositDialogProps) {\n  const { open, onClose } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { registryClient, lockupClient } = useWallet();\n  const dispatch = useDispatch();\n  const { safe, registrar, member } = useSelector((state: StoreState) => {\n    return {\n      registrar: state.registry.registrar!,\n      safe: state.lockup.safe!,\n      member: state.registry.member!,\n    };\n  });\n  return (\n    <TransferDialog\n      deposit={true}\n      title={'Deposit'}\n      contextText={'Select the amount and coin you want to deposit'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        amount: number,\n        coin: Coin,\n        isLocked: boolean,\n      ) => {\n        enqueueSnackbar(\n          `Depositing ${amount} ${coin} from ${from.toString()}`,\n          {\n            variant: 'info',\n          },\n        );\n        const tx = await (async () => {\n          let vault =\n            coin === 'srm' || coin === 'lsrm'\n              ? registrar.account.vault\n              : registrar.account.megaVault;\n          if (isLocked) {\n            const { tx } = await registryClient.depositLocked({\n              amount: new BN(amount),\n              vesting: from,\n              safe: safe.account,\n              lockupClient,\n              registrar: registrar.account,\n              entity: member.account.entity,\n              member: member.publicKey,\n              vault,\n            });\n            return tx;\n          } else {\n            const { tx } = await registryClient.deposit({\n              member: member.publicKey,\n              depositor: from,\n              amount: new BN(amount),\n              entity: member.account.entity,\n              vault,\n              vaultOwner: await registryClient.accounts.vaultAuthority(\n                registryClient.programId,\n                registryClient.registrar,\n                registrar.account,\n              ),\n            });\n            return tx;\n          }\n        })();\n        const newMember = await registryClient.accounts.member(\n          member.publicKey,\n        );\n        const newEntity = await registryClient.accounts.entity(\n          member.account.entity,\n        );\n        dispatch({\n          type: ActionType.RegistrySetMember,\n          item: {\n            member: {\n              publicKey: member.publicKey,\n              account: newMember,\n            },\n          },\n        });\n        dispatch({\n          type: ActionType.RegistryUpdateEntity,\n          item: {\n            entity: {\n              publicKey: member.account.entity,\n              account: newEntity,\n            },\n          },\n        });\n        closeSnackbar();\n        enqueueSnackbar(`Deposit complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype WithdrawDialogProps = DepositDialogProps;\n\nfunction WithdrawDialog(props: WithdrawDialogProps) {\n  const { open, onClose } = props;\n  const { registryClient, lockupClient } = useWallet();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const { safe, registrar, member } = useSelector((state: StoreState) => {\n    return {\n      registrar: state.registry.registrar!,\n      safe: state.lockup.safe!,\n      member: state.registry.member!,\n    };\n  });\n  return (\n    <TransferDialog\n      title={'Withdraw'}\n      contextText={'Select the amount and coin you want to withdraw'}\n      open={open}\n      onClose={onClose}\n      onTransfer={async (\n        from: PublicKey,\n        amount: number,\n        coin: Coin,\n        isLocked: boolean,\n      ) => {\n        enqueueSnackbar(`Withdrawing ${amount} ${coin} to ${from.toString()}`, {\n          variant: 'info',\n        });\n        const tx = await (async () => {\n          let vault =\n            coin === 'srm' || coin === 'lsrm'\n              ? registrar.account.vault\n              : registrar.account.megaVault;\n          if (isLocked) {\n            const { tx } = await registryClient.withdrawLocked({\n              amount: new BN(amount),\n              vesting: from,\n              safe: safe.account,\n              lockupClient,\n              registrar: registrar.account,\n              entity: member.account.entity,\n              member: member.publicKey,\n              vault,\n            });\n            return tx;\n          } else {\n            const { tx } = await registryClient.withdraw({\n              member: member.publicKey,\n              depositor: from,\n              amount: new BN(amount),\n              entity: member.account.entity,\n              vault,\n              vaultOwner: await registryClient.accounts.vaultAuthority(\n                registryClient.programId,\n                registryClient.registrar,\n                registrar.account,\n              ),\n            });\n            return tx;\n          }\n        })();\n        const newMember = await registryClient.accounts.member(\n          member.publicKey,\n        );\n        const newEntity = await registryClient.accounts.entity(\n          member.account.entity,\n        );\n        dispatch({\n          type: ActionType.RegistrySetMember,\n          item: {\n            member: {\n              publicKey: member.publicKey,\n              account: newMember,\n            },\n          },\n        });\n        dispatch({\n          type: ActionType.RegistryUpdateEntity,\n          item: {\n            entity: {\n              publicKey: member.account.entity,\n              account: newEntity,\n            },\n          },\n        });\n        closeSnackbar();\n        enqueueSnackbar(`Withdraw complete`, {\n          variant: 'success',\n          action: <ViewTransactionOnExplorerButton signature={tx} />,\n        });\n        onClose();\n      }}\n    />\n  );\n}\n\ntype TransferDialogProps = {\n  title: string;\n  contextText: string;\n  open: boolean;\n  deposit?: boolean;\n  onClose: () => void;\n  onTransfer: (\n    from: PublicKey,\n    amount: number,\n    coin: Coin,\n    isLocked: boolean,\n  ) => Promise<void>;\n};\n\nfunction TransferDialog(props: TransferDialogProps) {\n  const { srmMint, msrmMint } = useSelector((state: StoreState) => {\n    const network = state.common.network;\n    return {\n      srmMint: network.srm,\n      msrmMint: network.msrm,\n    };\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  const { open, onClose, onTransfer, title, contextText, deposit } = props;\n  const [amount, setAmount] = useState<null | number>(null);\n  const [coin, setCoin] = useState<null | Coin>(null);\n  const [from, setFrom] = useState<null | PublicKey>(null);\n  const [vesting, setVesting] = useState<null | PublicKey>(null);\n  const [maxAmount, setMaxAmount] = useState<null | number>(null);\n  const mint = !coin\n    ? undefined\n    : coin === 'srm' || coin === 'lsrm'\n    ? srmMint\n    : msrmMint;\n  const isLocked = coin === 'lsrm' || coin === 'lmsrm';\n  const submitBtnDisabled =\n    (isLocked ? !vesting : !from) ||\n    !amount ||\n    !coin ||\n    !maxAmount ||\n    amount > maxAmount;\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={onClose}\n        fullWidth\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <TextField\n                style={{ width: '100%' }}\n                id=\"outlined-number\"\n                label=\"Amount\"\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                onChange={e => setAmount(parseInt(e.target.value) as number)}\n                InputProps={{ inputProps: { min: 0, max: maxAmount ?? 0 } }}\n              />\n              <FormHelperText>{contextText}</FormHelperText>\n            </div>\n            <div>\n              <FormControl\n                variant=\"outlined\"\n                style={{ minWidth: '100px', marginLeft: '10px' }}\n              >\n                <InputLabel>Coin</InputLabel>\n                <Select\n                  value={coin}\n                  onChange={e => setCoin(e.target.value as Coin)}\n                  label=\"Coin\"\n                >\n                  <MenuItem value=\"srm\">SRM</MenuItem>\n                  <MenuItem value=\"msrm\">MSRM</MenuItem>\n                  <MenuItem value=\"lsrm\">Locked SRM</MenuItem>\n                  <MenuItem value=\"lmsrm\">Locked MSRM</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <FormControl fullWidth>\n            {!isLocked ? (\n              <>\n                <OwnedTokenAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  onChange={(f: PublicKey, maxAmount: BN) => {\n                    setFrom(f);\n                    setMaxAmount(maxAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Token account to transfer to/from\n                </FormHelperText>\n              </>\n            ) : (\n              <>\n                <VestingAccountsSelect\n                  variant=\"outlined\"\n                  mint={mint}\n                  deposit={deposit}\n                  onChange={(v: PublicKey, maxAmount: BN) => {\n                    setVesting(v);\n                    setMaxAmount(maxAmount.toNumber());\n                  }}\n                />\n                <FormHelperText>\n                  Vesting account to transfer to/from\n                </FormHelperText>\n              </>\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            //@ts-ignore\n            onClick={() =>\n              onTransfer(\n                isLocked ? vesting! : from!,\n                amount!,\n                coin!,\n                isLocked,\n              ).catch(err => {\n                enqueueSnackbar(`Error transferring funds: ${err.toString()}`, {\n                  variant: 'error',\n                });\n              })\n            }\n            color=\"primary\"\n            disabled={submitBtnDisabled}\n          >\n            {title}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n","import React, { useState, useEffect } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport { FixedScaleAxis, IChartOptions, Interpolation } from 'chartist';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from '@material-ui/core/Link';\nimport { accounts } from '@project-serum/lockup';\nimport { Network } from '@project-serum/common';\nimport { PublicKey } from '@solana/web3.js';\nimport { ProgramAccount } from '../../store/reducer';\nimport { useWallet } from '../common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../../components/common/OwnedTokenAccountsSelect';\nimport { withTx } from '../../components/common/Notification';\n\ntype VestingAccountCardProps = {\n  network: Network;\n  vesting: ProgramAccount<accounts.Vesting>;\n};\n\nexport default function VestingAccountCard(props: VestingAccountCardProps) {\n  const { vesting, network } = props;\n  const { lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const currencyLabel = vesting.account.mint.equals(network.srm)\n    ? 'SRM'\n    : vesting.account.mint.equals(network.msrm)\n    ? 'MSRM'\n    : vesting.account.mint.toString();\n\n  const startTs = vesting.account.startTs;\n  const endTs = vesting.account.endTs;\n\n  const tsOverflow = endTs.sub(startTs).mod(vesting.account.periodCount);\n  const shiftedStartTs = startTs.sub(tsOverflow);\n\n  const period = endTs.sub(shiftedStartTs).div(vesting.account.periodCount);\n\n  // Make the horizontal axis evenly spaced.\n  //\n  // Vesting dates assuming we stretch the start date back in time (so that the\n  // periods are of even length).\n  const vestingDates = [\n    ...Array(vesting.account.periodCount.toNumber() + 1),\n  ].map((_, idx) => {\n    return formatDate(\n      new Date((shiftedStartTs.toNumber() + idx * period.toNumber()) * 1000),\n    );\n  });\n  // Now push the start window forward to the real start date, making the first period shorter.\n  vestingDates[0] = formatDate(new Date(startTs.toNumber() * 1000));\n\n  // Now do the same thing on the vertical axis.\n  const rewardOverflow = vesting.account.startBalance.mod(\n    vesting.account.periodCount,\n  );\n  const rewardPerPeriod = vesting.account.startBalance\n    .sub(rewardOverflow)\n    .div(vesting.account.periodCount)\n    .toNumber();\n  const cumulativeVesting = [...Array(vestingDates.length)].map(() => 0);\n  cumulativeVesting[1] = rewardPerPeriod + rewardOverflow.toNumber();\n  for (let k = 2; k < cumulativeVesting.length; k += 1) {\n    cumulativeVesting[k] = cumulativeVesting[k - 1] + rewardPerPeriod;\n  }\n\n  const startLabel = formatDate(\n    new Date(vesting.account.startTs.toNumber() * 1000),\n  );\n  const endLabel = formatDate(\n    new Date(vesting.account.endTs.toNumber() * 1000),\n  );\n  const urlSuffix = `?cluster=${network.explorerClusterSuffix}`;\n\n  const [\n    availableForWithdrawal,\n    setAvailableForWithdrawal,\n  ] = useState<null | BN>(null);\n  const [withdrawalAccount, setWithdrawalAccount] = useState<null | PublicKey>(\n    null,\n  );\n\n  useEffect(() => {\n    lockupClient.accounts\n      .availableForWithdrawal(vesting.publicKey)\n      .then(amount => {\n        setAvailableForWithdrawal(amount);\n      })\n      .catch(err => {\n        enqueueSnackbar(\n          `Error fetching available for withdrawal: ${err.toString()}`,\n          {\n            variant: 'error',\n          },\n        );\n      });\n  }, [lockupClient.accounts, vesting, enqueueSnackbar]);\n  const snack = useSnackbar();\n\n  const withdrawEnabled =\n    withdrawalAccount !== null &&\n    availableForWithdrawal !== null &&\n    availableForWithdrawal.gtn(0);\n  const withdraw = async () => {\n    await withTx(\n      snack,\n      'Withdrawing locked tokens',\n      'Tokens unlocked',\n      async () => {\n        const { tx } = await lockupClient.withdraw({\n          amount: availableForWithdrawal!,\n          vesting: vesting.publicKey,\n          tokenAccount: withdrawalAccount!,\n        });\n        return tx;\n      },\n    );\n  };\n\n  return (\n    <Card\n      key={vesting.publicKey.toString()}\n      style={{\n        marginTop: '24px',\n      }}\n    >\n      <CardContent>\n        <ListItem>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <ListItemText\n              primary={\n                <Link\n                  href={\n                    `https://explorer.solana.com/account/${vesting.publicKey.toBase58()}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {vesting.publicKey.toString()}\n                </Link>\n              }\n              secondary={`${startLabel}, ${endLabel} | ${vesting.account.periodCount.toNumber()} periods`}\n            />\n            <div\n              style={{\n                marginTop: '6px',\n                color: 'rgba(0, 0, 0, 0.54)',\n                display: 'flex',\n                justifyContent: 'space-between',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography variant=\"body1\">\n                {`${vesting.account.outstanding.toNumber()} ${currencyLabel}`}\n              </Typography>\n            </div>\n          </div>\n        </ListItem>\n        <ChartistGraph\n          data={{\n            labels: vestingDates,\n            series: [cumulativeVesting],\n          }}\n          options={\n            {\n              axisY: {\n                type: FixedScaleAxis,\n                low: 0,\n                high: cumulativeVesting[cumulativeVesting.length - 1],\n                ticks: cumulativeVesting,\n              },\n              axisX: {\n                ticks: vestingDates,\n              },\n              lineSmooth: Interpolation.step(),\n              height: 400,\n            } as IChartOptions\n          }\n          type={'Line'}\n        />\n        <div>\n          <Typography>\n            Available for withdrawal:{' '}\n            {availableForWithdrawal === null ? (\n              <CircularProgress />\n            ) : (\n              availableForWithdrawal.toString()\n            )}\n          </Typography>\n          <Typography>\n            Locked outstanding: {vesting.account.outstanding.toString()}\n          </Typography>\n          <Typography>\n            Current balance:{' '}\n            {vesting.account.outstanding\n              .sub(vesting.account.whitelistOwned)\n              .toString()}\n          </Typography>\n          <Typography>\n            Initial lockup: {vesting.account.startBalance.toString()}\n          </Typography>\n          <Typography>\n            Whitelist owned: {vesting.account.whitelistOwned.toString()}\n          </Typography>\n          <Typography>Vault: {vesting.account.vault.toString()}</Typography>\n          <Typography>\n            Start timestamp: {vesting.account.startTs.toString()}\n          </Typography>\n          <Typography>\n            End timestamp: {vesting.account.endTs.toString()}\n          </Typography>\n          <div style={{ marginTop: '10px' }}>\n            <OwnedTokenAccountsSelect\n              mint={vesting.account.mint}\n              onChange={(f: PublicKey) => setWithdrawalAccount(f)}\n            />\n            <div style={{ marginTop: '10px' }}>\n              <Button\n                color=\"primary\"\n                disabled={!withdrawEnabled}\n                variant=\"contained\"\n                onClick={() =>\n                  withdraw().catch(err => {\n                    enqueueSnackbar(\n                      `Error withdrawing from vesting account: ${err.toString()}`,\n                      {\n                        variant: 'error',\n                      },\n                    );\n                  })\n                }\n              >\n                Withdraw\n              </Button>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row-reverse',\n          marginBottom: '16px',\n          marginRight: '16px',\n        }}\n      >\n        <Typography color=\"textSecondary\">\n          Granted by {vesting.account.grantor.toString()}\n        </Typography>\n      </div>\n    </Card>\n  );\n}\n\n// TODO: locale format without minutes, hours, seconds?\nfunction formatDate(d: Date): string {\n  return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\n\nexport default function Vestings() {\n  const { wallet } = useWallet();\n  const { vestingAccounts, network } = useSelector((state: StoreState) => {\n    return {\n      vestingAccounts: state.lockup.vestings,\n      network: state.common.network,\n    };\n  });\n  return (\n    <Container fixed maxWidth=\"md\" style={{ flex: 1 }}>\n      <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n        />\n        <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n        {wallet.publicKey && (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginBottom: '24px',\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                flexDirection: 'column',\n              }}\n            >\n              <Typography\n                style={{\n                  fontSize: '20px',\n                  fontWeight: 'bold',\n                }}\n              >\n                My Vesting Accounts\n              </Typography>\n            </div>\n            <div>\n              <NewVestingButton />\n            </div>\n          </div>\n        )}\n        <List disablePadding>\n          {vestingAccounts.map(v => (\n            <VestingAccountCard network={network} vesting={v} />\n          ))}\n          {vestingAccounts.length === 0 && (\n            <Card\n              style={{\n                marginTop: '24px',\n              }}\n            >\n              <CardContent>\n                <ListItem>\n                  <div\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                    }}\n                  >\n                    <Typography color=\"textSecondary\" variant=\"h6\">\n                      No vesting accounts found\n                    </Typography>\n                  </div>\n                </ListItem>\n              </CardContent>\n            </Card>\n          )}\n        </List>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport * as lockup from '@project-serum/lockup';\nimport { ProgramAccount } from '@project-serum/common';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n  deposit?: boolean;\n};\n\nexport default function VestingAccountsSelect(p: Props) {\n  const { mint, variant, onChange, style, deposit } = p;\n  const vestings = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.lockup.vestings.filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n        onChange(pubkey, availableAmount(v!, deposit));\n      }}\n    >\n      {vestings.length === 0 ? (\n        <MenuItem value={''}>No vesting accounts found</MenuItem>\n      ) : (\n        vestings.map(v => {\n          return (\n            <MenuItem value={v.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${v.publicKey.toString()}`}</div>\n                <div\n                  style={{ float: 'right', color: '#ccc' }}\n                >{`${availableAmount(v, deposit).toString()}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction availableAmount(\n  v: ProgramAccount<lockup.accounts.Vesting>,\n  deposit?: boolean,\n): BN {\n  return deposit\n    ? v.account.outstanding.sub(v.account.whitelistOwned)\n    : v.account.whitelistOwned;\n}\n","import React from 'react';\nimport MyNode from '../components/common/MyNode';\n\nexport default function MyNodePage() {\n  return <MyNode />;\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\nimport { store } from './store';\nimport WalletProvider from './components/common/WalletProvider';\nimport BootstrapProvider from './components/common/BootstrapProvider';\nimport Layout from './components/common/Layout';\nimport MyNodePage from './pages/MyNode';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      background: {\n        default: 'rgb(255,255,255)',\n      },\n    },\n    typography: {\n      fontFamily: ['Source Sans Pro', 'sans-serif'].join(','),\n    },\n    overrides: {},\n  });\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n          <WalletProvider>\n            <BootstrapProvider>\n              <HashRouter basename={'/'}>\n                <Layout>\n                  <Route exact path=\"/\" component={MyNodePage} />\n                </Layout>\n              </HashRouter>\n            </BootstrapProvider>\n          </WalletProvider>\n        </SnackbarProvider>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeAccount = exports.mintTo = exports.setAuthority = exports.revoke = exports.approve = exports.transfer = exports.initializeAccount = exports.initializeMint = exports.decodeTokenInstructionData = exports.SRM_DECIMALS = exports.SRM_MINT = exports.MSRM_DECIMALS = exports.MSRM_MINT = exports.WRAPPED_SOL_MINT = exports.TOKEN_PROGRAM_ID = exports.CLOSE_ACCOUNT_OWNER_INDEX = exports.CLOSE_ACCOUNT_DESTINATION_INDEX = exports.CLOSE_ACCOUNT_SOURCE_INDEX = exports.TRANSFER_OWNER_INDEX = exports.TRANSFER_DESTINATION_INDEX = exports.TRANSFER_SOURCE_INDEX = exports.INITIALIZE_ACCOUNT_OWNER_INDEX = exports.INITIALIZE_ACCOUNT_MINT_INDEX = exports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = void 0;\nconst BufferLayout = __importStar(require(\"buffer-layout\"));\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./layout\");\n// NOTE: Update these if the position of arguments for the initializeAccount instruction changes\nexports.INITIALIZE_ACCOUNT_ACCOUNT_INDEX = 0;\nexports.INITIALIZE_ACCOUNT_MINT_INDEX = 1;\nexports.INITIALIZE_ACCOUNT_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the transfer instruction changes\nexports.TRANSFER_SOURCE_INDEX = 0;\nexports.TRANSFER_DESTINATION_INDEX = 1;\nexports.TRANSFER_OWNER_INDEX = 2;\n// NOTE: Update these if the position of arguments for the closeAccount instruction changes\nexports.CLOSE_ACCOUNT_SOURCE_INDEX = 0;\nexports.CLOSE_ACCOUNT_DESTINATION_INDEX = 1;\nexports.CLOSE_ACCOUNT_OWNER_INDEX = 2;\nexports.TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nexports.WRAPPED_SOL_MINT = new web3_js_1.PublicKey('So11111111111111111111111111111111111111112');\nexports.MSRM_MINT = new web3_js_1.PublicKey('MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L');\nexports.MSRM_DECIMALS = 0;\nexports.SRM_MINT = new web3_js_1.PublicKey('SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt');\nexports.SRM_DECIMALS = 6;\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(0, BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    layout_1.publicKeyLayout('mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    layout_1.publicKeyLayout('freezeAuthority'),\n]), 'initializeMint');\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(3, BufferLayout.struct([BufferLayout.nu64('amount')]), 'transfer');\nLAYOUT.addVariant(4, BufferLayout.struct([BufferLayout.nu64('amount')]), 'approve');\nLAYOUT.addVariant(5, BufferLayout.struct([]), 'revoke');\nLAYOUT.addVariant(6, BufferLayout.struct([\n    BufferLayout.u8('authorityType'),\n    BufferLayout.u8('newAuthorityOption'),\n    layout_1.publicKeyLayout('newAuthority'),\n]), 'setAuthority');\nLAYOUT.addVariant(7, BufferLayout.struct([BufferLayout.nu64('amount')]), 'mintTo');\nLAYOUT.addVariant(8, BufferLayout.struct([BufferLayout.nu64('amount')]), 'burn');\nLAYOUT.addVariant(9, BufferLayout.struct([]), 'closeAccount');\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\nfunction encodeTokenInstructionData(instruction) {\n    const b = Buffer.alloc(instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    return b.slice(0, span);\n}\nfunction decodeTokenInstructionData(instruction) {\n    return LAYOUT.decode(instruction);\n}\nexports.decodeTokenInstructionData = decodeTokenInstructionData;\nfunction initializeMint({ mint, decimals, mintAuthority, freezeAuthority = null, }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeMint: {\n                decimals,\n                mintAuthority,\n                freezeAuthorityOption: !!freezeAuthority,\n                freezeAuthority: freezeAuthority || new web3_js_1.PublicKey(0),\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeMint = initializeMint;\nfunction initializeAccount({ account, mint, owner }) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            initializeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.initializeAccount = initializeAccount;\nfunction transfer({ source, destination, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            transfer: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.transfer = transfer;\nfunction approve({ source, delegate, amount, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            approve: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.approve = approve;\nfunction revoke({ source, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            revoke: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.revoke = revoke;\nfunction setAuthority({ target, currentAuthority, newAuthority, authorityType, }) {\n    const keys = [\n        { pubkey: target, isSigner: false, isWritable: true },\n        { pubkey: currentAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            setAuthority: {\n                authorityType,\n                newAuthorityOption: !!newAuthority,\n                newAuthority,\n            },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.setAuthority = setAuthority;\nfunction mintTo({ mint, destination, amount, mintAuthority }) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: mintAuthority, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            mintTo: { amount },\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.mintTo = mintTo;\nfunction closeAccount({ source, destination, owner }) {\n    const keys = [\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: true, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        data: encodeTokenInstructionData({\n            closeAccount: {},\n        }),\n        programId: exports.TOKEN_PROGRAM_ID,\n    });\n}\nexports.closeAccount = closeAccount;\n//# sourceMappingURL=token-instructions.js.map","import { u8, struct } from 'buffer-layout';\nimport { i64, publicKey, rustEnum, u64, vecU8 } from '@project-serum/borsh';\nimport { WHITELIST_ENTRY_LAYOUT } from './accounts/whitelist';\nconst LOCKUP_INSTRUCTION_LAYOUT = rustEnum([\n    struct([publicKey('authority')], 'initialize'),\n    struct([\n        publicKey('beneficiary'),\n        i64('endTs'),\n        u64('periodCount'),\n        u64('depositAmount'),\n        u8('nonce'),\n    ], 'createVesting'),\n    struct([u64('amount')], 'withdraw'),\n    struct([u64('amount'), vecU8('instructionData')], 'whitelistWithdraw'),\n    struct([vecU8('instructionData')], 'whitelistDeposit'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistAdd'),\n    struct([WHITELIST_ENTRY_LAYOUT.replicate('entry')], 'whitelistDelete'),\n    struct([publicKey('newAuthority')], 'setAuthority'),\n    struct([], 'availableForWithdrawal'),\n]);\nexport function decode(data) {\n    return LOCKUP_INSTRUCTION_LAYOUT.decode(data);\n}\nexport function encode(i) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = LOCKUP_INSTRUCTION_LAYOUT.encode(i, buffer);\n    return buffer.slice(0, len);\n}\n//# sourceMappingURL=instruction.js.map","import { SystemProgram, TransactionInstruction, } from '@solana/web3.js';\nimport * as instruction from './instruction';\nimport * as accounts from './accounts';\nexport async function initializeInstrs(params) {\n    const { programId, authority, name, about, imageUrl, provider, metadataAccount, entity, mqueue, } = params;\n    return [\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: metadataAccount.publicKey,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.metadata.SIZE),\n            space: accounts.metadata.SIZE,\n            programId,\n        }),\n        SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: mqueue.publicKey,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(accounts.mqueue.SIZE),\n            space: accounts.mqueue.SIZE,\n            programId,\n        }),\n        new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: metadataAccount.publicKey,\n                    isWritable: true,\n                    isSigner: false,\n                },\n            ],\n            programId,\n            data: instruction.encode({\n                initialize: {\n                    authority,\n                    entity,\n                    name,\n                    about,\n                    imageUrl,\n                    chat: mqueue.publicKey,\n                },\n            }),\n        }),\n    ];\n}\nexport async function updateInstr(params) {\n    const { programId, authority, name, about, chat, metadata, imageUrl, } = params;\n    return new TransactionInstruction({\n        keys: [\n            { pubkey: metadata, isWritable: true, isSigner: false },\n            { pubkey: authority, isWritable: false, isSigner: true },\n        ],\n        programId,\n        data: instruction.encode({\n            updateMetaEntity: {\n                name,\n                about,\n                imageUrl,\n                chat,\n            },\n        }),\n    });\n}\n//# sourceMappingURL=transaction.js.map","import { struct, u8 } from 'buffer-layout';\nimport { publicKey, option } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nexport class Whitelist {\n    constructor(safe, entries) {\n        this.safe = safe;\n        this.entries = entries;\n    }\n    static ITEM_START() {\n        return 32;\n    }\n    static LEN() {\n        return 50;\n    }\n    static ITEM_SIZE() {\n        return 65;\n    }\n    static SIZE() {\n        return Whitelist.ITEM_START() + Whitelist.LEN() * Whitelist.ITEM_SIZE();\n    }\n}\nexport const WHITELIST_ENTRY_LAYOUT = struct([\n    publicKey('programId'),\n    option(publicKey(), 'instance'),\n    u8('nonce'),\n]);\nexport function decode(data) {\n    if (data.length !== SIZE) {\n        throw new Error(`invalid buffer len: ${data.length}`);\n    }\n    const entries = [];\n    const safe = new PublicKey(data.slice(0, Whitelist.ITEM_START()));\n    for (let k = Whitelist.ITEM_START(); k < Whitelist.SIZE(); k += Whitelist.ITEM_SIZE()) {\n        const programId = new PublicKey(data.slice(k, k + 32));\n        const instance = new PublicKey(data.slice(k + 32, k + 64));\n        const nonce = data[k + 64];\n        entries.push({\n            programId,\n            instance,\n            nonce,\n        });\n    }\n    return new Whitelist(safe, entries);\n}\nexport const SIZE = Whitelist.SIZE();\n//# sourceMappingURL=whitelist.js.map","import { struct, u8 } from 'buffer-layout';\nimport { bool, i64, publicKey, u64 as borshU64 } from '@project-serum/borsh';\nimport { PublicKey } from '@solana/web3.js';\nimport { u64 } from '@solana/spl-token';\nconst REGISTRAR_LAYOUT = struct([\n    bool('initialized'),\n    publicKey('authority'),\n    u8('nonce'),\n    borshU64('rewardActivationThreshold'),\n    borshU64('maxStakePerEntity'),\n    i64('withdrawalTimelock'),\n    i64('deactivationTimelock'),\n    publicKey('vault'),\n    publicKey('megaVault'),\n    publicKey('pool'),\n    publicKey('megaPool'),\n    publicKey('poolProgramId'),\n    publicKey('rewardEventQueue'),\n]);\nexport function decode(data) {\n    return REGISTRAR_LAYOUT.decode(data);\n}\nexport function encode(r) {\n    const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n    const len = REGISTRAR_LAYOUT.encode(r, buffer);\n    return buffer.slice(0, len);\n}\nexport const SIZE = encode({\n    initialized: false,\n    authority: new PublicKey(Buffer.alloc(32)),\n    nonce: 0,\n    rewardActivationThreshold: new u64(0),\n    maxStakePerEntity: new u64(0),\n    withdrawalTimelock: new u64(0),\n    deactivationTimelock: new u64(0),\n    vault: new PublicKey(Buffer.alloc(32)),\n    megaVault: new PublicKey(Buffer.alloc(32)),\n    pool: new PublicKey(Buffer.alloc(32)),\n    megaPool: new PublicKey(Buffer.alloc(32)),\n    poolProgramId: new PublicKey(Buffer.alloc(32)),\n    rewardEventQueue: new PublicKey(Buffer.alloc(32)),\n}).length;\nexport const STAKE_POOL_NAME = '';\nexport const MEGA_STAKE_POOL_NAME = '';\n//# sourceMappingURL=registrar.js.map"],"sourceRoot":""}